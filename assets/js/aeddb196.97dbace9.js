"use strict";(self.webpackChunk_graphql_markdown_website=self.webpackChunk_graphql_markdown_website||[]).push([["8383"],{28374:function(e,n,r){r.r(n),r.d(n,{default:()=>d,frontMatter:()=>a,metadata:()=>t,assets:()=>s,toc:()=>c,contentTitle:()=>l});var t=JSON.parse('{"id":"printer-legacy/group","title":"group","description":"Utility module for handling GraphQL schema entity grouping.","source":"@site/api/printer-legacy/group.md","sourceDirName":"printer-legacy","slug":"/printer-legacy/group","permalink":"/api/printer-legacy/group","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{"title":"group","pagination_prev":null,"pagination_next":null,"toc_max_heading_level":2},"sidebar":"defaultSidebar"}'),i=r("85893"),o=r("50065");let a={title:"group",pagination_prev:null,pagination_next:null,toc_max_heading_level:2},l=void 0,s={},c=[{value:"getGroup()",id:"getgroup",level:2},{value:"Parameters",id:"parameters",level:3},{value:"type",id:"type",level:4},{value:"groups",id:"groups",level:4},{value:"typeCategory",id:"typecategory",level:4},{value:"Returns",id:"returns",level:3}];function p(e){let n={code:"code",h2:"h2",h3:"h3",h4:"h4",p:"p",pre:"pre",...(0,o.a)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.p,{children:"Utility module for handling GraphQL schema entity grouping."}),"\n",(0,i.jsx)(n.h2,{id:"getgroup",children:"getGroup()"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-ts",children:"function getGroup(\n   type, \n   groups, \n   typeCategory): string;\n"})}),"\n",(0,i.jsx)(n.p,{children:"Defined in: group.ts:24"}),"\n",(0,i.jsx)(n.p,{children:"Retrieves the group name for a given GraphQL type based on its category and group mapping."}),"\n",(0,i.jsx)(n.h3,{id:"parameters",children:"Parameters"}),"\n",(0,i.jsx)(n.h4,{id:"type",children:"type"}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.code,{children:"unknown"})}),"\n",(0,i.jsx)(n.p,{children:"The GraphQL type to get the group for"}),"\n",(0,i.jsx)(n.h4,{id:"groups",children:"groups"}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.code,{children:"Maybe"}),"<",(0,i.jsx)(n.code,{children:"Partial"}),"<",(0,i.jsx)(n.code,{children:"Record"}),"<",(0,i.jsx)(n.code,{children:"SchemaEntity"}),", ",(0,i.jsx)(n.code,{children:"Record"}),"<",(0,i.jsx)(n.code,{children:"string"}),", ",(0,i.jsx)(n.code,{children:"Maybe"}),"<",(0,i.jsx)(n.code,{children:"string"}),">>>>>"]}),"\n",(0,i.jsx)(n.p,{children:"Mapping of schema entities to their group names"}),"\n",(0,i.jsx)(n.h4,{id:"typecategory",children:"typeCategory"}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.code,{children:"Maybe"}),"<",(0,i.jsx)(n.code,{children:"SchemaEntity"}),">"]}),"\n",(0,i.jsx)(n.p,{children:"The category of the schema entity"}),"\n",(0,i.jsx)(n.h3,{id:"returns",children:"Returns"}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.code,{children:"string"})}),"\n",(0,i.jsx)(n.p,{children:"The slugified group name or empty string if no group is found"})]})}function d(e={}){let{wrapper:n}={...(0,o.a)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(p,{...e})}):p(e)}},50065:function(e,n,r){r.d(n,{Z:function(){return l},a:function(){return a}});var t=r(67294);let i={},o=t.createContext(i);function a(e){let n=t.useContext(o);return t.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:a(e.components),t.createElement(o.Provider,{value:n},e.children)}}}]);