"use strict";(self.webpackChunk_graphql_markdown_website=self.webpackChunk_graphql_markdown_website||[]).push([[8116],{4137:(e,r,t)=>{t.d(r,{Zo:()=>s,kt:()=>y});var a=t(7294);function n(e,r,t){return r in e?Object.defineProperty(e,r,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[r]=t,e}function l(e,r){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);r&&(a=a.filter((function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable}))),t.push.apply(t,a)}return t}function o(e){for(var r=1;r<arguments.length;r++){var t=null!=arguments[r]?arguments[r]:{};r%2?l(Object(t),!0).forEach((function(r){n(e,r,t[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):l(Object(t)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(t,r))}))}return e}function p(e,r){if(null==e)return{};var t,a,n=function(e,r){if(null==e)return{};var t,a,n={},l=Object.keys(e);for(a=0;a<l.length;a++)t=l[a],r.indexOf(t)>=0||(n[t]=e[t]);return n}(e,r);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(a=0;a<l.length;a++)t=l[a],r.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(n[t]=e[t])}return n}var i=a.createContext({}),u=function(e){var r=a.useContext(i),t=r;return e&&(t="function"==typeof e?e(r):o(o({},r),e)),t},s=function(e){var r=u(e.components);return a.createElement(i.Provider,{value:r},e.children)},c="mdxType",m={inlineCode:"code",wrapper:function(e){var r=e.children;return a.createElement(a.Fragment,{},r)}},d=a.forwardRef((function(e,r){var t=e.components,n=e.mdxType,l=e.originalType,i=e.parentName,s=p(e,["components","mdxType","originalType","parentName"]),c=u(t),d=n,y=c["".concat(i,".").concat(d)]||c[d]||m[d]||l;return t?a.createElement(y,o(o({ref:r},s),{},{components:t})):a.createElement(y,o({ref:r},s))}));function y(e,r){var t=arguments,n=r&&r.mdxType;if("string"==typeof e||n){var l=t.length,o=new Array(l);o[0]=d;var p={};for(var i in r)hasOwnProperty.call(r,i)&&(p[i]=r[i]);p.originalType=e,p[c]="string"==typeof e?e:n,o[1]=p;for(var u=2;u<l;u++)o[u]=t[u];return a.createElement.apply(null,o)}return a.createElement.apply(null,t)}d.displayName="MDXCreateElement"},3994:(e,r,t)=>{t.r(r),t.d(r,{assets:()=>i,contentTitle:()=>o,default:()=>c,frontMatter:()=>l,metadata:()=>p,toc:()=>u});var a=t(7462),n=(t(7294),t(4137));const l={title:"array",pagination_prev:null,pagination_next:null,toc_max_heading_level:2},o=void 0,p={unversionedId:"utils/array",id:"utils/array",title:"array",description:"Internal library of helpers for converting array \\``  list.",source:"@site/api/utils/array.md",sourceDirName:"utils",slug:"/utils/array",permalink:"/api/utils/array",draft:!1,tags:[],version:"current",frontMatter:{title:"array",pagination_prev:null,pagination_next:null,toc_max_heading_level:2},sidebar:"defaultSidebar"},i={},u=[{value:"convertArrayToMapObject()",id:"convertarraytomapobject",level:2},{value:"Type parameters",id:"type-parameters",level:3},{value:"Parameters",id:"parameters",level:3},{value:"Returns",id:"returns",level:3},{value:"Example",id:"example",level:3},{value:"Source",id:"source",level:3},{value:"toArray()",id:"toarray",level:2},{value:"Parameters",id:"parameters-1",level:3},{value:"Returns",id:"returns-1",level:3},{value:"Example",id:"example-1",level:3},{value:"Source",id:"source-1",level:3}],s={toc:u};function c(e){let{components:r,...t}=e;return(0,n.kt)("wrapper",(0,a.Z)({},s,t,{components:r,mdxType:"MDXLayout"}),(0,n.kt)("p",null,"Internal library of helpers for converting array ","`","<-",">","`  list."),(0,n.kt)("h2",{id:"convertarraytomapobject"},"convertArrayToMapObject()"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-ts"},"convertArrayToMapObject<T>(list): Maybe<Record<string, T>>\n")),(0,n.kt)("p",null,"Returns a k/v object from an array of objects with a ",(0,n.kt)("inlineCode",{parentName:"p"},"name")," property."),(0,n.kt)("h3",{id:"type-parameters"},"Type parameters"),(0,n.kt)("p",null,"\u25aa ",(0,n.kt)("strong",{parentName:"p"},"T")),(0,n.kt)("p",null,"the type of objects the list contains."),(0,n.kt)("h3",{id:"parameters"},"Parameters"),(0,n.kt)("p",null,"\u25aa ",(0,n.kt)("strong",{parentName:"p"},"list"),": ",(0,n.kt)("inlineCode",{parentName:"p"},"Maybe"),"\\<",(0,n.kt)("inlineCode",{parentName:"p"},"T"),"[]",">"),(0,n.kt)("p",null,"the list of objects of type ",(0,n.kt)("inlineCode",{parentName:"p"},"{ name: any }")," to be converted."),(0,n.kt)("h3",{id:"returns"},"Returns"),(0,n.kt)("p",null,"an array of object values with ",(0,n.kt)("inlineCode",{parentName:"p"},"name")," as key, or ",(0,n.kt)("inlineCode",{parentName:"p"},"undefined")," if ",(0,n.kt)("inlineCode",{parentName:"p"},"list")," is not a valid array."),(0,n.kt)("h3",{id:"example"},"Example"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-js"},'import { convertArrayToMapObject } from \'@graphql-markdown/utils/array\';\n\nconvertArrayToMapObject([\n    { name: true },\n    { name: "test" },\n    { name: 123 },\n    { name2: 1234 },\n  ]);\n\n// Expected result: {\n//   true: { name: true },\n//   test: { name: "test" },\n//   "123": { name: 123 },\n// }\n')),(0,n.kt)("h3",{id:"source"},"Source"),(0,n.kt)("p",null,(0,n.kt)("a",{parentName:"p",href:"https://github.com/graphql-markdown/graphql-markdown/blob/fdeba50/packages/utils/src/array.ts#L76"},"array.ts:76")),(0,n.kt)("hr",null),(0,n.kt)("h2",{id:"toarray"},"toArray()"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-ts"},"toArray(recordMap): Maybe<unknown[]>\n")),(0,n.kt)("p",null,"Returns an array of values from a k/v object."),(0,n.kt)("h3",{id:"parameters-1"},"Parameters"),(0,n.kt)("p",null,"\u25aa ",(0,n.kt)("strong",{parentName:"p"},"recordMap"),": ",(0,n.kt)("inlineCode",{parentName:"p"},"Maybe"),"\\<",(0,n.kt)("inlineCode",{parentName:"p"},"Record"),"\\<",(0,n.kt)("inlineCode",{parentName:"p"},"string"),", ",(0,n.kt)("inlineCode",{parentName:"p"},"unknown"),">",">"),(0,n.kt)("p",null,"the key/value record object to be converted."),(0,n.kt)("h3",{id:"returns-1"},"Returns"),(0,n.kt)("p",null,"an array of object values, or ",(0,n.kt)("inlineCode",{parentName:"p"},"undefined")," if ",(0,n.kt)("inlineCode",{parentName:"p"},"recordMap")," is not a valid object."),(0,n.kt)("h3",{id:"example-1"},"Example"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-js"},'import { toArray } from \'@graphql-markdown/utils/array\';\n\ntoArray({\n    bool: true,\n    string: "test",\n    number: 123,\n    array: ["one", "two"],\n    child: { key: "value" },\n  });\n\n// Expected result: [true, "test", 123, ["one", "two"], { key: "value" }]\n')),(0,n.kt)("h3",{id:"source-1"},"Source"),(0,n.kt)("p",null,(0,n.kt)("a",{parentName:"p",href:"https://github.com/graphql-markdown/graphql-markdown/blob/fdeba50/packages/utils/src/array.ts#L34"},"array.ts:34")))}c.isMDXComponent=!0}}]);