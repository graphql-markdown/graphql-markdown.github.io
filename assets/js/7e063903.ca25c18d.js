"use strict";(self.webpackChunk_graphql_markdown_website=self.webpackChunk_graphql_markdown_website||[]).push([[5531],{3905:(e,n,a)=>{a.d(n,{Zo:()=>c,kt:()=>h});var t=a(7294);function r(e,n,a){return n in e?Object.defineProperty(e,n,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[n]=a,e}function o(e,n){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(e);n&&(t=t.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),a.push.apply(a,t)}return a}function i(e){for(var n=1;n<arguments.length;n++){var a=null!=arguments[n]?arguments[n]:{};n%2?o(Object(a),!0).forEach((function(n){r(e,n,a[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):o(Object(a)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(a,n))}))}return e}function l(e,n){if(null==e)return{};var a,t,r=function(e,n){if(null==e)return{};var a,t,r={},o=Object.keys(e);for(t=0;t<o.length;t++)a=o[t],n.indexOf(a)>=0||(r[a]=e[a]);return r}(e,n);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(t=0;t<o.length;t++)a=o[t],n.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(r[a]=e[a])}return r}var s=t.createContext({}),d=function(e){var n=t.useContext(s),a=n;return e&&(a="function"==typeof e?e(n):i(i({},n),e)),a},c=function(e){var n=d(e.components);return t.createElement(s.Provider,{value:n},e.children)},p="mdxType",u={inlineCode:"code",wrapper:function(e){var n=e.children;return t.createElement(t.Fragment,{},n)}},m=t.forwardRef((function(e,n){var a=e.components,r=e.mdxType,o=e.originalType,s=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),p=d(a),m=r,h=p["".concat(s,".").concat(m)]||p[m]||u[m]||o;return a?t.createElement(h,i(i({ref:n},c),{},{components:a})):t.createElement(h,i({ref:n},c))}));function h(e,n){var a=arguments,r=n&&n.mdxType;if("string"==typeof e||r){var o=a.length,i=new Array(o);i[0]=m;var l={};for(var s in n)hasOwnProperty.call(n,s)&&(l[s]=n[s]);l.originalType=e,l[p]="string"==typeof e?e:r,i[1]=l;for(var d=2;d<o;d++)i[d]=a[d];return t.createElement.apply(null,i)}return t.createElement.apply(null,a)}m.displayName="MDXCreateElement"},7166:(e,n,a)=>{a.r(n),a.d(n,{assets:()=>s,contentTitle:()=>i,default:()=>p,frontMatter:()=>o,metadata:()=>l,toc:()=>d});var t=a(7462),r=(a(7294),a(3905));const o={pagination_prev:null,pagination_next:null},i="Additional schemas",l={unversionedId:"advanced/additional-schema",id:"advanced/additional-schema",title:"Additional schemas",description:"If you need to support multiple schemas, then you can set multiple instances of the plugin",source:"@site/docs/advanced/additional-schema.md",sourceDirName:"advanced",slug:"/advanced/additional-schema",permalink:"/docs/advanced/additional-schema",draft:!1,editUrl:"https://github.com/graphql-markdown/graphql-markdown/tree/main/docs/advanced/additional-schema.md",tags:[],version:"current",frontMatter:{pagination_prev:null,pagination_next:null},sidebar:"defaultSidebar"},s={},d=[{value:"GraphQL Config",id:"graphql-config",level:2}],c={toc:d};function p(e){let{components:n,...a}=e;return(0,r.kt)("wrapper",(0,t.Z)({},c,a,{components:n,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"additional-schemas"},"Additional schemas"),(0,r.kt)("p",null,"If you need to support multiple schemas, then you can set multiple instances of the plugin"),(0,r.kt)("p",null,"Assign a unique ",(0,r.kt)("inlineCode",{parentName:"p"},"id")," attribute to each plugin instance (if not set, then ",(0,r.kt)("inlineCode",{parentName:"p"},"id")," value is ",(0,r.kt)("inlineCode",{parentName:"p"},"default"),")."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js",metastring:'title="docusaurus.config.js"',title:'"docusaurus.config.js"'},'plugins: [\n  [\n    "@graphql-markdown/docusaurus",\n    {\n      // highlight-next-line\n      // id: \'default\', // omitted => default instance\n      schema: "./schema/swapi.graphql",\n      rootPath: "./docs", // docs will be generated under \'./docs/swapi\' (rootPath/baseURL)\n      baseURL: "swapi",\n      homepage: "./docs/swapi.md",\n      loaders: {\n        GraphQLFileLoader: "@graphql-tools/graphql-file-loader" // local file schema\n      }\n    },\n  ],\n  [\n    "@graphql-markdown/docusaurus",\n    {\n      // highlight-next-line\n      id: "admin",\n      schema: "./schema/admin.graphql",\n      rootPath: "./docs", // docs will be generated under \'./docs/admin\' (rootPath/baseURL)\n      baseURL: "admin",\n      homepage: "./docs/admin.md",\n      loaders: {\n        GraphQLFileLoader: "@graphql-tools/graphql-file-loader" // local file schema\n      }\n    },\n  ],\n],\n')),(0,r.kt)("p",null,"Instance with an ",(0,r.kt)("inlineCode",{parentName:"p"},"id")," will have their own command line:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-shell"},"npm run docusaurus graphql-to-doc:admin\n")),(0,r.kt)("h2",{id:"graphql-config"},"GraphQL Config"),(0,r.kt)("p",null,"If you use ",(0,r.kt)("a",{parentName:"p",href:"/docs/configuration#graphql-config"},"GraphQL config"),", then you need to define ",(0,r.kt)("inlineCode",{parentName:"p"},"projects")," with the same ",(0,r.kt)("inlineCode",{parentName:"p"},"id")," (including ",(0,r.kt)("inlineCode",{parentName:"p"},"default"),")."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js",metastring:'title="docusaurus.config.js"',title:'"docusaurus.config.js"'},'plugins: [\n  "@graphql-markdown/docusaurus", // default instance\n  [\n    "@graphql-markdown/docusaurus",\n    {\n      // highlight-next-line\n      id: "admin",\n    },\n  ],\n],\n')),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yaml",metastring:'title=".graphqlrc"',title:'".graphqlrc"'},'projects:\n  # highlight-next-line\n  default:\n    schema: "./schema/swapi.graphql"\n    extensions:\n      graphql-markdown:\n        linkRoot: "./docs"\n        baseURL: "swapi"\n        homepage: "./docs/swapi.md"\n        loaders:\n          GraphQLFileLoader: "@graphql-tools/graphql-file-loader"\n  # highlight-next-line\n  admin:\n    schema: "./schema/admin.graphql"\n    extensions:\n      graphql-markdown:\n        linkRoot: "./docs"\n        baseURL: "admin"\n        homepage: "./docs/admin.md"\n        loaders:\n          GraphQLFileLoader: "@graphql-tools/graphql-file-loader"\n')))}p.isMDXComponent=!0}}]);