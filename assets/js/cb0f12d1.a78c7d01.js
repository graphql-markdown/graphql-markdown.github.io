"use strict";(self.webpackChunk_graphql_markdown_website=self.webpackChunk_graphql_markdown_website||[]).push([[2386],{9523:(e,o,t)=>{t.r(o),t.d(o,{assets:()=>d,contentTitle:()=>a,default:()=>u,frontMatter:()=>s,metadata:()=>i,toc:()=>p});var n=t(5893),r=t(1151);const s={pagination_prev:null,pagination_next:null},a="Custom root types",i={id:"advanced/custom-root-types",title:"Custom root types",description:"For custom operation root types (queries not of type Query, or root type name used for other purpose), use the loader option RootTypes:",source:"@site/docs/advanced/custom-root-types.md",sourceDirName:"advanced",slug:"/advanced/custom-root-types",permalink:"/docs/advanced/custom-root-types",draft:!1,unlisted:!1,editUrl:"https://github.com/graphql-markdown/graphql-markdown/tree/main/docs/advanced/custom-root-types.md",tags:[],version:"current",frontMatter:{pagination_prev:null,pagination_next:null},sidebar:"defaultSidebar"},d={},p=[];function c(e){const o={a:"a",code:"code",h1:"h1",li:"li",p:"p",pre:"pre",ul:"ul",...(0,r.a)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(o.h1,{id:"custom-root-types",children:"Custom root types"}),"\n",(0,n.jsxs)(o.p,{children:["For custom operation root types (queries not of type ",(0,n.jsx)(o.code,{children:"Query"}),", or root type name used for other purpose), use the loader option ",(0,n.jsx)(o.code,{children:"RootTypes"}),":"]}),"\n",(0,n.jsx)(o.pre,{children:(0,n.jsx)(o.code,{className:"language-ts",children:"type RootTypes = { query?: string; mutation?: string; subscription?: string };\n"})}),"\n",(0,n.jsxs)(o.ul,{children:["\n",(0,n.jsx)(o.li,{children:"use a custom type name to override standard type"}),"\n",(0,n.jsx)(o.li,{children:"use a empty string to disable the GraphQL standard type"}),"\n",(0,n.jsx)(o.li,{children:"unset root types will use the GraphQL standard type"}),"\n"]}),"\n",(0,n.jsxs)(o.p,{children:["Add the option ",(0,n.jsx)(o.code,{children:"rootTypes"})," to the loader options under ",(0,n.jsx)(o.code,{children:"@graphql-markdown/docusaurus"})," configuration (see also ",(0,n.jsx)(o.a,{href:"/docs/advanced/schema-loading",children:"schema loading"}),"):"]}),"\n",(0,n.jsx)(o.pre,{children:(0,n.jsx)(o.code,{className:"language-js",metastring:'title="docusaurus.config.js"',children:'plugins: [\n  [\n    "@graphql-markdown/docusaurus",\n    /** @type {import(\'@graphql-markdown/types\').ConfigOptions} */\n    {\n      // ... other options\n      loaders: {\n        GraphQLFileLoader: {\n          module: "@graphql-tools/graphql-file-loader",\n          options: {\n            rootTypes: {\n              query: "Root", // use custom root type Root for queries, instead of Query\n              subscription: "" // disable Subscription type\n            },\n          },\n        },\n      },\n    },\n  ],\n],\n'})})]})}function u(e={}){const{wrapper:o}={...(0,r.a)(),...e.components};return o?(0,n.jsx)(o,{...e,children:(0,n.jsx)(c,{...e})}):c(e)}},1151:(e,o,t)=>{t.d(o,{Z:()=>i,a:()=>a});var n=t(7294);const r={},s=n.createContext(r);function a(e){const o=n.useContext(s);return n.useMemo((function(){return"function"==typeof e?e(o):{...o,...e}}),[o,e])}function i(e){let o;return o=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:a(e.components),n.createElement(s.Provider,{value:o},e.children)}}}]);