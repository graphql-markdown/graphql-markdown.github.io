"use strict";(self.webpackChunk_graphql_markdown_website=self.webpackChunk_graphql_markdown_website||[]).push([["9129"],{5941:function(e,n,t){t.r(n),t.d(n,{default:()=>c,frontMatter:()=>a,metadata:()=>i,assets:()=>l,toc:()=>s,contentTitle:()=>p});var i=JSON.parse('{"id":"printer-legacy/graphql/operation","title":"operation","description":"Module for handling GraphQL operation printing functionality.","source":"@site/api/printer-legacy/graphql/operation.md","sourceDirName":"printer-legacy/graphql","slug":"/printer-legacy/graphql/operation","permalink":"/api/printer-legacy/graphql/operation","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{"title":"operation","pagination_prev":null,"pagination_next":null,"toc_max_heading_level":2},"sidebar":"defaultSidebar"}'),r=t("85893"),o=t("50065");let a={title:"operation",pagination_prev:null,pagination_next:null,toc_max_heading_level:2},p=void 0,l={},s=[{value:"printCodeOperation()",id:"printcodeoperation",level:2},{value:"Parameters",id:"parameters",level:3},{value:"type",id:"type",level:4},{value:"options?",id:"options",level:4},{value:"indentationLevel?",id:"indentationlevel",level:4},{value:"Returns",id:"returns",level:3},{value:"Example",id:"example",level:3},{value:"See",id:"see",level:3},{value:"printOperationMetadata()",id:"printoperationmetadata",level:2},{value:"Parameters",id:"parameters-1",level:3},{value:"type",id:"type-1",level:4},{value:"options",id:"options-1",level:4},{value:"Returns",id:"returns-1",level:3},{value:"printOperationType()",id:"printoperationtype",level:2},{value:"Parameters",id:"parameters-2",level:3},{value:"type",id:"type-2",level:4},{value:"options",id:"options-2",level:4},{value:"Returns",id:"returns-2",level:3}];function d(e){let n={code:"code",h2:"h2",h3:"h3",h4:"h4",hr:"hr",p:"p",pre:"pre",...(0,o.a)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.p,{children:"Module for handling GraphQL operation printing functionality.\nProvides utilities to print operation types, metadata, and code representations."}),"\n",(0,r.jsx)(n.h2,{id:"printcodeoperation",children:"printCodeOperation()"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-ts",children:"const printCodeOperation: (type, options?, indentationLevel) => string | MDXString = printCodeField;\n"})}),"\n",(0,r.jsx)(n.p,{children:"Defined in: graphql/operation.ts:57"}),"\n",(0,r.jsx)(n.p,{children:"Prints the code representation of an operation."}),"\n",(0,r.jsx)(n.p,{children:"Generates a string representation of a GraphQL field including its arguments,\nreturn type, and deprecation status."}),"\n",(0,r.jsx)(n.h3,{id:"parameters",children:"Parameters"}),"\n",(0,r.jsx)(n.h4,{id:"type",children:"type"}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.code,{children:"unknown"})}),"\n",(0,r.jsx)(n.p,{children:"The GraphQL field type object to print"}),"\n",(0,r.jsx)(n.h4,{id:"options",children:"options?"}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.code,{children:"PrintTypeOptions"})}),"\n",(0,r.jsx)(n.p,{children:"Optional configuration for printing the type"}),"\n",(0,r.jsx)(n.h4,{id:"indentationlevel",children:"indentationLevel?"}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.code,{children:"number"})," = ",(0,r.jsx)(n.code,{children:"0"})]}),"\n",(0,r.jsx)(n.p,{children:"The level of indentation to apply (default: 0)"}),"\n",(0,r.jsx)(n.h3,{id:"returns",children:"Returns"}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.code,{children:"string"})," | ",(0,r.jsx)(n.code,{children:"MDXString"})]}),"\n",(0,r.jsx)(n.p,{children:"A formatted string representing the field or an empty string if the field should not be printed"}),"\n",(0,r.jsx)(n.h3,{id:"example",children:"Example"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"printCodeField({ name: 'user', type: 'User!', args: [{ name: 'id', type: 'ID!' }] })\n// Returns: user(\n//   id: ID!\n// ): User!\n"})}),"\n",(0,r.jsx)(n.h3,{id:"see",children:"See"}),"\n",(0,r.jsx)(n.p,{children:"printCodeField"}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h2,{id:"printoperationmetadata",children:"printOperationMetadata()"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-ts",children:"function printOperationMetadata(type, options): string | MDXString;\n"})}),"\n",(0,r.jsx)(n.p,{children:"Defined in: graphql/operation.ts:39"}),"\n",(0,r.jsx)(n.p,{children:"Prints the operation metadata including arguments and type information."}),"\n",(0,r.jsx)(n.h3,{id:"parameters-1",children:"Parameters"}),"\n",(0,r.jsx)(n.h4,{id:"type-1",children:"type"}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.code,{children:"unknown"})}),"\n",(0,r.jsx)(n.p,{children:"The operation type to print metadata for"}),"\n",(0,r.jsx)(n.h4,{id:"options-1",children:"options"}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.code,{children:"PrintTypeOptions"})}),"\n",(0,r.jsx)(n.p,{children:"Print type options for customizing output"}),"\n",(0,r.jsx)(n.h3,{id:"returns-1",children:"Returns"}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.code,{children:"string"})," | ",(0,r.jsx)(n.code,{children:"MDXString"})]}),"\n",(0,r.jsx)(n.p,{children:"Formatted string containing operation metadata or empty string if invalid"}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h2,{id:"printoperationtype",children:"printOperationType()"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-ts",children:"function printOperationType(type, options): string | MDXString;\n"})}),"\n",(0,r.jsx)(n.p,{children:"Defined in: graphql/operation.ts:18"}),"\n",(0,r.jsx)(n.p,{children:"Prints the operation type information."}),"\n",(0,r.jsx)(n.h3,{id:"parameters-2",children:"Parameters"}),"\n",(0,r.jsx)(n.h4,{id:"type-2",children:"type"}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.code,{children:"unknown"})}),"\n",(0,r.jsx)(n.p,{children:"The operation type to print"}),"\n",(0,r.jsx)(n.h4,{id:"options-2",children:"options"}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.code,{children:"PrintTypeOptions"})}),"\n",(0,r.jsx)(n.p,{children:"Print type options for customizing output"}),"\n",(0,r.jsx)(n.h3,{id:"returns-2",children:"Returns"}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.code,{children:"string"})," | ",(0,r.jsx)(n.code,{children:"MDXString"})]}),"\n",(0,r.jsx)(n.p,{children:"Formatted string representation of the operation type or empty string if invalid"})]})}function c(e={}){let{wrapper:n}={...(0,o.a)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(d,{...e})}):d(e)}},50065:function(e,n,t){t.d(n,{Z:function(){return p},a:function(){return a}});var i=t(67294);let r={},o=i.createContext(r);function a(e){let n=i.useContext(o);return i.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function p(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:a(e.components),i.createElement(o.Provider,{value:n},e.children)}}}]);