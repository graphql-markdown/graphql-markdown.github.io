"use strict";(self.webpackChunk_graphql_markdown_website=self.webpackChunk_graphql_markdown_website||[]).push([["7335"],{90276:function(e,n,r){r.r(n),r.d(n,{default:()=>p,frontMatter:()=>s,metadata:()=>i,assets:()=>a,toc:()=>o,contentTitle:()=>t});var i=JSON.parse('{"id":"core/renderer","title":"renderer","description":"Renderer","source":"@site/api/core/renderer.md","sourceDirName":"core","slug":"/core/renderer","permalink":"/api/core/renderer","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{"title":"renderer","pagination_prev":null,"pagination_next":null,"toc_max_heading_level":2},"sidebar":"defaultSidebar"}'),d=r("85893"),l=r("50065");let s={title:"renderer",pagination_prev:null,pagination_next:null,toc_max_heading_level:2},t=void 0,a={},o=[{value:"Renderer",id:"renderer",level:2},{value:"Example",id:"example",level:3},{value:"Constructors",id:"constructors",level:3},{value:"Constructor",id:"constructor",level:4},{value:"Parameters",id:"parameters",level:5},{value:"printer",id:"printer",level:6},{value:"outputDir",id:"outputdir",level:6},{value:"baseURL",id:"baseurl",level:6},{value:"group",id:"group",level:6},{value:"prettify",id:"prettify",level:6},{value:"docOptions",id:"docoptions",level:6},{value:"mdxModule?",id:"mdxmodule",level:6},{value:"Returns",id:"returns",level:5},{value:"Example",id:"example-1",level:5},{value:"Properties",id:"properties",level:3},{value:"baseURL",id:"baseurl-1",level:4},{value:"group",id:"group-1",level:4},{value:"mdxModule",id:"mdxmodule-1",level:4},{value:"mdxModuleIndexFileSupport",id:"mdxmoduleindexfilesupport",level:4},{value:"options",id:"options",level:4},{value:"outputDir",id:"outputdir-1",level:4},{value:"prettify",id:"prettify-1",level:4},{value:"Methods",id:"methods",level:3},{value:"generateCategoryMetafileType()",id:"generatecategorymetafiletype",level:4},{value:"Parameters",id:"parameters-1",level:5},{value:"type",id:"type",level:6},{value:"name",id:"name",level:6},{value:"rootTypeName",id:"roottypename",level:6},{value:"Returns",id:"returns-1",level:5},{value:"Example",id:"example-2",level:5},{value:"generateIndexMetafile()",id:"generateindexmetafile",level:4},{value:"Parameters",id:"parameters-2",level:5},{value:"dirPath",id:"dirpath",level:6},{value:"category",id:"category",level:6},{value:"options",id:"options-1",level:6},{value:"Returns",id:"returns-2",level:5},{value:"Example",id:"example-3",level:5},{value:"hasMDXIndexFileSupport()",id:"hasmdxindexfilesupport",level:4},{value:"Parameters",id:"parameters-3",level:5},{value:"module",id:"module",level:6},{value:"Returns",id:"returns-3",level:5},{value:"Example",id:"example-4",level:5},{value:"renderHomepage()",id:"renderhomepage",level:4},{value:"Parameters",id:"parameters-4",level:5},{value:"homepageLocation",id:"homepagelocation",level:6},{value:"Returns",id:"returns-4",level:5},{value:"Example",id:"example-5",level:5},{value:"renderRootTypes()",id:"renderroottypes",level:4},{value:"Parameters",id:"parameters-5",level:5},{value:"rootTypeName",id:"roottypename-1",level:6},{value:"type",id:"type-1",level:6},{value:"Returns",id:"returns-5",level:5},{value:"Example",id:"example-6",level:5},{value:"renderTypeEntities()",id:"rendertypeentities",level:4},{value:"Parameters",id:"parameters-6",level:5},{value:"dirPath",id:"dirpath-1",level:6},{value:"name",id:"name-1",level:6},{value:"type",id:"type-2",level:6},{value:"Returns",id:"returns-6",level:5},{value:"Example",id:"example-7",level:5},{value:"CategoryMetafileOptions",id:"categorymetafileoptions",level:2},{value:"Example",id:"example-8",level:3},{value:"Properties",id:"properties-1",level:3},{value:"collapsed?",id:"collapsed",level:4},{value:"collapsible?",id:"collapsible",level:4},{value:"sidebarPosition?",id:"sidebarposition",level:4},{value:"styleClass?",id:"styleclass",level:4},{value:"API_GROUPS",id:"api_groups",level:2},{value:"Example",id:"example-9",level:3},{value:"See",id:"see",level:3},{value:"getApiGroupFolder()",id:"getapigroupfolder",level:2},{value:"Parameters",id:"parameters-7",level:3},{value:"type",id:"type-3",level:4},{value:"groups?",id:"groups",level:4},{value:"Returns",id:"returns-7",level:3},{value:"Example",id:"example-10",level:3},{value:"getRenderer()",id:"getrenderer",level:2},{value:"Parameters",id:"parameters-8",level:3},{value:"printer",id:"printer-1",level:4},{value:"outputDir",id:"outputdir-2",level:4},{value:"baseURL",id:"baseurl-2",level:4},{value:"group",id:"group-2",level:4},{value:"prettify",id:"prettify-2",level:4},{value:"docOptions",id:"docoptions-1",level:4},{value:"mdxModule?",id:"mdxmodule-2",level:4},{value:"Returns",id:"returns-8",level:3},{value:"Example",id:"example-11",level:3}];function c(e){let n={a:"a",code:"code",em:"em",h2:"h2",h3:"h3",h4:"h4",h5:"h5",h6:"h6",hr:"hr",p:"p",pre:"pre",strong:"strong",...(0,l.a)(),...e.components};return(0,d.jsxs)(d.Fragment,{children:[(0,d.jsx)(n.h2,{id:"renderer",children:"Renderer"}),"\n",(0,d.jsx)(n.p,{children:"Defined in: renderer.ts:211"}),"\n",(0,d.jsx)(n.p,{children:(0,d.jsx)(n.strong,{children:(0,d.jsx)(n.code,{children:"Use Declared Type"})})}),"\n",(0,d.jsx)(n.p,{children:"Core renderer class responsible for generating documentation files from GraphQL schema entities.\nHandles the conversion of schema types to markdown/MDX documentation with proper organization."}),"\n",(0,d.jsx)(n.h3,{id:"example",children:"Example"}),"\n",(0,d.jsx)(n.pre,{children:(0,d.jsx)(n.code,{className:"language-ts"})}),"\n",(0,d.jsx)(n.h3,{id:"constructors",children:"Constructors"}),"\n",(0,d.jsx)(n.h4,{id:"constructor",children:"Constructor"}),"\n",(0,d.jsx)(n.pre,{children:(0,d.jsx)(n.code,{className:"language-ts",children:"new Renderer(\n   printer, \n   outputDir, \n   baseURL, \n   group, \n   prettify, \n   docOptions, \n   mdxModule?): Renderer;\n"})}),"\n",(0,d.jsx)(n.p,{children:"Defined in: renderer.ts:234"}),"\n",(0,d.jsx)(n.p,{children:"Creates a new Renderer instance."}),"\n",(0,d.jsx)(n.h5,{id:"parameters",children:"Parameters"}),"\n",(0,d.jsx)(n.h6,{id:"printer",children:"printer"}),"\n",(0,d.jsxs)(n.p,{children:[(0,d.jsx)(n.em,{children:"typeof"})," ",(0,d.jsx)(n.code,{children:"IPrinter"})]}),"\n",(0,d.jsx)(n.p,{children:"The printer instance used to convert GraphQL types to markdown"}),"\n",(0,d.jsx)(n.h6,{id:"outputdir",children:"outputDir"}),"\n",(0,d.jsx)(n.p,{children:(0,d.jsx)(n.code,{children:"string"})}),"\n",(0,d.jsx)(n.p,{children:"Directory where documentation will be generated"}),"\n",(0,d.jsx)(n.h6,{id:"baseurl",children:"baseURL"}),"\n",(0,d.jsx)(n.p,{children:(0,d.jsx)(n.code,{children:"string"})}),"\n",(0,d.jsx)(n.p,{children:"Base URL for the documentation"}),"\n",(0,d.jsx)(n.h6,{id:"group",children:"group"}),"\n",(0,d.jsxs)(n.p,{children:[(0,d.jsx)(n.code,{children:"Maybe"}),"<",(0,d.jsx)(n.code,{children:"Partial"}),"<",(0,d.jsx)(n.code,{children:"Record"}),"<",(0,d.jsx)(n.code,{children:"SchemaEntity"}),", ",(0,d.jsx)(n.code,{children:"Record"}),"<",(0,d.jsx)(n.code,{children:"string"}),", ",(0,d.jsx)(n.code,{children:"Maybe"}),"<",(0,d.jsx)(n.code,{children:"string"}),">>>>>"]}),"\n",(0,d.jsx)(n.p,{children:"Optional grouping configuration for schema entities"}),"\n",(0,d.jsx)(n.h6,{id:"prettify",children:"prettify"}),"\n",(0,d.jsx)(n.p,{children:(0,d.jsx)(n.code,{children:"boolean"})}),"\n",(0,d.jsx)(n.p,{children:"Whether to format the generated markdown"}),"\n",(0,d.jsx)(n.h6,{id:"docoptions",children:"docOptions"}),"\n",(0,d.jsxs)(n.p,{children:[(0,d.jsx)(n.code,{children:"Maybe"}),"<",(0,d.jsx)(n.code,{children:"RendererDocOptions"}),">"]}),"\n",(0,d.jsx)(n.p,{children:"Additional documentation options"}),"\n",(0,d.jsx)(n.h6,{id:"mdxmodule",children:"mdxModule?"}),"\n",(0,d.jsx)(n.p,{children:(0,d.jsx)(n.code,{children:"unknown"})}),"\n",(0,d.jsx)(n.p,{children:"Optional MDX module for enhanced documentation features"}),"\n",(0,d.jsx)(n.h5,{id:"returns",children:"Returns"}),"\n",(0,d.jsx)(n.p,{children:(0,d.jsx)(n.a,{href:"#renderer",children:(0,d.jsx)(n.code,{children:"Renderer"})})}),"\n",(0,d.jsx)(n.h5,{id:"example-1",children:"Example"}),"\n",(0,d.jsx)(n.pre,{children:(0,d.jsx)(n.code,{className:"language-ts"})}),"\n",(0,d.jsx)(n.h3,{id:"properties",children:"Properties"}),"\n",(0,d.jsx)(n.h4,{id:"baseurl-1",children:"baseURL"}),"\n",(0,d.jsx)(n.pre,{children:(0,d.jsx)(n.code,{className:"language-ts",children:"baseURL: string;\n"})}),"\n",(0,d.jsx)(n.p,{children:"Defined in: renderer.ts:214"}),"\n",(0,d.jsx)(n.h4,{id:"group-1",children:"group"}),"\n",(0,d.jsx)(n.pre,{children:(0,d.jsx)(n.code,{className:"language-ts",children:"group: Maybe<Partial<Record<SchemaEntity, Record<string, Maybe<string>>>>>;\n"})}),"\n",(0,d.jsx)(n.p,{children:"Defined in: renderer.ts:212"}),"\n",(0,d.jsx)(n.h4,{id:"mdxmodule-1",children:"mdxModule"}),"\n",(0,d.jsx)(n.pre,{children:(0,d.jsx)(n.code,{className:"language-ts",children:"mdxModule: unknown;\n"})}),"\n",(0,d.jsx)(n.p,{children:"Defined in: renderer.ts:217"}),"\n",(0,d.jsx)(n.h4,{id:"mdxmoduleindexfilesupport",children:"mdxModuleIndexFileSupport"}),"\n",(0,d.jsx)(n.pre,{children:(0,d.jsx)(n.code,{className:"language-ts",children:"mdxModuleIndexFileSupport: boolean;\n"})}),"\n",(0,d.jsx)(n.p,{children:"Defined in: renderer.ts:218"}),"\n",(0,d.jsx)(n.h4,{id:"options",children:"options"}),"\n",(0,d.jsx)(n.pre,{children:(0,d.jsx)(n.code,{className:"language-ts",children:"options: Maybe<RendererDocOptions>;\n"})}),"\n",(0,d.jsx)(n.p,{children:"Defined in: renderer.ts:216"}),"\n",(0,d.jsx)(n.h4,{id:"outputdir-1",children:"outputDir"}),"\n",(0,d.jsx)(n.pre,{children:(0,d.jsx)(n.code,{className:"language-ts",children:"outputDir: string;\n"})}),"\n",(0,d.jsx)(n.p,{children:"Defined in: renderer.ts:213"}),"\n",(0,d.jsx)(n.h4,{id:"prettify-1",children:"prettify"}),"\n",(0,d.jsx)(n.pre,{children:(0,d.jsx)(n.code,{className:"language-ts",children:"prettify: boolean;\n"})}),"\n",(0,d.jsx)(n.p,{children:"Defined in: renderer.ts:215"}),"\n",(0,d.jsx)(n.h3,{id:"methods",children:"Methods"}),"\n",(0,d.jsx)(n.h4,{id:"generatecategorymetafiletype",children:"generateCategoryMetafileType()"}),"\n",(0,d.jsx)(n.pre,{children:(0,d.jsx)(n.code,{className:"language-ts",children:"generateCategoryMetafileType(\n   type, \n   name, \nrootTypeName): Promise<string>;\n"})}),"\n",(0,d.jsx)(n.p,{children:"Defined in: renderer.ts:318"}),"\n",(0,d.jsx)(n.p,{children:(0,d.jsx)(n.strong,{children:(0,d.jsx)(n.code,{children:"Use Declared Type"})})}),"\n",(0,d.jsx)(n.p,{children:"Generates the directory path and metafiles for a specific schema entity type.\nCreates the appropriate directory structure based on configuration options."}),"\n",(0,d.jsx)(n.h5,{id:"parameters-1",children:"Parameters"}),"\n",(0,d.jsx)(n.h6,{id:"type",children:"type"}),"\n",(0,d.jsx)(n.p,{children:(0,d.jsx)(n.code,{children:"unknown"})}),"\n",(0,d.jsx)(n.p,{children:"The schema entity type"}),"\n",(0,d.jsx)(n.h6,{id:"name",children:"name"}),"\n",(0,d.jsx)(n.p,{children:(0,d.jsx)(n.code,{children:"string"})}),"\n",(0,d.jsx)(n.p,{children:"The name of the schema entity"}),"\n",(0,d.jsx)(n.h6,{id:"roottypename",children:"rootTypeName"}),"\n",(0,d.jsx)(n.p,{children:(0,d.jsx)(n.code,{children:"SchemaEntity"})}),"\n",(0,d.jsx)(n.p,{children:"The root type name this entity belongs to"}),"\n",(0,d.jsx)(n.h5,{id:"returns-1",children:"Returns"}),"\n",(0,d.jsxs)(n.p,{children:[(0,d.jsx)(n.code,{children:"Promise"}),"<",(0,d.jsx)(n.code,{children:"string"}),">"]}),"\n",(0,d.jsx)(n.p,{children:"The generated directory path"}),"\n",(0,d.jsx)(n.h5,{id:"example-2",children:"Example"}),"\n",(0,d.jsx)(n.pre,{children:(0,d.jsx)(n.code,{className:"language-ts"})}),"\n",(0,d.jsx)(n.h4,{id:"generateindexmetafile",children:"generateIndexMetafile()"}),"\n",(0,d.jsx)(n.pre,{children:(0,d.jsx)(n.code,{className:"language-ts",children:"generateIndexMetafile(\n   dirPath, \n   category, \noptions): Promise<void>;\n"})}),"\n",(0,d.jsx)(n.p,{children:"Defined in: renderer.ts:290"}),"\n",(0,d.jsx)(n.p,{children:(0,d.jsx)(n.strong,{children:(0,d.jsx)(n.code,{children:"Use Declared Type"})})}),"\n",(0,d.jsx)(n.p,{children:"Generates an index metafile for a category directory if MDX support is available."}),"\n",(0,d.jsx)(n.h5,{id:"parameters-2",children:"Parameters"}),"\n",(0,d.jsx)(n.h6,{id:"dirpath",children:"dirPath"}),"\n",(0,d.jsx)(n.p,{children:(0,d.jsx)(n.code,{children:"string"})}),"\n",(0,d.jsx)(n.p,{children:"The directory path where the index should be created"}),"\n",(0,d.jsx)(n.h6,{id:"category",children:"category"}),"\n",(0,d.jsx)(n.p,{children:(0,d.jsx)(n.code,{children:"string"})}),"\n",(0,d.jsx)(n.p,{children:"The category name"}),"\n",(0,d.jsx)(n.h6,{id:"options-1",children:"options"}),"\n",(0,d.jsxs)(n.p,{children:[(0,d.jsx)(n.a,{href:"#categorymetafileoptions",children:(0,d.jsx)(n.code,{children:"CategoryMetafileOptions"})})," = ",(0,d.jsx)(n.code,{children:"..."})]}),"\n",(0,d.jsx)(n.p,{children:"Configuration options for the index"}),"\n",(0,d.jsx)(n.h5,{id:"returns-2",children:"Returns"}),"\n",(0,d.jsxs)(n.p,{children:[(0,d.jsx)(n.code,{children:"Promise"}),"<",(0,d.jsx)(n.code,{children:"void"}),">"]}),"\n",(0,d.jsx)(n.p,{children:"Promise that resolves when the index is generated"}),"\n",(0,d.jsx)(n.h5,{id:"example-3",children:"Example"}),"\n",(0,d.jsx)(n.pre,{children:(0,d.jsx)(n.code,{className:"language-typescript",children:"await renderer.generateIndexMetafile('docs/types', 'Types', {\n  collapsible: true,\n  collapsed: false\n});\n"})}),"\n",(0,d.jsx)(n.h4,{id:"hasmdxindexfilesupport",children:"hasMDXIndexFileSupport()"}),"\n",(0,d.jsx)(n.pre,{children:(0,d.jsx)(n.code,{className:"language-ts",children:'hasMDXIndexFileSupport(module): module is Partial<MDXSupportType> & Pick<MDXSupportType, "generateIndexMetafile">;\n'})}),"\n",(0,d.jsx)(n.p,{children:"Defined in: renderer.ts:261"}),"\n",(0,d.jsx)(n.p,{children:(0,d.jsx)(n.strong,{children:(0,d.jsx)(n.code,{children:"Use Declared Type"})})}),"\n",(0,d.jsx)(n.p,{children:"Checks if the provided module supports MDX index file generation."}),"\n",(0,d.jsx)(n.h5,{id:"parameters-3",children:"Parameters"}),"\n",(0,d.jsx)(n.h6,{id:"module",children:"module"}),"\n",(0,d.jsxs)(n.p,{children:[(0,d.jsx)(n.code,{children:"unknown"})," = ",(0,d.jsx)(n.code,{children:"..."})]}),"\n",(0,d.jsx)(n.p,{children:"The module to check for MDX support"}),"\n",(0,d.jsx)(n.h5,{id:"returns-3",children:"Returns"}),"\n",(0,d.jsx)(n.p,{children:(0,d.jsx)(n.code,{children:'module is Partial<MDXSupportType> & Pick<MDXSupportType, "generateIndexMetafile">'})}),"\n",(0,d.jsx)(n.p,{children:"True if the module supports index metafile generation"}),"\n",(0,d.jsx)(n.h5,{id:"example-4",children:"Example"}),"\n",(0,d.jsx)(n.pre,{children:(0,d.jsx)(n.code,{className:"language-ts"})}),"\n",(0,d.jsx)(n.h4,{id:"renderhomepage",children:"renderHomepage()"}),"\n",(0,d.jsx)(n.pre,{children:(0,d.jsx)(n.code,{className:"language-ts",children:"renderHomepage(homepageLocation): Promise<void>;\n"})}),"\n",(0,d.jsx)(n.p,{children:"Defined in: renderer.ts:494"}),"\n",(0,d.jsx)(n.p,{children:(0,d.jsx)(n.strong,{children:(0,d.jsx)(n.code,{children:"Use Declared Type"})})}),"\n",(0,d.jsx)(n.p,{children:"Renders the homepage for the documentation from a template file.\nReplaces placeholders in the template with actual values."}),"\n",(0,d.jsx)(n.h5,{id:"parameters-4",children:"Parameters"}),"\n",(0,d.jsx)(n.h6,{id:"homepagelocation",children:"homepageLocation"}),"\n",(0,d.jsx)(n.p,{children:(0,d.jsx)(n.code,{children:"string"})}),"\n",(0,d.jsx)(n.p,{children:"Path to the homepage template file"}),"\n",(0,d.jsx)(n.h5,{id:"returns-4",children:"Returns"}),"\n",(0,d.jsxs)(n.p,{children:[(0,d.jsx)(n.code,{children:"Promise"}),"<",(0,d.jsx)(n.code,{children:"void"}),">"]}),"\n",(0,d.jsx)(n.p,{children:"Promise that resolves when the homepage is rendered"}),"\n",(0,d.jsx)(n.h5,{id:"example-5",children:"Example"}),"\n",(0,d.jsx)(n.pre,{children:(0,d.jsx)(n.code,{className:"language-ts"})}),"\n",(0,d.jsx)(n.h4,{id:"renderroottypes",children:"renderRootTypes()"}),"\n",(0,d.jsx)(n.pre,{children:(0,d.jsx)(n.code,{className:"language-ts",children:"renderRootTypes(rootTypeName, type): Promise<Maybe<Maybe<Category>[]>>;\n"})}),"\n",(0,d.jsx)(n.p,{children:"Defined in: renderer.ts:380"}),"\n",(0,d.jsx)(n.p,{children:(0,d.jsx)(n.strong,{children:(0,d.jsx)(n.code,{children:"Use Declared Type"})})}),"\n",(0,d.jsx)(n.p,{children:"Renders all types within a root type category (e.g., all Query types)."}),"\n",(0,d.jsx)(n.h5,{id:"parameters-5",children:"Parameters"}),"\n",(0,d.jsx)(n.h6,{id:"roottypename-1",children:"rootTypeName"}),"\n",(0,d.jsx)(n.p,{children:(0,d.jsx)(n.code,{children:"SchemaEntity"})}),"\n",(0,d.jsx)(n.p,{children:'The name of the root type (e.g., "Query", "Mutation")'}),"\n",(0,d.jsx)(n.h6,{id:"type-1",children:"type"}),"\n",(0,d.jsx)(n.p,{children:(0,d.jsx)(n.code,{children:"unknown"})}),"\n",(0,d.jsx)(n.p,{children:"The type object containing all entities to render"}),"\n",(0,d.jsx)(n.h5,{id:"returns-5",children:"Returns"}),"\n",(0,d.jsxs)(n.p,{children:[(0,d.jsx)(n.code,{children:"Promise"}),"<",(0,d.jsx)(n.code,{children:"Maybe"}),"<",(0,d.jsx)(n.code,{children:"Maybe"}),"<",(0,d.jsx)(n.code,{children:"Category"}),">[]>>"]}),"\n",(0,d.jsx)(n.p,{children:"Array of rendered categories or undefined"}),"\n",(0,d.jsx)(n.h5,{id:"example-6",children:"Example"}),"\n",(0,d.jsx)(n.pre,{children:(0,d.jsx)(n.code,{className:"language-ts"})}),"\n",(0,d.jsx)(n.h4,{id:"rendertypeentities",children:"renderTypeEntities()"}),"\n",(0,d.jsx)(n.pre,{children:(0,d.jsx)(n.code,{className:"language-ts",children:"renderTypeEntities(\n   dirPath, \n   name, \ntype): Promise<Maybe<Category>>;\n"})}),"\n",(0,d.jsx)(n.p,{children:"Defined in: renderer.ts:424"}),"\n",(0,d.jsx)(n.p,{children:(0,d.jsx)(n.strong,{children:(0,d.jsx)(n.code,{children:"Use Declared Type"})})}),"\n",(0,d.jsx)(n.p,{children:"Renders documentation for a specific type entity and saves it to a file."}),"\n",(0,d.jsx)(n.h5,{id:"parameters-6",children:"Parameters"}),"\n",(0,d.jsx)(n.h6,{id:"dirpath-1",children:"dirPath"}),"\n",(0,d.jsx)(n.p,{children:(0,d.jsx)(n.code,{children:"string"})}),"\n",(0,d.jsx)(n.p,{children:"The directory path where the file should be saved"}),"\n",(0,d.jsx)(n.h6,{id:"name-1",children:"name"}),"\n",(0,d.jsx)(n.p,{children:(0,d.jsx)(n.code,{children:"string"})}),"\n",(0,d.jsx)(n.p,{children:"The name of the type entity"}),"\n",(0,d.jsx)(n.h6,{id:"type-2",children:"type"}),"\n",(0,d.jsx)(n.p,{children:(0,d.jsx)(n.code,{children:"unknown"})}),"\n",(0,d.jsx)(n.p,{children:"The type entity to render"}),"\n",(0,d.jsx)(n.h5,{id:"returns-6",children:"Returns"}),"\n",(0,d.jsxs)(n.p,{children:[(0,d.jsx)(n.code,{children:"Promise"}),"<",(0,d.jsx)(n.code,{children:"Maybe"}),"<",(0,d.jsx)(n.code,{children:"Category"}),">>"]}),"\n",(0,d.jsx)(n.p,{children:"The category information for the rendered entity or undefined"}),"\n",(0,d.jsx)(n.h5,{id:"example-7",children:"Example"}),"\n",(0,d.jsx)(n.pre,{children:(0,d.jsx)(n.code,{className:"language-ts"})}),"\n",(0,d.jsx)(n.hr,{}),"\n",(0,d.jsx)(n.h2,{id:"categorymetafileoptions",children:"CategoryMetafileOptions"}),"\n",(0,d.jsx)(n.p,{children:"Defined in: renderer.ts:198"}),"\n",(0,d.jsx)(n.p,{children:(0,d.jsx)(n.strong,{children:(0,d.jsx)(n.code,{children:"Use Declared Type"})})}),"\n",(0,d.jsx)(n.p,{children:"Configuration options for category metafiles in the documentation.\nThese options control the appearance and behavior of category sections in the sidebar."}),"\n",(0,d.jsx)(n.p,{children:"CategoryMetafileOptions"}),"\n",(0,d.jsx)(n.h3,{id:"example-8",children:"Example"}),"\n",(0,d.jsx)(n.pre,{children:(0,d.jsx)(n.code,{className:"language-typescript",children:"const options: CategoryMetafileOptions = {\n  collapsible: true,\n  collapsed: false,\n  sidebarPosition: SidebarPosition.FIRST,\n  styleClass: CATEGORY_STYLE_CLASS.API\n};\n"})}),"\n",(0,d.jsx)(n.h3,{id:"properties-1",children:"Properties"}),"\n",(0,d.jsx)(n.h4,{id:"collapsed",children:"collapsed?"}),"\n",(0,d.jsx)(n.pre,{children:(0,d.jsx)(n.code,{className:"language-ts",children:"optional collapsed: boolean;\n"})}),"\n",(0,d.jsx)(n.p,{children:"Defined in: renderer.ts:200"}),"\n",(0,d.jsx)(n.p,{children:"Whether the category should be initially collapsed"}),"\n",(0,d.jsx)(n.h4,{id:"collapsible",children:"collapsible?"}),"\n",(0,d.jsx)(n.pre,{children:(0,d.jsx)(n.code,{className:"language-ts",children:"optional collapsible: boolean;\n"})}),"\n",(0,d.jsx)(n.p,{children:"Defined in: renderer.ts:199"}),"\n",(0,d.jsx)(n.p,{children:"Whether the category should be collapsible in the sidebar"}),"\n",(0,d.jsx)(n.h4,{id:"sidebarposition",children:"sidebarPosition?"}),"\n",(0,d.jsx)(n.pre,{children:(0,d.jsx)(n.code,{className:"language-ts",children:"optional sidebarPosition: number;\n"})}),"\n",(0,d.jsx)(n.p,{children:"Defined in: renderer.ts:201"}),"\n",(0,d.jsx)(n.p,{children:"Custom position in the sidebar (lower numbers appear first)"}),"\n",(0,d.jsx)(n.h4,{id:"styleclass",children:"styleClass?"}),"\n",(0,d.jsx)(n.pre,{children:(0,d.jsx)(n.code,{className:"language-ts",children:"optional styleClass: string;\n"})}),"\n",(0,d.jsx)(n.p,{children:"Defined in: renderer.ts:202"}),"\n",(0,d.jsx)(n.p,{children:"CSS class to apply to the category for styling"}),"\n",(0,d.jsx)(n.hr,{}),"\n",(0,d.jsx)(n.h2,{id:"api_groups",children:"API_GROUPS"}),"\n",(0,d.jsx)(n.pre,{children:(0,d.jsx)(n.code,{className:"language-ts",children:"const API_GROUPS: Required<ApiGroupOverrideType>;\n"})}),"\n",(0,d.jsx)(n.p,{children:"Defined in: renderer.ts:118"}),"\n",(0,d.jsx)(n.p,{children:(0,d.jsx)(n.strong,{children:(0,d.jsx)(n.code,{children:"Use Declared Type"})})}),"\n",(0,d.jsx)(n.p,{children:"Default group names for API types and non-API types.\nThis constant provides the base folder structure for organizing GraphQL schema entities.\nCan be overridden via ApiGroupOverrideType in configuration."}),"\n",(0,d.jsx)(n.h3,{id:"example-9",children:"Example"}),"\n",(0,d.jsx)(n.pre,{children:(0,d.jsx)(n.code,{className:"language-typescript",children:'// Default structure\nconst defaultGroups = API_GROUPS;\n// { operations: "operations", types: "types" }\n\n// With custom override\nconst customGroups = { ...API_GROUPS, operations: "queries-and-mutations" };\n'})}),"\n",(0,d.jsx)(n.h3,{id:"see",children:"See"}),"\n",(0,d.jsxs)(n.p,{children:[(0,d.jsx)(n.a,{href:"#getapigroupfolder",children:"getApiGroupFolder"})," For usage with type categorization"]}),"\n",(0,d.jsx)(n.hr,{}),"\n",(0,d.jsx)(n.h2,{id:"getapigroupfolder",children:"getApiGroupFolder()"}),"\n",(0,d.jsx)(n.pre,{children:(0,d.jsx)(n.code,{className:"language-ts",children:"function getApiGroupFolder(type, groups?): string;\n"})}),"\n",(0,d.jsx)(n.p,{children:"Defined in: renderer.ts:140"}),"\n",(0,d.jsx)(n.p,{children:(0,d.jsx)(n.strong,{children:(0,d.jsx)(n.code,{children:"Use Declared Type"})})}),"\n",(0,d.jsx)(n.p,{children:"Determines the appropriate folder for a GraphQL schema entity based on its type."}),"\n",(0,d.jsx)(n.h3,{id:"parameters-7",children:"Parameters"}),"\n",(0,d.jsx)(n.h4,{id:"type-3",children:"type"}),"\n",(0,d.jsx)(n.p,{children:(0,d.jsx)(n.code,{children:"unknown"})}),"\n",(0,d.jsx)(n.p,{children:"The GraphQL schema entity to categorize"}),"\n",(0,d.jsx)(n.h4,{id:"groups",children:"groups?"}),"\n",(0,d.jsxs)(n.p,{children:[(0,d.jsx)(n.code,{children:"Maybe"}),"<",(0,d.jsx)(n.code,{children:"boolean"})," | ",(0,d.jsx)(n.code,{children:"ApiGroupOverrideType"}),">"]}),"\n",(0,d.jsx)(n.p,{children:"Optional custom group naming configuration"}),"\n",(0,d.jsx)(n.h3,{id:"returns-7",children:"Returns"}),"\n",(0,d.jsx)(n.p,{children:(0,d.jsx)(n.code,{children:"string"})}),"\n",(0,d.jsx)(n.p,{children:"The folder name where the entity should be placed"}),"\n",(0,d.jsx)(n.h3,{id:"example-10",children:"Example"}),"\n",(0,d.jsx)(n.pre,{children:(0,d.jsx)(n.code,{className:"language-typescript",children:'// With default groups\nconst folder = getApiGroupFolder(queryType); // Returns "operations"\n\n// With custom groups\nconst folder = getApiGroupFolder(objectType, { operations: "queries" }); // Returns appropriate folder\n'})}),"\n",(0,d.jsx)(n.hr,{}),"\n",(0,d.jsx)(n.h2,{id:"getrenderer",children:"getRenderer()"}),"\n",(0,d.jsx)(n.pre,{children:(0,d.jsx)(n.code,{className:"language-ts",children:"function getRenderer(\n   printer, \n   outputDir, \n   baseURL, \n   group, \n   prettify, \n   docOptions, \nmdxModule?): Promise<Renderer>;\n"})}),"\n",(0,d.jsx)(n.p,{children:"Defined in: renderer.ts:558"}),"\n",(0,d.jsx)(n.p,{children:(0,d.jsx)(n.strong,{children:(0,d.jsx)(n.code,{children:"Use Declared Type"})})}),"\n",(0,d.jsx)(n.p,{children:"Factory function to create and initialize a Renderer instance.\nCreates the output directory and returns a configured renderer."}),"\n",(0,d.jsx)(n.h3,{id:"parameters-8",children:"Parameters"}),"\n",(0,d.jsx)(n.h4,{id:"printer-1",children:"printer"}),"\n",(0,d.jsxs)(n.p,{children:[(0,d.jsx)(n.em,{children:"typeof"})," ",(0,d.jsx)(n.code,{children:"IPrinter"})]}),"\n",(0,d.jsx)(n.p,{children:"The printer instance to use for rendering types"}),"\n",(0,d.jsx)(n.h4,{id:"outputdir-2",children:"outputDir"}),"\n",(0,d.jsx)(n.p,{children:(0,d.jsx)(n.code,{children:"string"})}),"\n",(0,d.jsx)(n.p,{children:"The output directory for generated documentation"}),"\n",(0,d.jsx)(n.h4,{id:"baseurl-2",children:"baseURL"}),"\n",(0,d.jsx)(n.p,{children:(0,d.jsx)(n.code,{children:"string"})}),"\n",(0,d.jsx)(n.p,{children:"The base URL for the documentation"}),"\n",(0,d.jsx)(n.h4,{id:"group-2",children:"group"}),"\n",(0,d.jsxs)(n.p,{children:[(0,d.jsx)(n.code,{children:"Maybe"}),"<",(0,d.jsx)(n.code,{children:"Partial"}),"<",(0,d.jsx)(n.code,{children:"Record"}),"<",(0,d.jsx)(n.code,{children:"SchemaEntity"}),", ",(0,d.jsx)(n.code,{children:"Record"}),"<",(0,d.jsx)(n.code,{children:"string"}),", ",(0,d.jsx)(n.code,{children:"Maybe"}),"<",(0,d.jsx)(n.code,{children:"string"}),">>>>>"]}),"\n",(0,d.jsx)(n.p,{children:"Optional grouping configuration"}),"\n",(0,d.jsx)(n.h4,{id:"prettify-2",children:"prettify"}),"\n",(0,d.jsx)(n.p,{children:(0,d.jsx)(n.code,{children:"boolean"})}),"\n",(0,d.jsx)(n.p,{children:"Whether to prettify the output markdown"}),"\n",(0,d.jsx)(n.h4,{id:"docoptions-1",children:"docOptions"}),"\n",(0,d.jsxs)(n.p,{children:[(0,d.jsx)(n.code,{children:"Maybe"}),"<",(0,d.jsx)(n.code,{children:"RendererDocOptions"}),">"]}),"\n",(0,d.jsx)(n.p,{children:"Additional documentation options"}),"\n",(0,d.jsx)(n.h4,{id:"mdxmodule-2",children:"mdxModule?"}),"\n",(0,d.jsx)(n.p,{children:(0,d.jsx)(n.code,{children:"unknown"})}),"\n",(0,d.jsx)(n.p,{children:"Optional MDX module for enhanced features"}),"\n",(0,d.jsx)(n.h3,{id:"returns-8",children:"Returns"}),"\n",(0,d.jsxs)(n.p,{children:[(0,d.jsx)(n.code,{children:"Promise"}),"<",(0,d.jsx)(n.a,{href:"#renderer",children:(0,d.jsx)(n.code,{children:"Renderer"})}),">"]}),"\n",(0,d.jsx)(n.p,{children:"A configured Renderer instance"}),"\n",(0,d.jsx)(n.h3,{id:"example-11",children:"Example"}),"\n",(0,d.jsx)(n.pre,{children:(0,d.jsx)(n.code,{className:"language-typescript",children:"const renderer = await getRenderer(\n  myPrinter,\n  './docs',\n  '/api',\n  groupConfig,\n  true,\n  { force: true, index: true }\n);\n"})})]})}function p(e={}){let{wrapper:n}={...(0,l.a)(),...e.components};return n?(0,d.jsx)(n,{...e,children:(0,d.jsx)(c,{...e})}):c(e)}},50065:function(e,n,r){r.d(n,{Z:function(){return t},a:function(){return s}});var i=r(67294);let d={},l=i.createContext(d);function s(e){let n=i.useContext(l);return i.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function t(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(d):e.components||d:s(e.components),i.createElement(l.Provider,{value:n},e.children)}}}]);