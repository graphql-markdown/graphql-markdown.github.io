"use strict";(self.webpackChunk_graphql_markdown_website=self.webpackChunk_graphql_markdown_website||[]).push([[6401],{4137:(e,t,n)=>{n.d(t,{Zo:()=>d,kt:()=>h});var r=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var p=r.createContext({}),c=function(e){var t=r.useContext(p),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},d=function(e){var t=c(e.components);return r.createElement(p.Provider,{value:t},e.children)},s="mdxType",u={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},m=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,i=e.originalType,p=e.parentName,d=l(e,["components","mdxType","originalType","parentName"]),s=c(n),m=a,h=s["".concat(p,".").concat(m)]||s[m]||u[m]||i;return n?r.createElement(h,o(o({ref:t},d),{},{components:n})):r.createElement(h,o({ref:t},d))}));function h(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var i=n.length,o=new Array(i);o[0]=m;var l={};for(var p in t)hasOwnProperty.call(t,p)&&(l[p]=t[p]);l.originalType=e,l[s]="string"==typeof e?e:a,o[1]=l;for(var c=2;c<i;c++)o[c]=n[c];return r.createElement.apply(null,o)}return r.createElement.apply(null,n)}m.displayName="MDXCreateElement"},7318:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>p,contentTitle:()=>o,default:()=>s,frontMatter:()=>i,metadata:()=>l,toc:()=>c});var r=n(7462),a=(n(7294),n(4137));const i={id:"custom-directive",pagination_prev:null,pagination_next:null},o="Custom schema directives handling",l={unversionedId:"advanced/custom-directive",id:"advanced/custom-directive",title:"Custom schema directives handling",description:"For directives applied to the schema, you can select which ones to be rendered for the types or in the locations they are declared. Information about the custom directives includes a custom description.",source:"@site/docs/advanced/custom-directive.md",sourceDirName:"advanced",slug:"/advanced/custom-directive",permalink:"/docs/advanced/custom-directive",draft:!1,editUrl:"https://github.com/graphql-markdown/graphql-markdown/tree/main/docs/advanced/custom-directive.md",tags:[],version:"current",frontMatter:{id:"custom-directive",pagination_prev:null,pagination_next:null},sidebar:"defaultSidebar"},p={},c=[{value:"Usage",id:"usage",level:2},{value:"<code>descriptor</code>",id:"descriptor",level:3},{value:"<code>tag</code>",id:"tag",level:3},{value:"Wildcard",id:"wildcard",level:3},{value:"Helpers",id:"helpers",level:2},{value:"<code>@graphql-markdown/helpers</code>",id:"graphql-markdownhelpers",level:3},{value:"<code>@graphql-markdown/graphql</code>",id:"graphql-markdowngraphql",level:3}],d={toc:c};function s(e){let{components:t,...n}=e;return(0,a.kt)("wrapper",(0,r.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"custom-schema-directives-handling"},"Custom schema directives handling"),(0,a.kt)("p",null,"For directives applied to the schema, you can select which ones to be rendered for the types or in the locations they are declared. Information about the custom directives includes a custom description."),(0,a.kt)("p",null,"For example, we have one query called ",(0,a.kt)("inlineCode",{parentName:"p"},"searchRole"),", and we want to limit access to ",(0,a.kt)("inlineCode",{parentName:"p"},"ADMIN")," user roles only."),(0,a.kt)("p",null,"We can accomplish this by adding a directive called ",(0,a.kt)("inlineCode",{parentName:"p"},"auth")," with an argument ",(0,a.kt)("inlineCode",{parentName:"p"},"requires")," to the query."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-graphql"},"directive @auth(requires: Roles = ADMIN) on OBJECT | FIELD_DEFINITION\n\nenum Roles {\n  ADMIN\n  USER\n}\n\ntype Query {\n  searchRole(roles: [Roles!]! = [ADMIN]): Int! @auth\n}\n")),(0,a.kt)("h2",{id:"usage"},"Usage"),(0,a.kt)("p",null,"Add the option ",(0,a.kt)("a",{parentName:"p",href:"/docs/settings#customdirective"},(0,a.kt)("inlineCode",{parentName:"a"},"customDirective"))," to the ",(0,a.kt)("inlineCode",{parentName:"p"},"@graphql-markdown/docusaurus")," configuration."),(0,a.kt)("p",null,"The ",(0,a.kt)("inlineCode",{parentName:"p"},"descriptor")," and ",(0,a.kt)("inlineCode",{parentName:"p"},"tag")," functions receive 2 arguments:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"directive")," of type ",(0,a.kt)("a",{parentName:"li",href:"https://github.com/graphql/graphql-js/blob/main/src/type/directives.ts"},(0,a.kt)("inlineCode",{parentName:"a"},"GraphQLDirective"))),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"node")," of type ",(0,a.kt)("a",{parentName:"li",href:"https://github.com/graphql/graphql-js/blob/main/src/type/definition.ts"},(0,a.kt)("inlineCode",{parentName:"a"},"GraphQLNamedType"))," or ",(0,a.kt)("a",{parentName:"li",href:"https://github.com/graphql/graphql-js/blob/main/src/language/ast.ts"},(0,a.kt)("inlineCode",{parentName:"a"},"ASTNode")))),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-ts"},"type DirectiveName = string & { _opaque: typeof DirectiveName };\n\ntype CustomDirective = {\n  [name: DirectiveName]: {\n    descriptor?: (directive?: GraphQLDirective, node?: unknown): string;\n    tag?: (directive?: GraphQLDirective, node?: unknown): Badge;\n  };\n};\n\ntype Badge = {\n  text: string | TypeLocale;\n  classname: string;\n};\n")),(0,a.kt)("h3",{id:"descriptor"},(0,a.kt)("inlineCode",{parentName:"h3"},"descriptor")),(0,a.kt)("p",null,"The ",(0,a.kt)("inlineCode",{parentName:"p"},"descriptor")," allows rendering custom directive description applicable to entities."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js",metastring:"{8-13}","{8-13}":!0},'plugins: [\n  [\n    "@graphql-markdown/docusaurus",\n    {\n      // ... other options\n      customDirective: {\n        auth: {\n          descriptor: (directive, node) =>\n            directiveDescriptor(\n              directive,\n              node,\n              "This requires the current user to be in `${requires}` role.",\n            ),\n        }\n        // ... other custom directive options\n      },\n    },\n  ],\n],\n')),(0,a.kt)("h3",{id:"tag"},(0,a.kt)("inlineCode",{parentName:"h3"},"tag")),(0,a.kt)("p",null,"The ",(0,a.kt)("inlineCode",{parentName:"p"},"tag")," allows rendering custom badges (tags) based on custom directive applicable to entities."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js",metastring:"{8}","{8}":!0},'plugins: [\n  [\n    "@graphql-markdown/docusaurus",\n    {\n      // ... other options\n      customDirective: {\n        beta: {\n          tag: (directive, node) => ({ text: directive.name, classname: "badge--info" }),\n        }\n        // ... other custom directive options\n      },\n    },\n  ],\n],\n')),(0,a.kt)("h3",{id:"wildcard"},"Wildcard"),(0,a.kt)("p",null,"You can use ",(0,a.kt)("strong",{parentName:"p"},(0,a.kt)("inlineCode",{parentName:"strong"},'"*"')," as wildcard")," for the directive name. This will allow all directives not declared with their name under ",(0,a.kt)("inlineCode",{parentName:"p"},"customDirective")," to be handled by the wildcard ",(0,a.kt)("inlineCode",{parentName:"p"},"descriptor")," and/or ",(0,a.kt)("inlineCode",{parentName:"p"},"tag"),"."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js",metastring:"{11-14}","{11-14}":!0},'const { directiveDescriptor, tagDescriptor } = require("@graphql-markdown/helpers");\n\n//...//\n\nplugins: [\n  [\n    "@graphql-markdown/docusaurus",\n    {\n      // ... other options\n      customDirective: {\n        "*": {\n          descriptor: directiveDescriptor,\n          tag: tagDescriptor,\n        },\n        // ... optionally specific custom directive options\n      },\n    },\n  ],\n],\n')),(0,a.kt)("h2",{id:"helpers"},"Helpers"),(0,a.kt)("p",null,"The packages ",(0,a.kt)("inlineCode",{parentName:"p"},"@graphql-markdown/helpers")," and ",(0,a.kt)("inlineCode",{parentName:"p"},"@graphql-markdown/graphql")," provide few helper functions to quick start."),(0,a.kt)("admonition",{type:"info"},(0,a.kt)("p",{parentName:"admonition"},(0,a.kt)("inlineCode",{parentName:"p"},"@graphql-markdown/helpers")," is an optional peer dependency, and it needs to be installed before using it."),(0,a.kt)("pre",{parentName:"admonition"},(0,a.kt)("code",{parentName:"pre",className:"language-shell"},"npm i @graphql-markdown/helpers\n"))),(0,a.kt)("h3",{id:"graphql-markdownhelpers"},(0,a.kt)("inlineCode",{parentName:"h3"},"@graphql-markdown/helpers")),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"/api/helpers/directives/descriptor"},(0,a.kt)("inlineCode",{parentName:"a"},"directiveDescriptor"))),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"/api/helpers/directives/tag"},(0,a.kt)("inlineCode",{parentName:"a"},"tagDescriptor")))),(0,a.kt)("h3",{id:"graphql-markdowngraphql"},(0,a.kt)("inlineCode",{parentName:"h3"},"@graphql-markdown/graphql")),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"/api/graphql/introspection#gettypedirectivevalues"},(0,a.kt)("inlineCode",{parentName:"a"},"getTypeDirectiveValues"))),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"/api/graphql/introspection#gettypedirectiveargvalue"},(0,a.kt)("inlineCode",{parentName:"a"},"getTypeDirectiveArgValue")))))}s.isMDXComponent=!0}}]);