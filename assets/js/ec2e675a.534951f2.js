"use strict";(self.webpackChunkdocusaurus_2=self.webpackChunkdocusaurus_2||[]).push([[2875],{3905:(e,t,a)=>{a.d(t,{Zo:()=>p,kt:()=>m});var n=a(7294);function r(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function i(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function o(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?i(Object(a),!0).forEach((function(t){r(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):i(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function s(e,t){if(null==e)return{};var a,n,r=function(e,t){if(null==e)return{};var a,n,r={},i=Object.keys(e);for(n=0;n<i.length;n++)a=i[n],t.indexOf(a)>=0||(r[a]=e[a]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(n=0;n<i.length;n++)a=i[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(r[a]=e[a])}return r}var l=n.createContext({}),d=function(e){var t=n.useContext(l),a=t;return e&&(a="function"==typeof e?e(t):o(o({},t),e)),a},p=function(e){var t=d(e.components);return n.createElement(l.Provider,{value:t},e.children)},c={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},u=n.forwardRef((function(e,t){var a=e.components,r=e.mdxType,i=e.originalType,l=e.parentName,p=s(e,["components","mdxType","originalType","parentName"]),u=d(a),m=r,h=u["".concat(l,".").concat(m)]||u[m]||c[m]||i;return a?n.createElement(h,o(o({ref:t},p),{},{components:a})):n.createElement(h,o({ref:t},p))}));function m(e,t){var a=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var i=a.length,o=new Array(i);o[0]=u;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s.mdxType="string"==typeof e?e:r,o[1]=s;for(var d=2;d<i;d++)o[d]=a[d];return n.createElement.apply(null,o)}return n.createElement.apply(null,a)}u.displayName="MDXCreateElement"},5769:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>l,contentTitle:()=>o,default:()=>c,frontMatter:()=>i,metadata:()=>s,toc:()=>d});var n=a(7462),r=(a(7294),a(3905));const i={id:"update-media-list-entries",title:"UpdateMediaListEntries",hide_table_of_contents:!0,pagination_next:null,pagination_prev:null},o=void 0,s={unversionedId:"schema/mutations/update-media-list-entries",id:"schema/mutations/update-media-list-entries",title:"UpdateMediaListEntries",description:"Update multiple media list entries to the same values",source:"@site/docs/schema/mutations/update-media-list-entries.mdx",sourceDirName:"schema/mutations",slug:"/schema/mutations/update-media-list-entries",permalink:"/schema/mutations/update-media-list-entries",draft:!1,tags:[],version:"current",frontMatter:{id:"update-media-list-entries",title:"UpdateMediaListEntries",hide_table_of_contents:!0,pagination_next:null,pagination_prev:null},sidebar:"basic"},l={},d=[{value:"Arguments",id:"arguments",level:3},{value:"<code>status</code> (<code>MediaListStatus</code>)",id:"status-medialiststatus",level:4},{value:"<code>score</code> (<code>Float</code>)",id:"score-float",level:4},{value:"<code>scoreRaw</code> (<code>Int</code>)",id:"scoreraw-int",level:4},{value:"<code>progress</code> (<code>Int</code>)",id:"progress-int",level:4},{value:"<code>progressVolumes</code> (<code>Int</code>)",id:"progressvolumes-int",level:4},{value:"<code>repeat</code> (<code>Int</code>)",id:"repeat-int",level:4},{value:"<code>priority</code> (<code>Int</code>)",id:"priority-int",level:4},{value:"<code>private</code> (<code>Boolean</code>)",id:"private-boolean",level:4},{value:"<code>notes</code> (<code>String</code>)",id:"notes-string",level:4},{value:"<code>hiddenFromStatusLists</code> (<code>Boolean</code>)",id:"hiddenfromstatuslists-boolean",level:4},{value:"<code>advancedScores</code> (<code>[Float]</code>)",id:"advancedscores-float",level:4},{value:"<code>startedAt</code> (<code>FuzzyDateInput</code>)",id:"startedat-fuzzydateinput",level:4},{value:"<code>completedAt</code> (<code>FuzzyDateInput</code>)",id:"completedat-fuzzydateinput",level:4},{value:"<code>ids</code> (<code>[Int]</code>)",id:"ids-int",level:4},{value:"Type",id:"type",level:3},{value:"<code>MediaList</code>",id:"medialist",level:4}],p={toc:d};function c(e){let{components:t,...a}=e;return(0,r.kt)("wrapper",(0,n.Z)({},p,a,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("p",null,"Update multiple media list entries to the same values"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-graphql"},"UpdateMediaListEntries(\n  status: MediaListStatus\n  score: Float\n  scoreRaw: Int\n  progress: Int\n  progressVolumes: Int\n  repeat: Int\n  priority: Int\n  private: Boolean\n  notes: String\n  hiddenFromStatusLists: Boolean\n  advancedScores: [Float]\n  startedAt: FuzzyDateInput\n  completedAt: FuzzyDateInput\n  ids: [Int]\n): [MediaList]\n")),(0,r.kt)("h3",{id:"arguments"},"Arguments"),(0,r.kt)("h4",{id:"status-medialiststatus"},(0,r.kt)("a",{parentName:"h4",href:"#"},(0,r.kt)("inlineCode",{parentName:"a"},"status"))," (",(0,r.kt)("a",{parentName:"h4",href:"/schema/enums/media-list-status"},(0,r.kt)("inlineCode",{parentName:"a"},"MediaListStatus")),")"),(0,r.kt)("p",null,"The watching/reading status"),(0,r.kt)("h4",{id:"score-float"},(0,r.kt)("a",{parentName:"h4",href:"#"},(0,r.kt)("inlineCode",{parentName:"a"},"score"))," (",(0,r.kt)("a",{parentName:"h4",href:"/schema/scalars/float"},(0,r.kt)("inlineCode",{parentName:"a"},"Float")),")"),(0,r.kt)("p",null,"The score of the media in the user's chosen scoring method"),(0,r.kt)("h4",{id:"scoreraw-int"},(0,r.kt)("a",{parentName:"h4",href:"#"},(0,r.kt)("inlineCode",{parentName:"a"},"scoreRaw"))," (",(0,r.kt)("a",{parentName:"h4",href:"/schema/scalars/int"},(0,r.kt)("inlineCode",{parentName:"a"},"Int")),")"),(0,r.kt)("p",null,"The score of the media in 100 point"),(0,r.kt)("h4",{id:"progress-int"},(0,r.kt)("a",{parentName:"h4",href:"#"},(0,r.kt)("inlineCode",{parentName:"a"},"progress"))," (",(0,r.kt)("a",{parentName:"h4",href:"/schema/scalars/int"},(0,r.kt)("inlineCode",{parentName:"a"},"Int")),")"),(0,r.kt)("p",null,"The amount of episodes/chapters consumed by the user"),(0,r.kt)("h4",{id:"progressvolumes-int"},(0,r.kt)("a",{parentName:"h4",href:"#"},(0,r.kt)("inlineCode",{parentName:"a"},"progressVolumes"))," (",(0,r.kt)("a",{parentName:"h4",href:"/schema/scalars/int"},(0,r.kt)("inlineCode",{parentName:"a"},"Int")),")"),(0,r.kt)("p",null,"The amount of volumes read by the user"),(0,r.kt)("h4",{id:"repeat-int"},(0,r.kt)("a",{parentName:"h4",href:"#"},(0,r.kt)("inlineCode",{parentName:"a"},"repeat"))," (",(0,r.kt)("a",{parentName:"h4",href:"/schema/scalars/int"},(0,r.kt)("inlineCode",{parentName:"a"},"Int")),")"),(0,r.kt)("p",null,"The amount of times the user has rewatched/read the media"),(0,r.kt)("h4",{id:"priority-int"},(0,r.kt)("a",{parentName:"h4",href:"#"},(0,r.kt)("inlineCode",{parentName:"a"},"priority"))," (",(0,r.kt)("a",{parentName:"h4",href:"/schema/scalars/int"},(0,r.kt)("inlineCode",{parentName:"a"},"Int")),")"),(0,r.kt)("p",null,"Priority of planning"),(0,r.kt)("h4",{id:"private-boolean"},(0,r.kt)("a",{parentName:"h4",href:"#"},(0,r.kt)("inlineCode",{parentName:"a"},"private"))," (",(0,r.kt)("a",{parentName:"h4",href:"/schema/scalars/boolean"},(0,r.kt)("inlineCode",{parentName:"a"},"Boolean")),")"),(0,r.kt)("p",null,"If the entry should only be visible to authenticated user"),(0,r.kt)("h4",{id:"notes-string"},(0,r.kt)("a",{parentName:"h4",href:"#"},(0,r.kt)("inlineCode",{parentName:"a"},"notes"))," (",(0,r.kt)("a",{parentName:"h4",href:"/schema/scalars/string"},(0,r.kt)("inlineCode",{parentName:"a"},"String")),")"),(0,r.kt)("p",null,"Text notes"),(0,r.kt)("h4",{id:"hiddenfromstatuslists-boolean"},(0,r.kt)("a",{parentName:"h4",href:"#"},(0,r.kt)("inlineCode",{parentName:"a"},"hiddenFromStatusLists"))," (",(0,r.kt)("a",{parentName:"h4",href:"/schema/scalars/boolean"},(0,r.kt)("inlineCode",{parentName:"a"},"Boolean")),")"),(0,r.kt)("p",null,"If the entry shown be hidden from non-custom lists"),(0,r.kt)("h4",{id:"advancedscores-float"},(0,r.kt)("a",{parentName:"h4",href:"#"},(0,r.kt)("inlineCode",{parentName:"a"},"advancedScores"))," (",(0,r.kt)("a",{parentName:"h4",href:"/schema/scalars/float"},(0,r.kt)("inlineCode",{parentName:"a"},"[Float]")),")"),(0,r.kt)("p",null,"Array of advanced scores"),(0,r.kt)("h4",{id:"startedat-fuzzydateinput"},(0,r.kt)("a",{parentName:"h4",href:"#"},(0,r.kt)("inlineCode",{parentName:"a"},"startedAt"))," (",(0,r.kt)("a",{parentName:"h4",href:"/schema/inputs/fuzzy-date-input"},(0,r.kt)("inlineCode",{parentName:"a"},"FuzzyDateInput")),")"),(0,r.kt)("p",null,"When the entry was started by the user"),(0,r.kt)("h4",{id:"completedat-fuzzydateinput"},(0,r.kt)("a",{parentName:"h4",href:"#"},(0,r.kt)("inlineCode",{parentName:"a"},"completedAt"))," (",(0,r.kt)("a",{parentName:"h4",href:"/schema/inputs/fuzzy-date-input"},(0,r.kt)("inlineCode",{parentName:"a"},"FuzzyDateInput")),")"),(0,r.kt)("p",null,"When the entry was completed by the user"),(0,r.kt)("h4",{id:"ids-int"},(0,r.kt)("a",{parentName:"h4",href:"#"},(0,r.kt)("inlineCode",{parentName:"a"},"ids"))," (",(0,r.kt)("a",{parentName:"h4",href:"/schema/scalars/int"},(0,r.kt)("inlineCode",{parentName:"a"},"[Int]")),")"),(0,r.kt)("p",null,"The list entries ids to update"),(0,r.kt)("h3",{id:"type"},"Type"),(0,r.kt)("h4",{id:"medialist"},(0,r.kt)("a",{parentName:"h4",href:"/schema/objects/media-list"},(0,r.kt)("inlineCode",{parentName:"a"},"MediaList"))),(0,r.kt)("p",null,"List of anime or manga"))}c.isMDXComponent=!0}}]);