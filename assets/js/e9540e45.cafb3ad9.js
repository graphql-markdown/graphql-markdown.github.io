"use strict";(self.webpackChunk_graphql_markdown_website=self.webpackChunk_graphql_markdown_website||[]).push([[1219],{4137:(e,t,a)=>{a.d(t,{Zo:()=>c,kt:()=>d});var r=a(7294);function n(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function p(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,r)}return a}function l(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?p(Object(a),!0).forEach((function(t){n(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):p(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function i(e,t){if(null==e)return{};var a,r,n=function(e,t){if(null==e)return{};var a,r,n={},p=Object.keys(e);for(r=0;r<p.length;r++)a=p[r],t.indexOf(a)>=0||(n[a]=e[a]);return n}(e,t);if(Object.getOwnPropertySymbols){var p=Object.getOwnPropertySymbols(e);for(r=0;r<p.length;r++)a=p[r],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(n[a]=e[a])}return n}var o=r.createContext({}),s=function(e){var t=r.useContext(o),a=t;return e&&(a="function"==typeof e?e(t):l(l({},t),e)),a},c=function(e){var t=s(e.components);return r.createElement(o.Provider,{value:t},e.children)},u="mdxType",m={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},h=r.forwardRef((function(e,t){var a=e.components,n=e.mdxType,p=e.originalType,o=e.parentName,c=i(e,["components","mdxType","originalType","parentName"]),u=s(a),h=n,d=u["".concat(o,".").concat(h)]||u[h]||m[h]||p;return a?r.createElement(d,l(l({ref:t},c),{},{components:a})):r.createElement(d,l({ref:t},c))}));function d(e,t){var a=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var p=a.length,l=new Array(p);l[0]=h;var i={};for(var o in t)hasOwnProperty.call(t,o)&&(i[o]=t[o]);i.originalType=e,i[u]="string"==typeof e?e:n,l[1]=i;for(var s=2;s<p;s++)l[s]=a[s];return r.createElement.apply(null,l)}return r.createElement.apply(null,a)}h.displayName="MDXCreateElement"},4462:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>o,contentTitle:()=>l,default:()=>u,frontMatter:()=>p,metadata:()=>i,toc:()=>s});var r=a(7462),n=(a(7294),a(4137));const p={title:"relation",pagination_prev:null,pagination_next:null,toc_max_heading_level:2},l=void 0,i={unversionedId:"graphql/relation",id:"graphql/relation",title:"relation",description:"Library supporting relatedTypeSection for displaying relations between GraphQL schema entities.",source:"@site/api/graphql/relation.md",sourceDirName:"graphql",slug:"/graphql/relation",permalink:"/api/graphql/relation",draft:!1,tags:[],version:"current",frontMatter:{title:"relation",pagination_prev:null,pagination_next:null,toc_max_heading_level:2},sidebar:"defaultSidebar"},o={},s=[{value:"See",id:"see",level:2},{value:"getRelationOfField()",id:"getrelationoffield",level:2},{value:"Parameters",id:"parameters",level:3},{value:"Returns",id:"returns",level:3},{value:"See",id:"see-1",level:3},{value:"Source",id:"source",level:3},{value:"getRelationOfImplementation()",id:"getrelationofimplementation",level:2},{value:"Parameters",id:"parameters-1",level:3},{value:"Returns",id:"returns-1",level:3},{value:"See",id:"see-2",level:3},{value:"Source",id:"source-1",level:3},{value:"getRelationOfInterface()",id:"getrelationofinterface",level:2},{value:"Parameters",id:"parameters-2",level:3},{value:"Returns",id:"returns-2",level:3},{value:"See",id:"see-3",level:3},{value:"Source",id:"source-2",level:3},{value:"getRelationOfReturn()",id:"getrelationofreturn",level:2},{value:"Parameters",id:"parameters-3",level:3},{value:"Returns",id:"returns-3",level:3},{value:"See",id:"see-4",level:3},{value:"Source",id:"source-3",level:3},{value:"getRelationOfUnion()",id:"getrelationofunion",level:2},{value:"Parameters",id:"parameters-4",level:3},{value:"Returns",id:"returns-4",level:3},{value:"See",id:"see-5",level:3},{value:"Source",id:"source-4",level:3}],c={toc:s};function u(e){let{components:t,...a}=e;return(0,n.kt)("wrapper",(0,r.Z)({},c,a,{components:t,mdxType:"MDXLayout"}),(0,n.kt)("p",null,"Library supporting ",(0,n.kt)("inlineCode",{parentName:"p"},"relatedTypeSection")," for displaying relations between GraphQL schema entities."),(0,n.kt)("h2",{id:"see"},"See"),(0,n.kt)("p",null,(0,n.kt)("a",{parentName:"p",href:"https://graphql-markdown.github.io/docs/settings#printtypeoptions"},"Option ",(0,n.kt)("inlineCode",{parentName:"a"},"relatedTypeSection"))),(0,n.kt)("h2",{id:"getrelationoffield"},"getRelationOfField()"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-ts"},"getRelationOfField(type, schemaMap): Partial<Record<SchemaEntity, RelationOfField[]>>\n")),(0,n.kt)("p",null,"Returns a map of fields and arguments where the GraphQL schema type matches the type."),(0,n.kt)("h3",{id:"parameters"},"Parameters"),(0,n.kt)("p",null,"\u25aa ",(0,n.kt)("strong",{parentName:"p"},"type"),": ",(0,n.kt)("inlineCode",{parentName:"p"},"unknown")),(0,n.kt)("p",null,"the GraphQL schema type being processed."),(0,n.kt)("p",null,"\u25aa ",(0,n.kt)("strong",{parentName:"p"},"schemaMap"),": ",(0,n.kt)("inlineCode",{parentName:"p"},"Maybe"),"\\<",(0,n.kt)("inlineCode",{parentName:"p"},"SchemaMap"),">"),(0,n.kt)("p",null,"a GraphQL schema map (see ",(0,n.kt)("a",{parentName:"p",href:"/api/graphql/introspection#getschemamap"},"introspection!getSchemaMap"),")."),(0,n.kt)("h3",{id:"returns"},"Returns"),(0,n.kt)("p",null,"a record map of fields and arguments relations."),(0,n.kt)("h3",{id:"see-1"},"See"),(0,n.kt)("p",null,"[mapRelationOf]","(","[object Object]",")"),(0,n.kt)("h3",{id:"source"},"Source"),(0,n.kt)("p",null,(0,n.kt)("a",{parentName:"p",href:"https://github.com/graphql-markdown/graphql-markdown/blob/579869c/packages/types/src/graphql.d.ts#L78"},"packages/types/src/graphql.d.ts:78")),(0,n.kt)("hr",null),(0,n.kt)("h2",{id:"getrelationofimplementation"},"getRelationOfImplementation()"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-ts"},"getRelationOfImplementation(type, schemaMap): Partial<Record<SchemaEntity, RelationOfImplementation[]>>\n")),(0,n.kt)("p",null,"Returns a map of types (unions or interfaces) where the GraphQL schema type is implemented."),(0,n.kt)("h3",{id:"parameters-1"},"Parameters"),(0,n.kt)("p",null,"\u25aa ",(0,n.kt)("strong",{parentName:"p"},"type"),": ",(0,n.kt)("inlineCode",{parentName:"p"},"unknown")),(0,n.kt)("p",null,"the GraphQL schema type being processed."),(0,n.kt)("p",null,"\u25aa ",(0,n.kt)("strong",{parentName:"p"},"schemaMap"),": ",(0,n.kt)("inlineCode",{parentName:"p"},"Maybe"),"\\<",(0,n.kt)("inlineCode",{parentName:"p"},"SchemaMap"),">"),(0,n.kt)("p",null,"a GraphQL schema map (see ",(0,n.kt)("a",{parentName:"p",href:"/api/graphql/introspection#getschemamap"},"introspection!getSchemaMap"),")."),(0,n.kt)("h3",{id:"returns-1"},"Returns"),(0,n.kt)("p",null,"a record map of unions or interfaces relations."),(0,n.kt)("h3",{id:"see-2"},"See"),(0,n.kt)("p",null,"[mapRelationOf]","(","[object Object]",")"),(0,n.kt)("h3",{id:"source-1"},"Source"),(0,n.kt)("p",null,(0,n.kt)("a",{parentName:"p",href:"https://github.com/graphql-markdown/graphql-markdown/blob/579869c/packages/types/src/graphql.d.ts#L78"},"packages/types/src/graphql.d.ts:78")),(0,n.kt)("hr",null),(0,n.kt)("h2",{id:"getrelationofinterface"},"getRelationOfInterface()"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-ts"},"getRelationOfInterface(type, schemaMap): Partial<Record<SchemaEntity, RelationOfInterface[]>>\n")),(0,n.kt)("p",null,"Returns a map of interfaces where the GraphQL schema type is extended."),(0,n.kt)("h3",{id:"parameters-2"},"Parameters"),(0,n.kt)("p",null,"\u25aa ",(0,n.kt)("strong",{parentName:"p"},"type"),": ",(0,n.kt)("inlineCode",{parentName:"p"},"unknown")),(0,n.kt)("p",null,"the GraphQL schema type being processed."),(0,n.kt)("p",null,"\u25aa ",(0,n.kt)("strong",{parentName:"p"},"schemaMap"),": ",(0,n.kt)("inlineCode",{parentName:"p"},"Maybe"),"\\<",(0,n.kt)("inlineCode",{parentName:"p"},"SchemaMap"),">"),(0,n.kt)("p",null,"a GraphQL schema map (see ",(0,n.kt)("a",{parentName:"p",href:"/api/graphql/introspection#getschemamap"},"introspection!getSchemaMap"),")."),(0,n.kt)("h3",{id:"returns-2"},"Returns"),(0,n.kt)("p",null,"a record map of interfaces relations."),(0,n.kt)("h3",{id:"see-3"},"See"),(0,n.kt)("p",null,"[mapRelationOf]","(","[object Object]",")"),(0,n.kt)("h3",{id:"source-2"},"Source"),(0,n.kt)("p",null,(0,n.kt)("a",{parentName:"p",href:"https://github.com/graphql-markdown/graphql-markdown/blob/579869c/packages/types/src/graphql.d.ts#L78"},"packages/types/src/graphql.d.ts:78")),(0,n.kt)("hr",null),(0,n.kt)("h2",{id:"getrelationofreturn"},"getRelationOfReturn()"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-ts"},"getRelationOfReturn(type, schemaMap): Partial<Record<SchemaEntity, GraphQLOperationType[]>>\n")),(0,n.kt)("p",null,"Returns a map of operations (queries, mutations, subscriptions) where the GraphQL schema type is the return type."),(0,n.kt)("h3",{id:"parameters-3"},"Parameters"),(0,n.kt)("p",null,"\u25aa ",(0,n.kt)("strong",{parentName:"p"},"type"),": ",(0,n.kt)("inlineCode",{parentName:"p"},"unknown")),(0,n.kt)("p",null,"the GraphQL schema type being processed."),(0,n.kt)("p",null,"\u25aa ",(0,n.kt)("strong",{parentName:"p"},"schemaMap"),": ",(0,n.kt)("inlineCode",{parentName:"p"},"Maybe"),"\\<",(0,n.kt)("inlineCode",{parentName:"p"},"SchemaMap"),">"),(0,n.kt)("p",null,"a GraphQL schema map (see ",(0,n.kt)("a",{parentName:"p",href:"/api/graphql/introspection#getschemamap"},"introspection!getSchemaMap"),")."),(0,n.kt)("h3",{id:"returns-3"},"Returns"),(0,n.kt)("p",null,"a record map of operations relations."),(0,n.kt)("h3",{id:"see-4"},"See"),(0,n.kt)("p",null,"[mapRelationOf]","(","[object Object]",")"),(0,n.kt)("h3",{id:"source-3"},"Source"),(0,n.kt)("p",null,(0,n.kt)("a",{parentName:"p",href:"https://github.com/graphql-markdown/graphql-markdown/blob/579869c/packages/types/src/graphql.d.ts#L78"},"packages/types/src/graphql.d.ts:78")),(0,n.kt)("hr",null),(0,n.kt)("h2",{id:"getrelationofunion"},"getRelationOfUnion()"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-ts"},"getRelationOfUnion(type, schemaMap): Partial<Record<SchemaEntity, GraphQLUnionType[]>>\n")),(0,n.kt)("p",null,"Returns a map of unions where the GraphQL schema type is part of it."),(0,n.kt)("h3",{id:"parameters-4"},"Parameters"),(0,n.kt)("p",null,"\u25aa ",(0,n.kt)("strong",{parentName:"p"},"type"),": ",(0,n.kt)("inlineCode",{parentName:"p"},"unknown")),(0,n.kt)("p",null,"the GraphQL schema type being processed."),(0,n.kt)("p",null,"\u25aa ",(0,n.kt)("strong",{parentName:"p"},"schemaMap"),": ",(0,n.kt)("inlineCode",{parentName:"p"},"Maybe"),"\\<",(0,n.kt)("inlineCode",{parentName:"p"},"SchemaMap"),">"),(0,n.kt)("p",null,"a GraphQL schema map (see ",(0,n.kt)("a",{parentName:"p",href:"/api/graphql/introspection#getschemamap"},"introspection!getSchemaMap"),")."),(0,n.kt)("h3",{id:"returns-4"},"Returns"),(0,n.kt)("p",null,"a record map of unions relations."),(0,n.kt)("h3",{id:"see-5"},"See"),(0,n.kt)("p",null,"[mapRelationOf]","(","[object Object]",")"),(0,n.kt)("h3",{id:"source-4"},"Source"),(0,n.kt)("p",null,(0,n.kt)("a",{parentName:"p",href:"https://github.com/graphql-markdown/graphql-markdown/blob/579869c/packages/types/src/graphql.d.ts#L78"},"packages/types/src/graphql.d.ts:78")))}u.isMDXComponent=!0}}]);