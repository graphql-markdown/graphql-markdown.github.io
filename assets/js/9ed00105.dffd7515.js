"use strict";(self.webpackChunk_graphql_markdown_website=self.webpackChunk_graphql_markdown_website||[]).push([["7764"],{28950:function(e,n,i){i.r(n),i.d(n,{default:()=>u,frontMatter:()=>s,metadata:()=>r,assets:()=>l,toc:()=>c,contentTitle:()=>a});var r=JSON.parse('{"id":"configuration","title":"Configuration","description":"GraphQL-Markdown is compatible with most MDX frameworks, with built-in support for Docusaurus and other static site generators. This guide explains the different configuration methods and their priorities.","source":"@site/docs/configuration.md","sourceDirName":".","slug":"/configuration","permalink":"/docs/configuration","draft":false,"unlisted":false,"editUrl":"https://github.com/graphql-markdown/graphql-markdown/tree/main/docs/configuration.md","tags":[],"version":"current","sidebarPosition":40,"frontMatter":{"sidebar_position":40},"sidebar":"defaultSidebar","previous":{"title":"Getting started","permalink":"/docs/get-started"},"next":{"title":"Configuration Cheat Sheet","permalink":"/docs/configuration-cheatsheet"}}'),o=i("85893"),t=i("50065");let s={sidebar_position:40},a="Configuration",l={},c=[{value:"Framework-agnostic Configuration",id:"framework-agnostic-configuration",level:2},{value:"GraphQL Config",id:"graphql-config",level:3},{value:"Docusaurus Integration",id:"docusaurus-integration",level:2},{value:"Plugin Configuration",id:"plugin-configuration",level:3},{value:"Site Settings",id:"site-settings",level:3},{value:"Configuration Lifecycle",id:"configuration-lifecycle",level:2}];function d(e){let n={a:"a",admonition:"admonition",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,t.a)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(n.header,{children:(0,o.jsx)(n.h1,{id:"configuration",children:"Configuration"})}),"\n",(0,o.jsx)(n.p,{children:"GraphQL-Markdown is compatible with most MDX frameworks, with built-in support for Docusaurus and other static site generators. This guide explains the different configuration methods and their priorities."}),"\n",(0,o.jsx)(n.h2,{id:"framework-agnostic-configuration",children:"Framework-agnostic Configuration"}),"\n",(0,o.jsx)(n.h3,{id:"graphql-config",children:"GraphQL Config"}),"\n",(0,o.jsx)(n.admonition,{type:"tip",children:(0,o.jsx)(n.p,{children:"GraphQL Config is the recommended way to configure GraphQL-Markdown across all frameworks."})}),"\n",(0,o.jsxs)(n.p,{children:["You can use a ",(0,o.jsx)(n.a,{href:"https://the-guild.dev/graphql/config/docs/user/usage",children:"GraphQL Config"})," file (multiple formats supported) to configure GraphQL-Markdown:"]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-yaml",metastring:'title=".graphqlrc"',children:'schema: "https://graphql.anilist.co/"\nextensions:\n  graphql-markdown:\n    linkRoot: "/examples/default"\n    baseURL: "."\n    homepage: "data/anilist.md"\n    loaders:\n      UrlLoader:\n        module: "@graphql-tools/url-loader"\n        options:\n          method: "POST"\n    printTypeOptions:\n      deprecated: "group"\n'})}),"\n",(0,o.jsx)(n.h2,{id:"docusaurus-integration",children:"Docusaurus Integration"}),"\n",(0,o.jsx)(n.h3,{id:"plugin-configuration",children:"Plugin Configuration"}),"\n",(0,o.jsxs)(n.p,{children:["You can define plugin settings directly in your Docusaurus configuration file ",(0,o.jsx)(n.code,{children:"docusaurus.config.js"}),":"]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-js",metastring:'title="docusaurus.config.js"',children:'module.exports = {\n  // ...\n  plugins: [\n    [\n      "@graphql-markdown/docusaurus",\n      /** @type {import(\'@graphql-markdown/types\').ConfigOptions} */\n      {\n        schema: "./schema/swapi.graphql",\n        rootPath: "./docs", // docs will be generated under \'./docs/swapi\' (rootPath/baseURL)\n        baseURL: "swapi",\n        homepage: "./docs/swapi.md",\n        loaders: {\n          GraphQLFileLoader: "@graphql-tools/graphql-file-loader", // local file schema\n        },\n        // Optional advanced settings\n        prettify: true,\n        customDirective: true,\n      },\n    ],\n  ],\n};\n'})}),"\n",(0,o.jsxs)(n.p,{children:["All settings are described in the page ",(0,o.jsx)(n.strong,{children:(0,o.jsx)(n.a,{href:"/docs/settings",children:"settings"})}),"."]}),"\n",(0,o.jsx)(n.admonition,{type:"tip",children:(0,o.jsxs)(n.p,{children:["If you want to use several GraphQL schemas, read our guide for ",(0,o.jsx)(n.strong,{children:(0,o.jsx)(n.a,{href:"/docs/advanced/additional-schema",children:"additional schemas"})}),"."]})}),"\n",(0,o.jsx)(n.h3,{id:"site-settings",children:"Site Settings"}),"\n",(0,o.jsxs)(n.p,{children:["You will also need to add a link to your documentation on your site. One way to do it is to add it to your site's ",(0,o.jsx)(n.code,{children:"navbar"})," in ",(0,o.jsx)(n.code,{children:"docusaurus.config.js"}),":"]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-js",metastring:'title="docusaurus.config.js"',children:'module.exports = {\n  // ...\n  navbar: {\n    items: [\n      {\n        to: "/swapi/homepage", // adjust the location depending on your baseURL (see configuration)\n        label: "SWAPI Schema", // change the label with yours\n        position: "left",\n      },\n    ],\n  },\n};\n'})}),"\n",(0,o.jsxs)(n.p,{children:["For more details about the ",(0,o.jsx)(n.code,{children:"navbar"}),", please refer to Docusaurus ",(0,o.jsx)(n.a,{href:"https://docusaurus.io/docs/api/themes/configuration#navbar",children:"documentation"}),"."]}),"\n",(0,o.jsx)(n.h2,{id:"configuration-lifecycle",children:"Configuration Lifecycle"}),"\n",(0,o.jsx)(n.p,{children:"GraphQL-Markdown processes configuration sources in the following priority order (later sources override earlier ones):"}),"\n",(0,o.jsxs)(n.ol,{children:["\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"Default configuration"}),": Built-in default settings"]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"GraphQL Config file"})," (",(0,o.jsx)(n.code,{children:".graphqlrc"}),"): Framework-agnostic project settings"]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"Framework-specific configuration"}),": (e.g., Docusaurus plugin settings)"]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"CLI flags"}),": Command-line arguments override all other settings"]}),"\n"]}),"\n",(0,o.jsx)(n.admonition,{type:"tip",children:(0,o.jsx)(n.p,{children:"For any framework, you can use CLI flags to temporarily override settings without modifying your configuration files."})}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.strong,{children:"Current limitations:"})}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsx)(n.li,{children:"Single schema only, no schema stitching"}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.code,{children:"include"}),", ",(0,o.jsx)(n.code,{children:"exclude"}),", ",(0,o.jsx)(n.code,{children:"documents"})," and glob pattern are not supported"]}),"\n"]})]})}function u(e={}){let{wrapper:n}={...(0,t.a)(),...e.components};return n?(0,o.jsx)(n,{...e,children:(0,o.jsx)(d,{...e})}):d(e)}},50065:function(e,n,i){i.d(n,{Z:function(){return a},a:function(){return s}});var r=i(67294);let o={},t=r.createContext(o);function s(e){let n=r.useContext(t);return r.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:s(e.components),r.createElement(t.Provider,{value:n},e.children)}}}]);