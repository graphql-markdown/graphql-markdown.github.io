"use strict";(self.webpackChunk_graphql_markdown_website=self.webpackChunk_graphql_markdown_website||[]).push([["3119"],{25014:function(e,t,o){o.r(t),o.d(t,{default:()=>c,frontMatter:()=>a,metadata:()=>n,assets:()=>d,toc:()=>p,contentTitle:()=>i});var n=JSON.parse('{"id":"advanced/custom-root-types","title":"Custom root types","description":"For custom operation root types (queries not of type Query, or root type name used for other purpose), use the loader option RootTypes:","source":"@site/docs/advanced/custom-root-types.md","sourceDirName":"advanced","slug":"/advanced/custom-root-types","permalink":"/docs/advanced/custom-root-types","draft":false,"unlisted":false,"editUrl":"https://github.com/graphql-markdown/graphql-markdown/tree/main/docs/advanced/custom-root-types.md","tags":[],"version":"current","frontMatter":{"pagination_prev":null,"pagination_next":null},"sidebar":"defaultSidebar"}'),r=o("85893"),s=o("50065");let a={pagination_prev:null,pagination_next:null},i="Custom root types",d={},p=[];function u(e){let t={a:"a",code:"code",h1:"h1",header:"header",li:"li",p:"p",pre:"pre",ul:"ul",...(0,s.a)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(t.header,{children:(0,r.jsx)(t.h1,{id:"custom-root-types",children:"Custom root types"})}),"\n",(0,r.jsxs)(t.p,{children:["For custom operation root types (queries not of type ",(0,r.jsx)(t.code,{children:"Query"}),", or root type name used for other purpose), use the loader option ",(0,r.jsx)(t.code,{children:"RootTypes"}),":"]}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-ts",children:"type RootTypes = { query?: string; mutation?: string; subscription?: string };\n"})}),"\n",(0,r.jsxs)(t.ul,{children:["\n",(0,r.jsx)(t.li,{children:"use a custom type name to override the standard type\nuse an empty string to disable the GraphQL standard type"}),"\n",(0,r.jsx)(t.li,{children:"unset root types will use the GraphQL standard type"}),"\n"]}),"\n",(0,r.jsxs)(t.p,{children:["Add the option ",(0,r.jsx)(t.code,{children:"rootTypes"})," to the loader options under ",(0,r.jsx)(t.code,{children:"@graphql-markdown/docusaurus"})," configuration (see also ",(0,r.jsx)(t.a,{href:"/docs/advanced/schema-loading",children:"schema loading"}),"):"]}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-js",metastring:'title="docusaurus.config.js"',children:'plugins: [\n  [\n    "@graphql-markdown/docusaurus",\n    /** @type {import(\'@graphql-markdown/types\').ConfigOptions} */\n    {\n      // ... other options\n      loaders: {\n        GraphQLFileLoader: {\n          module: "@graphql-tools/graphql-file-loader",\n          options: {\n            // highlight-start\n            rootTypes: {\n              query: "Root", // use custom root type Root for queries, instead of Query\n              subscription: "" // disable Subscription type\n            },\n            // highlight-end\n          },\n        },\n      },\n    },\n  ],\n],\n'})})]})}function c(e={}){let{wrapper:t}={...(0,s.a)(),...e.components};return t?(0,r.jsx)(t,{...e,children:(0,r.jsx)(u,{...e})}):u(e)}},50065:function(e,t,o){o.d(t,{Z:function(){return i},a:function(){return a}});var n=o(67294);let r={},s=n.createContext(r);function a(e){let t=n.useContext(s);return n.useMemo(function(){return"function"==typeof e?e(t):{...t,...e}},[t,e])}function i(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:a(e.components),n.createElement(s.Provider,{value:t},e.children)}}}]);