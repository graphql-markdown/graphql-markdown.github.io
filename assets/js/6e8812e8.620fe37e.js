"use strict";(self.webpackChunk_graphql_markdown_website=self.webpackChunk_graphql_markdown_website||[]).push([["4776"],{54335:function(e,n,r){r.r(n),r.d(n,{default:()=>h,frontMatter:()=>c,metadata:()=>i,assets:()=>a,toc:()=>o,contentTitle:()=>d});var i=JSON.parse('{"id":"advanced/custom-directive","title":"Custom schema directives handling","description":"For directives applied to the schema, you can select which ones to be rendered for the types or in the locations they are declared. Information about the custom directives includes a custom description.","source":"@site/docs/advanced/custom-directive.md","sourceDirName":"advanced","slug":"/advanced/custom-directive","permalink":"/docs/advanced/custom-directive","draft":false,"unlisted":false,"editUrl":"https://github.com/graphql-markdown/graphql-markdown/tree/main/docs/advanced/custom-directive.md","tags":[],"version":"current","frontMatter":{"id":"custom-directive","pagination_prev":null,"pagination_next":null},"sidebar":"defaultSidebar"}'),t=r("85893"),s=r("50065");let c={id:"custom-directive",pagination_prev:null,pagination_next:null},d="Custom schema directives handling",a={},o=[{value:"Usage",id:"usage",level:2},{value:"<code>descriptor</code>",id:"descriptor",level:3},{value:"<code>tag</code>",id:"tag",level:3},{value:"Wildcard",id:"wildcard",level:3},{value:"Helpers",id:"helpers",level:2},{value:"<code>@graphql-markdown/helpers</code>",id:"graphql-markdownhelpers",level:3},{value:"<code>@graphql-markdown/graphql</code>",id:"graphql-markdowngraphql",level:3}];function l(e){let n={a:"a",admonition:"admonition",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,s.a)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.header,{children:(0,t.jsx)(n.h1,{id:"custom-schema-directives-handling",children:"Custom schema directives handling"})}),"\n",(0,t.jsx)(n.p,{children:"For directives applied to the schema, you can select which ones to be rendered for the types or in the locations they are declared. Information about the custom directives includes a custom description."}),"\n",(0,t.jsxs)(n.p,{children:["For example, we have one query called ",(0,t.jsx)(n.code,{children:"searchRole"}),", and we want to limit access to ",(0,t.jsx)(n.code,{children:"ADMIN"})," user roles only."]}),"\n",(0,t.jsxs)(n.p,{children:["We can accomplish this by adding a directive called ",(0,t.jsx)(n.code,{children:"auth"})," with an argument ",(0,t.jsx)(n.code,{children:"requires"})," to the query."]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-graphql",children:"directive @auth(requires: Roles = ADMIN) on OBJECT | FIELD_DEFINITION\n\nenum Roles {\n  ADMIN\n  USER\n}\n\ntype Query {\n  searchRole(roles: [Roles!]! = [ADMIN]): Int! @auth\n}\n"})}),"\n",(0,t.jsx)(n.h2,{id:"usage",children:"Usage"}),"\n",(0,t.jsxs)(n.p,{children:["Add the option ",(0,t.jsx)(n.a,{href:"/docs/settings#customdirective",children:(0,t.jsx)(n.code,{children:"customDirective"})})," to the ",(0,t.jsx)(n.code,{children:"@graphql-markdown/docusaurus"})," configuration."]}),"\n",(0,t.jsxs)(n.p,{children:["The ",(0,t.jsx)(n.code,{children:"descriptor"})," and ",(0,t.jsx)(n.code,{children:"tag"})," functions receive 2 arguments:"]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"directive"})," of type ",(0,t.jsx)(n.a,{href:"https://github.com/graphql/graphql-js/blob/main/src/type/directives.ts",children:(0,t.jsx)(n.code,{children:"GraphQLDirective"})})]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"node"})," of type ",(0,t.jsx)(n.a,{href:"https://github.com/graphql/graphql-js/blob/main/src/type/definition.ts",children:(0,t.jsx)(n.code,{children:"GraphQLNamedType"})})," or ",(0,t.jsx)(n.a,{href:"https://github.com/graphql/graphql-js/blob/main/src/language/ast.ts",children:(0,t.jsx)(n.code,{children:"ASTNode"})})]}),"\n"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-ts",children:"type DirectiveName = string & { _opaque: typeof DirectiveName };\n\ntype CustomDirective = {\n  [name: DirectiveName]: {\n    descriptor?: (directive?: GraphQLDirective, node?: unknown): string;\n    tag?: (directive?: GraphQLDirective, node?: unknown): Badge;\n  };\n};\n\ntype Badge = {\n  text: string | TypeLocale;\n  classname: string;\n};\n"})}),"\n",(0,t.jsx)(n.h3,{id:"descriptor",children:(0,t.jsx)(n.code,{children:"descriptor"})}),"\n",(0,t.jsxs)(n.p,{children:["The ",(0,t.jsx)(n.code,{children:"descriptor"})," allows rendering the custom directive's description applicable to entities."]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-js",metastring:'title="docusaurus.config.js"',children:'plugins: [\n  [\n    "@graphql-markdown/docusaurus",\n    /** @type {import(\'@graphql-markdown/types\').ConfigOptions} */\n    {\n      // ... other options\n      customDirective: {\n        auth: {\n          // highlight-start\n          descriptor: (directive, node) =>\n            directiveDescriptor(\n              directive,\n              node,\n              "This requires the current user to be in `${requires}` role.",\n            ),\n          // highlight-end\n        }\n        // ... other custom directive options\n      },\n    },\n  ],\n],\n'})}),"\n",(0,t.jsx)(n.h3,{id:"tag",children:(0,t.jsx)(n.code,{children:"tag"})}),"\n",(0,t.jsxs)(n.p,{children:["The ",(0,t.jsx)(n.code,{children:"tag"})," allows rendering custom badges (tags) based on the custom directive applicable to entities."]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-js",metastring:'title="docusaurus.config.js"',children:'plugins: [\n  [\n    "@graphql-markdown/docusaurus",\n    /** @type {import(\'@graphql-markdown/types\').ConfigOptions} */\n    {\n      // ... other options\n      customDirective: {\n        beta: {\n          // highlight-next-line\n          tag: (directive, node) => ({ text: directive.name, classname: "badge--info" }),\n        }\n        // ... other custom directive options\n      },\n    },\n  ],\n],\n'})}),"\n",(0,t.jsx)(n.h3,{id:"wildcard",children:"Wildcard"}),"\n",(0,t.jsxs)(n.p,{children:["You can use ",(0,t.jsxs)(n.strong,{children:[(0,t.jsx)(n.code,{children:'"*"'})," as a wildcard"]})," for the directive name. This will allow all directives not declared with their name under ",(0,t.jsx)(n.code,{children:"customDirective"})," to be handled by the wildcard ",(0,t.jsx)(n.code,{children:"descriptor"})," and/or ",(0,t.jsx)(n.code,{children:"tag"}),"."]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-js",metastring:'title="docusaurus.config.js"',children:'const { directiveDescriptor, tagDescriptor } = require("@graphql-markdown/helpers");\n\n//...//\n\nplugins: [\n  [\n    "@graphql-markdown/docusaurus",\n    /** @type {import(\'@graphql-markdown/types\').ConfigOptions} */\n    {\n      // ... other options\n      customDirective: {\n        // highlight-start\n        "*": {\n          descriptor: directiveDescriptor,\n          tag: tagDescriptor,\n        },\n        // highlight-end\n        // ... optionally specific custom directive options\n      },\n    },\n  ],\n],\n'})}),"\n",(0,t.jsx)(n.h2,{id:"helpers",children:"Helpers"}),"\n",(0,t.jsxs)(n.p,{children:["The packages ",(0,t.jsx)(n.code,{children:"@graphql-markdown/helpers"})," and ",(0,t.jsx)(n.code,{children:"@graphql-markdown/graphql"})," provide a few helper functions to quickly start."]}),"\n",(0,t.jsxs)(n.admonition,{type:"info",children:[(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.code,{children:"@graphql-markdown/helpers"})," is an optional peer dependency, and it needs to be installed before using it."]}),(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-shell",metastring:'title="shell"',children:"npm i @graphql-markdown/helpers\n"})})]}),"\n",(0,t.jsx)(n.h3,{id:"graphql-markdownhelpers",children:(0,t.jsx)(n.code,{children:"@graphql-markdown/helpers"})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.a,{href:"/api/helpers/directives/descriptor",children:(0,t.jsx)(n.code,{children:"directiveDescriptor"})})}),"\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.a,{href:"/api/helpers/directives/tag",children:(0,t.jsx)(n.code,{children:"tagDescriptor"})})}),"\n"]}),"\n",(0,t.jsx)(n.h3,{id:"graphql-markdowngraphql",children:(0,t.jsx)(n.code,{children:"@graphql-markdown/graphql"})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.a,{href:"/api/graphql/introspection#gettypedirectivevalues",children:(0,t.jsx)(n.code,{children:"getTypeDirectiveValues"})})}),"\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.a,{href:"/api/graphql/introspection#gettypedirectiveargvalue",children:(0,t.jsx)(n.code,{children:"getTypeDirectiveArgValue"})})}),"\n"]})]})}function h(e={}){let{wrapper:n}={...(0,s.a)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(l,{...e})}):l(e)}},50065:function(e,n,r){r.d(n,{Z:function(){return d},a:function(){return c}});var i=r(67294);let t={},s=i.createContext(t);function c(e){let n=i.useContext(s);return i.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function d(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:c(e.components),i.createElement(s.Provider,{value:n},e.children)}}}]);