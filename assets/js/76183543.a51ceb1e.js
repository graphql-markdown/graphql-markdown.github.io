"use strict";(self.webpackChunk_graphql_markdown_website=self.webpackChunk_graphql_markdown_website||[]).push([["9045"],{37070:function(e,n,i){i.r(n),i.d(n,{default:()=>h,frontMatter:()=>o,metadata:()=>r,assets:()=>l,toc:()=>c,contentTitle:()=>a});var r=JSON.parse('{"id":"how-it-works","title":"How It Works","description":"This page explains how GraphQL-Markdown transforms your GraphQL schema into comprehensive documentation.","source":"@site/docs/how-it-works.md","sourceDirName":".","slug":"/how-it-works","permalink":"/docs/how-it-works","draft":false,"unlisted":false,"editUrl":"https://github.com/graphql-markdown/graphql-markdown/tree/main/docs/how-it-works.md","tags":[],"version":"current","sidebarPosition":80,"frontMatter":{"sidebar_position":80},"sidebar":"defaultSidebar","previous":{"title":"Schema loading","permalink":"/docs/advanced/schema-loading"},"next":{"title":"Troubleshooting","permalink":"/docs/troubleshooting"}}'),t=i("85893"),s=i("50065");let o={sidebar_position:80},a="How It Works",l={},c=[{value:"Documentation Generation Process",id:"documentation-generation-process",level:2},{value:"The Process Step-by-Step",id:"the-process-step-by-step",level:2},{value:"1. GraphQL Schema Input",id:"1-graphql-schema-input",level:3},{value:"2. Schema Loading",id:"2-schema-loading",level:3},{value:"3. Schema Parsing",id:"3-schema-parsing",level:3},{value:"4. Documentation Generation",id:"4-documentation-generation",level:3},{value:"5. Markdown Output",id:"5-markdown-output",level:3},{value:"Configuration Options",id:"configuration-options",level:2},{value:"Example: Input to Output",id:"example-input-to-output",level:2},{value:"Customization",id:"customization",level:2}];function d(e){let n={code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",mermaid:"mermaid",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,s.a)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.header,{children:(0,t.jsx)(n.h1,{id:"how-it-works",children:"How It Works"})}),"\n",(0,t.jsx)(n.p,{children:"This page explains how GraphQL-Markdown transforms your GraphQL schema into comprehensive documentation."}),"\n",(0,t.jsx)(n.h2,{id:"documentation-generation-process",children:"Documentation Generation Process"}),"\n",(0,t.jsx)(n.mermaid,{value:"flowchart TD\n    A[GraphQL Schema] --\x3e B[Schema Loader]\n    B --\x3e C[Schema Parser]\n    C --\x3e D[Documentation Generator]\n    D --\x3e E[Markdown Output]\n\n    style A fill:#f9f,stroke:#333,stroke-width:2px\n    style E fill:#bbf,stroke:#333,stroke-width:2px"}),"\n",(0,t.jsx)(n.h2,{id:"the-process-step-by-step",children:"The Process Step-by-Step"}),"\n",(0,t.jsx)(n.h3,{id:"1-graphql-schema-input",children:"1. GraphQL Schema Input"}),"\n",(0,t.jsx)(n.p,{children:"The process begins with your GraphQL schema - this can be:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["A local ",(0,t.jsx)(n.code,{children:".graphql"})," or ",(0,t.jsx)(n.code,{children:".gql"})," file"]}),"\n",(0,t.jsx)(n.li,{children:"A remote GraphQL endpoint URL"}),"\n",(0,t.jsx)(n.li,{children:"An introspection result JSON file"}),"\n",(0,t.jsx)(n.li,{children:"A programmatically provided GraphQL schema object"}),"\n"]}),"\n",(0,t.jsx)(n.h3,{id:"2-schema-loading",children:"2. Schema Loading"}),"\n",(0,t.jsx)(n.p,{children:"GraphQL-Markdown loads the schema using:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"For local files: Direct file reading"}),"\n",(0,t.jsx)(n.li,{children:"For remote endpoints: Introspection query"}),"\n",(0,t.jsx)(n.li,{children:"For provided schemas: Direct schema parsing"}),"\n"]}),"\n",(0,t.jsx)(n.h3,{id:"3-schema-parsing",children:"3. Schema Parsing"}),"\n",(0,t.jsx)(n.p,{children:"Once loaded, GraphQL-Markdown analyzes the schema to extract:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Types (Object, Input, Interface, Union, etc.)"}),"\n",(0,t.jsx)(n.li,{children:"Queries, mutations, and subscriptions"}),"\n",(0,t.jsx)(n.li,{children:"Fields, arguments, and return types"}),"\n",(0,t.jsx)(n.li,{children:"Descriptions and deprecation notices"}),"\n",(0,t.jsx)(n.li,{children:"Custom directives and their usage"}),"\n"]}),"\n",(0,t.jsx)(n.h3,{id:"4-documentation-generation",children:"4. Documentation Generation"}),"\n",(0,t.jsx)(n.p,{children:"The parsed schema is transformed into documentation with:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Hierarchical organization by type categories"}),"\n",(0,t.jsx)(n.li,{children:"Cross-linking between related types"}),"\n",(0,t.jsx)(n.li,{children:"Formatting of descriptions (Markdown support)"}),"\n",(0,t.jsx)(n.li,{children:"Special handling for deprecated items"}),"\n",(0,t.jsx)(n.li,{children:"Custom rendering hooks (if configured)"}),"\n"]}),"\n",(0,t.jsx)(n.h3,{id:"5-markdown-output",children:"5. Markdown Output"}),"\n",(0,t.jsx)(n.p,{children:"Finally, GraphQL-Markdown outputs:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Individual Markdown files for each type category"}),"\n",(0,t.jsx)(n.li,{children:"Index files for easy navigation"}),"\n",(0,t.jsx)(n.li,{children:"Table of contents and sidebar configuration"}),"\n",(0,t.jsx)(n.li,{children:"Links and references between types"}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"configuration-options",children:"Configuration Options"}),"\n",(0,t.jsxs)(n.p,{children:["GraphQL-Markdown supports extensive configuration through the ",(0,t.jsx)(n.code,{children:"graphql-markdown.config.js"})," file:"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-javascript",children:'module.exports = {\n  schema: "./schema.graphql", // Schema source\n  rootPath: "./docs", // Output directory\n  baseURL: "graphql", // Base URL for docs\n  homepage: "graphql-schema.md", // Home page\n  loaders: {\n    // Custom loaders\n    // Loader configuration\n  },\n  docOptions: {\n    // Documentation options\n    pagination: true, // Enable pagination\n    toc: true, // Table of contents\n    index: true, // Generate index\n    // ...more options\n  },\n};\n'})}),"\n",(0,t.jsx)(n.h2,{id:"example-input-to-output",children:"Example: Input to Output"}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Input:"})," A GraphQL schema definition"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-graphql",children:'type User {\n  """\n  User\'s unique identifier\n  """\n  id: ID!\n  """\n  User\'s full name\n  """\n  name: String!\n  """\n  User\'s email address\n  """\n  email: String!\n  """\n  List of posts authored by this user\n  """\n  posts: [Post!]\n}\n\ntype Post {\n  id: ID!\n  title: String!\n  content: String!\n  author: User!\n}\n\ntype Query {\n  getUser(id: ID!): User\n  getPosts: [Post!]!\n}\n'})}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Output:"})," Generated documentation files including:"]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["Schema overview (",(0,t.jsx)(n.code,{children:"index.md"}),")"]}),"\n",(0,t.jsxs)(n.li,{children:["Object types (",(0,t.jsx)(n.code,{children:"objects.md"}),")"]}),"\n",(0,t.jsxs)(n.li,{children:["Queries (",(0,t.jsx)(n.code,{children:"queries.md"}),")"]}),"\n",(0,t.jsx)(n.li,{children:"Cross-linked type documentation"}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"customization",children:"Customization"}),"\n",(0,t.jsx)(n.p,{children:"GraphQL-Markdown allows for customization through:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Custom templates"}),"\n",(0,t.jsx)(n.li,{children:"Rendering hooks"}),"\n",(0,t.jsx)(n.li,{children:"Plugin architecture"}),"\n",(0,t.jsx)(n.li,{children:"Integration with documentation frameworks (Docusaurus, VuePress, etc.)"}),"\n",(0,t.jsx)(n.li,{children:"Custom loaders for specialized schema sources"}),"\n"]}),"\n",(0,t.jsx)(n.p,{children:"By understanding this process, you can optimize your documentation setup and make the most of GraphQL-Markdown's capabilities."})]})}function h(e={}){let{wrapper:n}={...(0,s.a)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(d,{...e})}):d(e)}},50065:function(e,n,i){i.d(n,{Z:function(){return a},a:function(){return o}});var r=i(67294);let t={},s=r.createContext(t);function o(e){let n=r.useContext(s);return r.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:o(e.components),r.createElement(s.Provider,{value:n},e.children)}}}]);