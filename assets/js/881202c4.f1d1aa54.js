"use strict";(self.webpackChunk_graphql_markdown_website=self.webpackChunk_graphql_markdown_website||[]).push([[6727],{4137:(e,a,n)=>{n.d(a,{Zo:()=>p,kt:()=>g});var r=n(7294);function t(e,a,n){return a in e?Object.defineProperty(e,a,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[a]=n,e}function o(e,a){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);a&&(r=r.filter((function(a){return Object.getOwnPropertyDescriptor(e,a).enumerable}))),n.push.apply(n,r)}return n}function l(e){for(var a=1;a<arguments.length;a++){var n=null!=arguments[a]?arguments[a]:{};a%2?o(Object(n),!0).forEach((function(a){t(e,a,n[a])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(a){Object.defineProperty(e,a,Object.getOwnPropertyDescriptor(n,a))}))}return e}function s(e,a){if(null==e)return{};var n,r,t=function(e,a){if(null==e)return{};var n,r,t={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],a.indexOf(n)>=0||(t[n]=e[n]);return t}(e,a);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],a.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(t[n]=e[n])}return t}var c=r.createContext({}),i=function(e){var a=r.useContext(c),n=a;return e&&(n="function"==typeof e?e(a):l(l({},a),e)),n},p=function(e){var a=i(e.components);return r.createElement(c.Provider,{value:a},e.children)},u="mdxType",d={inlineCode:"code",wrapper:function(e){var a=e.children;return r.createElement(r.Fragment,{},a)}},m=r.forwardRef((function(e,a){var n=e.components,t=e.mdxType,o=e.originalType,c=e.parentName,p=s(e,["components","mdxType","originalType","parentName"]),u=i(n),m=t,g=u["".concat(c,".").concat(m)]||u[m]||d[m]||o;return n?r.createElement(g,l(l({ref:a},p),{},{components:n})):r.createElement(g,l({ref:a},p))}));function g(e,a){var n=arguments,t=a&&a.mdxType;if("string"==typeof e||t){var o=n.length,l=new Array(o);l[0]=m;var s={};for(var c in a)hasOwnProperty.call(a,c)&&(s[c]=a[c]);s.originalType=e,s[u]="string"==typeof e?e:t,l[1]=s;for(var i=2;i<o;i++)l[i]=n[i];return r.createElement.apply(null,l)}return r.createElement.apply(null,n)}m.displayName="MDXCreateElement"},6910:(e,a,n)=>{n.r(a),n.d(a,{assets:()=>c,contentTitle:()=>l,default:()=>u,frontMatter:()=>o,metadata:()=>s,toc:()=>i});var r=n(7462),t=(n(7294),n(4137));const o={pagination_prev:null,pagination_next:null},l="Schema loading",s={unversionedId:"advanced/schema-loading",id:"advanced/schema-loading",title:"Schema loading",description:"GraphQL-Markdown use external loaders for loading GraphQL schemas (see full list).",source:"@site/docs/advanced/schema-loading.md",sourceDirName:"advanced",slug:"/advanced/schema-loading",permalink:"/docs/advanced/schema-loading",draft:!1,editUrl:"https://github.com/graphql-markdown/graphql-markdown/tree/main/docs/advanced/schema-loading.md",tags:[],version:"current",frontMatter:{pagination_prev:null,pagination_next:null},sidebar:"defaultSidebar"},c={},i=[{value:"Local schema (file)",id:"local-schema-file",level:2},{value:"Remote schema (url)",id:"remote-schema-url",level:2}],p={toc:i};function u(e){let{components:a,...n}=e;return(0,t.kt)("wrapper",(0,r.Z)({},p,n,{components:a,mdxType:"MDXLayout"}),(0,t.kt)("h1",{id:"schema-loading"},"Schema loading"),(0,t.kt)("p",null,"GraphQL-Markdown use external loaders for loading GraphQL schemas (see ",(0,t.kt)("a",{parentName:"p",href:"https://github.com/ardatan/graphql-tools/tree/master/packages/loaders"},"full list"),")."),(0,t.kt)("p",null,"You can declare as many loaders as you need using the structure:"),(0,t.kt)("pre",null,(0,t.kt)("code",{parentName:"pre",className:"language-ts"},"type RootTypes = { query?: string; mutation?: string; subscription?: string };\n\ntype PackageOptionsConfig = BaseLoaderOptions & RootTypes;\n\ntype PackageConfig = {\n  module: PackageName;\n  options?: PackageOptionsConfig;\n};\n\ntype PackageName = string & { _opaque: typeof PackageName };\n\ntype ClassName = string & { _opaque: typeof ClassName };\n\ntype LoaderOption = {\n  [name: ClassName]: PackageName | PackageConfig;\n};\n")),(0,t.kt)("h2",{id:"local-schema-file"},"Local schema (file)"),(0,t.kt)("p",null,"Use ",(0,t.kt)("inlineCode",{parentName:"p"},"@graphql-tools/graphql-file-loader")," if you want to load a local schema:"),(0,t.kt)("pre",null,(0,t.kt)("code",{parentName:"pre",className:"language-shell"},"npm install @graphql-tools/graphql-file-loader\n")),(0,t.kt)("p",null,"Once done, you can declare the loader into ",(0,t.kt)("inlineCode",{parentName:"p"},"@graphql-markdown/docusaurus")," configuration:"),(0,t.kt)("pre",null,(0,t.kt)("code",{parentName:"pre",className:"language-js"},'plugins: [\n  [\n    "@graphql-markdown/docusaurus",\n    {\n      // ... other options\n      loaders: {\n        GraphQLFileLoader: "@graphql-tools/graphql-file-loader"\n      }\n    },\n  ],\n],\n')),(0,t.kt)("h2",{id:"remote-schema-url"},"Remote schema (url)"),(0,t.kt)("p",null,"Use ",(0,t.kt)("inlineCode",{parentName:"p"},"@graphql-tools/url-loader"),", if you want to load a schema from a URL:"),(0,t.kt)("pre",null,(0,t.kt)("code",{parentName:"pre",className:"language-shell"},"npm install @graphql-tools/url-loader\n")),(0,t.kt)("p",null,"Once done, you can declare the loader into ",(0,t.kt)("inlineCode",{parentName:"p"},"docusaurus2-graphql-doc-generator")," configuration:"),(0,t.kt)("pre",null,(0,t.kt)("code",{parentName:"pre",className:"language-js"},'plugins: [\n  [\n    "@graphql-markdown/docusaurus",\n    {\n      // ... other options\n      loaders: {\n        UrlLoader: "@graphql-tools/url-loader"\n      }\n    },\n  ],\n],\n')))}u.isMDXComponent=!0}}]);