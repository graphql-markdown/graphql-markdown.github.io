"use strict";(self.webpackChunk_graphql_markdown_website=self.webpackChunk_graphql_markdown_website||[]).push([[1178],{39579:(e,t,s)=>{s.r(t),s.d(t,{Badge:()=>x,Bullet:()=>o,Details:()=>y,SpecifiedBy:()=>h,assets:()=>r,contentTitle:()=>c,default:()=>j,frontMatter:()=>l,metadata:()=>n,toc:()=>g});var i=s(74848),a=s(28453),d=s(96540);const l={pagination_next:null,pagination_prev:null,id:"list-activity",title:"ListActivity"},c=void 0,n={id:"types/objects/list-activity",title:"ListActivity",description:"User list activity (anime & manga updates)",source:"@site/examples/default/types/objects/list-activity.mdx",sourceDirName:"types/objects",slug:"/types/objects/list-activity",permalink:"/examples/default/types/objects/list-activity",draft:!1,unlisted:!1,tags:[],version:"current",frontMatter:{pagination_next:null,pagination_prev:null,id:"list-activity",title:"ListActivity"},sidebar:"schemaSidebar"},r={},o=()=>{const e={span:"span",...(0,a.R)()};return(0,i.jsx)(i.Fragment,{children:(0,i.jsx)(e.span,{style:{fontWeight:"normal",fontSize:".5em",color:"var(--ifm-color-secondary-darkest)"},children:"\xa0\u25cf\xa0"})})},h=e=>{const t={a:"a",...(0,a.R)()};return(0,i.jsxs)(i.Fragment,{children:["Specification",(0,i.jsx)(t.a,{className:"link",style:{fontSize:"1.5em",paddingLeft:"4px"},target:"\\_blank",href:e.url,title:"Specified by "+e.url,children:"\u2398"})]})},x=e=>{const t={span:"span",...(0,a.R)()};return(0,i.jsx)(i.Fragment,{children:(0,i.jsx)(t.span,{className:e.class,children:e.text})})},y=({dataOpen:e,dataClose:t,children:s,startOpen:l=!1})=>{const c={details:"details",summary:"summary",...(0,a.R)()},[n,r]=(0,d.useState)(l);return(0,i.jsxs)(c.details,{...n?{open:!0}:{},className:"details",style:{border:"none",boxShadow:"none",background:"var(--ifm-background-color)"},children:[(0,i.jsx)(c.summary,{onClick:e=>{e.preventDefault(),r((e=>!e))},style:{listStyle:"none"},children:n?e:t}),n&&s]})},g=[{value:"Fields",id:"fields",level:3},{value:'<code>ListActivity.<b>id</b></code><Bullet></Bullet><code>Int!</code> <Badge class="badge badge--secondary"></Badge> <Badge class="badge badge--secondary"></Badge>',id:"listactivityidint--",level:4},{value:'<code>ListActivity.<b>userId</b></code><Bullet></Bullet><code>Int</code> <Badge class="badge badge--secondary"></Badge>',id:"listactivityuseridint-",level:4},{value:'<code>ListActivity.<b>type</b></code><Bullet></Bullet><code>ActivityType</code> <Badge class="badge badge--secondary"></Badge>',id:"listactivitytypeactivitytype-",level:4},{value:'<code>ListActivity.<b>replyCount</b></code><Bullet></Bullet><code>Int!</code> <Badge class="badge badge--secondary"></Badge> <Badge class="badge badge--secondary"></Badge>',id:"listactivityreplycountint--",level:4},{value:'<code>ListActivity.<b>status</b></code><Bullet></Bullet><code>String</code> <Badge class="badge badge--secondary"></Badge>',id:"listactivitystatusstring-",level:4},{value:'<code>ListActivity.<b>progress</b></code><Bullet></Bullet><code>String</code> <Badge class="badge badge--secondary"></Badge>',id:"listactivityprogressstring-",level:4},{value:'<code>ListActivity.<b>isLocked</b></code><Bullet></Bullet><code>Boolean</code> <Badge class="badge badge--secondary"></Badge>',id:"listactivityislockedboolean-",level:4},{value:'<code>ListActivity.<b>isSubscribed</b></code><Bullet></Bullet><code>Boolean</code> <Badge class="badge badge--secondary"></Badge>',id:"listactivityissubscribedboolean-",level:4},{value:'<code>ListActivity.<b>likeCount</b></code><Bullet></Bullet><code>Int!</code> <Badge class="badge badge--secondary"></Badge> <Badge class="badge badge--secondary"></Badge>',id:"listactivitylikecountint--",level:4},{value:'<code>ListActivity.<b>isLiked</b></code><Bullet></Bullet><code>Boolean</code> <Badge class="badge badge--secondary"></Badge>',id:"listactivityislikedboolean-",level:4},{value:'<code>ListActivity.<b>isPinned</b></code><Bullet></Bullet><code>Boolean</code> <Badge class="badge badge--secondary"></Badge>',id:"listactivityispinnedboolean-",level:4},{value:'<code>ListActivity.<b>siteUrl</b></code><Bullet></Bullet><code>String</code> <Badge class="badge badge--secondary"></Badge>',id:"listactivitysiteurlstring-",level:4},{value:'<code>ListActivity.<b>createdAt</b></code><Bullet></Bullet><code>Int!</code> <Badge class="badge badge--secondary"></Badge> <Badge class="badge badge--secondary"></Badge>',id:"listactivitycreatedatint--",level:4},{value:'<code>ListActivity.<b>user</b></code><Bullet></Bullet><code>User</code> <Badge class="badge badge--secondary"></Badge>',id:"listactivityuseruser-",level:4},{value:'<code>ListActivity.<b>media</b></code><Bullet></Bullet><code>Media</code> <Badge class="badge badge--secondary"></Badge>',id:"listactivitymediamedia-",level:4},{value:'<code>ListActivity.<b>replies</b></code><Bullet></Bullet><code>[ActivityReply]</code> <Badge class="badge badge--secondary"></Badge> <Badge class="badge badge--secondary"></Badge>',id:"listactivityrepliesactivityreply--",level:4},{value:'<code>ListActivity.<b>likes</b></code><Bullet></Bullet><code>[User]</code> <Badge class="badge badge--secondary"></Badge> <Badge class="badge badge--secondary"></Badge>',id:"listactivitylikesuser--",level:4},{value:"Returned By",id:"returned-by",level:3},{value:"Implemented By",id:"implemented-by",level:3}];function b(e){const t={a:"a",code:"code",h3:"h3",h4:"h4",p:"p",pre:"pre",...(0,a.R)(),...e.components},{Head:s}=t;return s||function(e,t){throw new Error("Expected "+(t?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}("Head",!0),(0,i.jsxs)(i.Fragment,{children:[(0,i.jsxs)(s,{children:[(0,i.jsx)("meta",{name:"googlebot",content:"noindex"}),(0,i.jsx)("meta",{charset:"utf-8"})]}),"\n","\n","\n","\n","\n","\n",(0,i.jsx)(t.p,{children:"User list activity (anime & manga updates)"}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-graphql",children:"type ListActivity {\n  id: Int!\n  userId: Int\n  type: ActivityType\n  replyCount: Int!\n  status: String\n  progress: String\n  isLocked: Boolean\n  isSubscribed: Boolean\n  likeCount: Int!\n  isLiked: Boolean\n  isPinned: Boolean\n  siteUrl: String\n  createdAt: Int!\n  user: User\n  media: Media\n  replies: [ActivityReply]\n  likes: [User]\n}\n"})}),"\n",(0,i.jsx)(t.h3,{id:"fields",children:"Fields"}),"\n",(0,i.jsxs)(t.h4,{id:"listactivityidint--",children:[(0,i.jsx)(t.a,{href:"#",children:(0,i.jsxs)("code",{style:{fontWeight:"normal"},children:["ListActivity.",(0,i.jsx)("b",{children:"id"})]})}),(0,i.jsx)(o,{}),(0,i.jsx)(t.a,{href:"/examples/default/types/scalars/int",children:(0,i.jsx)(t.code,{children:"Int!"})})," ",(0,i.jsx)(x,{class:"badge badge--secondary",text:"non-null"})," ",(0,i.jsx)(x,{class:"badge badge--secondary",text:"scalar"})]}),"\n",(0,i.jsx)(t.p,{children:"The id of the activity"}),"\n",(0,i.jsxs)(t.h4,{id:"listactivityuseridint-",children:[(0,i.jsx)(t.a,{href:"#",children:(0,i.jsxs)("code",{style:{fontWeight:"normal"},children:["ListActivity.",(0,i.jsx)("b",{children:"userId"})]})}),(0,i.jsx)(o,{}),(0,i.jsx)(t.a,{href:"/examples/default/types/scalars/int",children:(0,i.jsx)(t.code,{children:"Int"})})," ",(0,i.jsx)(x,{class:"badge badge--secondary",text:"scalar"})]}),"\n",(0,i.jsx)(t.p,{children:"The user id of the activity's creator"}),"\n",(0,i.jsxs)(t.h4,{id:"listactivitytypeactivitytype-",children:[(0,i.jsx)(t.a,{href:"#",children:(0,i.jsxs)("code",{style:{fontWeight:"normal"},children:["ListActivity.",(0,i.jsx)("b",{children:"type"})]})}),(0,i.jsx)(o,{}),(0,i.jsx)(t.a,{href:"/examples/default/types/enums/activity-type",children:(0,i.jsx)(t.code,{children:"ActivityType"})})," ",(0,i.jsx)(x,{class:"badge badge--secondary",text:"enum"})]}),"\n",(0,i.jsx)(t.p,{children:"The type of activity"}),"\n",(0,i.jsxs)(t.h4,{id:"listactivityreplycountint--",children:[(0,i.jsx)(t.a,{href:"#",children:(0,i.jsxs)("code",{style:{fontWeight:"normal"},children:["ListActivity.",(0,i.jsx)("b",{children:"replyCount"})]})}),(0,i.jsx)(o,{}),(0,i.jsx)(t.a,{href:"/examples/default/types/scalars/int",children:(0,i.jsx)(t.code,{children:"Int!"})})," ",(0,i.jsx)(x,{class:"badge badge--secondary",text:"non-null"})," ",(0,i.jsx)(x,{class:"badge badge--secondary",text:"scalar"})]}),"\n",(0,i.jsx)(t.p,{children:"The number of activity replies"}),"\n",(0,i.jsxs)(t.h4,{id:"listactivitystatusstring-",children:[(0,i.jsx)(t.a,{href:"#",children:(0,i.jsxs)("code",{style:{fontWeight:"normal"},children:["ListActivity.",(0,i.jsx)("b",{children:"status"})]})}),(0,i.jsx)(o,{}),(0,i.jsx)(t.a,{href:"/examples/default/types/scalars/string",children:(0,i.jsx)(t.code,{children:"String"})})," ",(0,i.jsx)(x,{class:"badge badge--secondary",text:"scalar"})]}),"\n",(0,i.jsx)(t.p,{children:"The list item's textual status"}),"\n",(0,i.jsxs)(t.h4,{id:"listactivityprogressstring-",children:[(0,i.jsx)(t.a,{href:"#",children:(0,i.jsxs)("code",{style:{fontWeight:"normal"},children:["ListActivity.",(0,i.jsx)("b",{children:"progress"})]})}),(0,i.jsx)(o,{}),(0,i.jsx)(t.a,{href:"/examples/default/types/scalars/string",children:(0,i.jsx)(t.code,{children:"String"})})," ",(0,i.jsx)(x,{class:"badge badge--secondary",text:"scalar"})]}),"\n",(0,i.jsx)(t.p,{children:"The list progress made"}),"\n",(0,i.jsxs)(t.h4,{id:"listactivityislockedboolean-",children:[(0,i.jsx)(t.a,{href:"#",children:(0,i.jsxs)("code",{style:{fontWeight:"normal"},children:["ListActivity.",(0,i.jsx)("b",{children:"isLocked"})]})}),(0,i.jsx)(o,{}),(0,i.jsx)(t.a,{href:"/examples/default/types/scalars/boolean",children:(0,i.jsx)(t.code,{children:"Boolean"})})," ",(0,i.jsx)(x,{class:"badge badge--secondary",text:"scalar"})]}),"\n",(0,i.jsx)(t.p,{children:"If the activity is locked and can receive replies"}),"\n",(0,i.jsxs)(t.h4,{id:"listactivityissubscribedboolean-",children:[(0,i.jsx)(t.a,{href:"#",children:(0,i.jsxs)("code",{style:{fontWeight:"normal"},children:["ListActivity.",(0,i.jsx)("b",{children:"isSubscribed"})]})}),(0,i.jsx)(o,{}),(0,i.jsx)(t.a,{href:"/examples/default/types/scalars/boolean",children:(0,i.jsx)(t.code,{children:"Boolean"})})," ",(0,i.jsx)(x,{class:"badge badge--secondary",text:"scalar"})]}),"\n",(0,i.jsx)(t.p,{children:"If the currently authenticated user is subscribed to the activity"}),"\n",(0,i.jsxs)(t.h4,{id:"listactivitylikecountint--",children:[(0,i.jsx)(t.a,{href:"#",children:(0,i.jsxs)("code",{style:{fontWeight:"normal"},children:["ListActivity.",(0,i.jsx)("b",{children:"likeCount"})]})}),(0,i.jsx)(o,{}),(0,i.jsx)(t.a,{href:"/examples/default/types/scalars/int",children:(0,i.jsx)(t.code,{children:"Int!"})})," ",(0,i.jsx)(x,{class:"badge badge--secondary",text:"non-null"})," ",(0,i.jsx)(x,{class:"badge badge--secondary",text:"scalar"})]}),"\n",(0,i.jsx)(t.p,{children:"The amount of likes the activity has"}),"\n",(0,i.jsxs)(t.h4,{id:"listactivityislikedboolean-",children:[(0,i.jsx)(t.a,{href:"#",children:(0,i.jsxs)("code",{style:{fontWeight:"normal"},children:["ListActivity.",(0,i.jsx)("b",{children:"isLiked"})]})}),(0,i.jsx)(o,{}),(0,i.jsx)(t.a,{href:"/examples/default/types/scalars/boolean",children:(0,i.jsx)(t.code,{children:"Boolean"})})," ",(0,i.jsx)(x,{class:"badge badge--secondary",text:"scalar"})]}),"\n",(0,i.jsx)(t.p,{children:"If the currently authenticated user liked the activity"}),"\n",(0,i.jsxs)(t.h4,{id:"listactivityispinnedboolean-",children:[(0,i.jsx)(t.a,{href:"#",children:(0,i.jsxs)("code",{style:{fontWeight:"normal"},children:["ListActivity.",(0,i.jsx)("b",{children:"isPinned"})]})}),(0,i.jsx)(o,{}),(0,i.jsx)(t.a,{href:"/examples/default/types/scalars/boolean",children:(0,i.jsx)(t.code,{children:"Boolean"})})," ",(0,i.jsx)(x,{class:"badge badge--secondary",text:"scalar"})]}),"\n",(0,i.jsx)(t.p,{children:"If the activity is pinned to the top of the users activity feed"}),"\n",(0,i.jsxs)(t.h4,{id:"listactivitysiteurlstring-",children:[(0,i.jsx)(t.a,{href:"#",children:(0,i.jsxs)("code",{style:{fontWeight:"normal"},children:["ListActivity.",(0,i.jsx)("b",{children:"siteUrl"})]})}),(0,i.jsx)(o,{}),(0,i.jsx)(t.a,{href:"/examples/default/types/scalars/string",children:(0,i.jsx)(t.code,{children:"String"})})," ",(0,i.jsx)(x,{class:"badge badge--secondary",text:"scalar"})]}),"\n",(0,i.jsx)(t.p,{children:"The url for the activity page on the AniList website"}),"\n",(0,i.jsxs)(t.h4,{id:"listactivitycreatedatint--",children:[(0,i.jsx)(t.a,{href:"#",children:(0,i.jsxs)("code",{style:{fontWeight:"normal"},children:["ListActivity.",(0,i.jsx)("b",{children:"createdAt"})]})}),(0,i.jsx)(o,{}),(0,i.jsx)(t.a,{href:"/examples/default/types/scalars/int",children:(0,i.jsx)(t.code,{children:"Int!"})})," ",(0,i.jsx)(x,{class:"badge badge--secondary",text:"non-null"})," ",(0,i.jsx)(x,{class:"badge badge--secondary",text:"scalar"})]}),"\n",(0,i.jsx)(t.p,{children:"The time the activity was created at"}),"\n",(0,i.jsxs)(t.h4,{id:"listactivityuseruser-",children:[(0,i.jsx)(t.a,{href:"#",children:(0,i.jsxs)("code",{style:{fontWeight:"normal"},children:["ListActivity.",(0,i.jsx)("b",{children:"user"})]})}),(0,i.jsx)(o,{}),(0,i.jsx)(t.a,{href:"/examples/default/types/objects/user",children:(0,i.jsx)(t.code,{children:"User"})})," ",(0,i.jsx)(x,{class:"badge badge--secondary",text:"object"})]}),"\n",(0,i.jsx)(t.p,{children:"The owner of the activity"}),"\n",(0,i.jsxs)(t.h4,{id:"listactivitymediamedia-",children:[(0,i.jsx)(t.a,{href:"#",children:(0,i.jsxs)("code",{style:{fontWeight:"normal"},children:["ListActivity.",(0,i.jsx)("b",{children:"media"})]})}),(0,i.jsx)(o,{}),(0,i.jsx)(t.a,{href:"/examples/default/types/objects/media",children:(0,i.jsx)(t.code,{children:"Media"})})," ",(0,i.jsx)(x,{class:"badge badge--secondary",text:"object"})]}),"\n",(0,i.jsx)(t.p,{children:"The associated media to the activity update"}),"\n",(0,i.jsxs)(t.h4,{id:"listactivityrepliesactivityreply--",children:[(0,i.jsx)(t.a,{href:"#",children:(0,i.jsxs)("code",{style:{fontWeight:"normal"},children:["ListActivity.",(0,i.jsx)("b",{children:"replies"})]})}),(0,i.jsx)(o,{}),(0,i.jsx)(t.a,{href:"/examples/default/types/objects/activity-reply",children:(0,i.jsx)(t.code,{children:"[ActivityReply]"})})," ",(0,i.jsx)(x,{class:"badge badge--secondary",text:"list"})," ",(0,i.jsx)(x,{class:"badge badge--secondary",text:"object"})]}),"\n",(0,i.jsx)(t.p,{children:"The written replies to the activity"}),"\n",(0,i.jsxs)(t.h4,{id:"listactivitylikesuser--",children:[(0,i.jsx)(t.a,{href:"#",children:(0,i.jsxs)("code",{style:{fontWeight:"normal"},children:["ListActivity.",(0,i.jsx)("b",{children:"likes"})]})}),(0,i.jsx)(o,{}),(0,i.jsx)(t.a,{href:"/examples/default/types/objects/user",children:(0,i.jsx)(t.code,{children:"[User]"})})," ",(0,i.jsx)(x,{class:"badge badge--secondary",text:"list"})," ",(0,i.jsx)(x,{class:"badge badge--secondary",text:"object"})]}),"\n",(0,i.jsx)(t.p,{children:"The users who liked the activity"}),"\n",(0,i.jsx)(t.h3,{id:"returned-by",children:"Returned By"}),"\n",(0,i.jsxs)(t.p,{children:[(0,i.jsx)(t.a,{href:"/examples/default/api/mutations/save-list-activity",children:(0,i.jsx)(t.code,{children:"SaveListActivity"})})," ",(0,i.jsx)(x,{class:"badge badge--secondary",text:"mutation"})]}),"\n",(0,i.jsx)(t.h3,{id:"implemented-by",children:"Implemented By"}),"\n",(0,i.jsxs)(t.p,{children:[(0,i.jsx)(t.a,{href:"/examples/default/types/unions/activity-union",children:(0,i.jsx)(t.code,{children:"ActivityUnion"})})," ",(0,i.jsx)(x,{class:"badge badge--secondary",text:"union"}),(0,i.jsx)(o,{}),(0,i.jsx)(t.a,{href:"/examples/default/types/unions/likeable-union",children:(0,i.jsx)(t.code,{children:"LikeableUnion"})})," ",(0,i.jsx)(x,{class:"badge badge--secondary",text:"union"})]})]})}function j(e={}){const{wrapper:t}={...(0,a.R)(),...e.components};return t?(0,i.jsx)(t,{...e,children:(0,i.jsx)(b,{...e})}):b(e)}},28453:(e,t,s)=>{s.d(t,{R:()=>l,x:()=>c});var i=s(96540);const a={},d=i.createContext(a);function l(e){const t=i.useContext(d);return i.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function c(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:l(e.components),i.createElement(d.Provider,{value:t},e.children)}}}]);