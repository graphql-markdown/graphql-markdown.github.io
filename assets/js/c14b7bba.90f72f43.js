"use strict";(self.webpackChunk_graphql_markdown_website=self.webpackChunk_graphql_markdown_website||[]).push([["419"],{25409:function(e,r,n){n.r(r),n.d(r,{default:()=>h,frontMatter:()=>s,metadata:()=>a,assets:()=>c,toc:()=>d,contentTitle:()=>i});var a=JSON.parse('{"id":"utils/array","title":"array","description":"Internal library of helpers for manipulating array and list.","source":"@site/api/utils/array.md","sourceDirName":"utils","slug":"/utils/array","permalink":"/api/utils/array","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{"title":"array","pagination_prev":null,"pagination_next":null,"toc_max_heading_level":2},"sidebar":"defaultSidebar"}'),t=n("85893"),l=n("50065");let s={title:"array",pagination_prev:null,pagination_next:null,toc_max_heading_level:2},i=void 0,c={},d=[{value:"convertArrayToMapObject()",id:"convertarraytomapobject",level:2},{value:"Type Parameters",id:"type-parameters",level:3},{value:"T",id:"t",level:4},{value:"Parameters",id:"parameters",level:3},{value:"list",id:"list",level:4},{value:"Returns",id:"returns",level:3},{value:"Example",id:"example",level:3},{value:"toArray()",id:"toarray",level:2},{value:"Parameters",id:"parameters-1",level:3},{value:"recordMap",id:"recordmap",level:4},{value:"Returns",id:"returns-1",level:3},{value:"Example",id:"example-1",level:3}];function o(e){let r={code:"code",h2:"h2",h3:"h3",h4:"h4",hr:"hr",p:"p",pre:"pre",strong:"strong",...(0,l.a)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(r.p,{children:"Internal library of helpers for manipulating array and list."}),"\n",(0,t.jsx)(r.h2,{id:"convertarraytomapobject",children:"convertArrayToMapObject()"}),"\n",(0,t.jsx)(r.pre,{children:(0,t.jsx)(r.code,{className:"language-ts",children:"function convertArrayToMapObject<T>(list): Maybe<Record<string, T>>;\n"})}),"\n",(0,t.jsx)(r.p,{children:"Defined in: array.ts:77"}),"\n",(0,t.jsx)(r.p,{children:(0,t.jsx)(r.strong,{children:(0,t.jsx)(r.code,{children:"Internal"})})}),"\n",(0,t.jsxs)(r.p,{children:["Returns a k/v object from an array of objects with a ",(0,t.jsx)(r.code,{children:"name"})," property."]}),"\n",(0,t.jsx)(r.h3,{id:"type-parameters",children:"Type Parameters"}),"\n",(0,t.jsx)(r.h4,{id:"t",children:"T"}),"\n",(0,t.jsx)(r.p,{children:(0,t.jsx)(r.code,{children:"T"})}),"\n",(0,t.jsx)(r.p,{children:"the type of objects the list contains."}),"\n",(0,t.jsx)(r.h3,{id:"parameters",children:"Parameters"}),"\n",(0,t.jsx)(r.h4,{id:"list",children:"list"}),"\n",(0,t.jsxs)(r.p,{children:[(0,t.jsx)(r.code,{children:"Maybe"}),"<",(0,t.jsx)(r.code,{children:"T"}),"[]>"]}),"\n",(0,t.jsxs)(r.p,{children:["the list of objects of type ",(0,t.jsx)(r.code,{children:"{ name: any }"})," to be converted."]}),"\n",(0,t.jsx)(r.h3,{id:"returns",children:"Returns"}),"\n",(0,t.jsxs)(r.p,{children:[(0,t.jsx)(r.code,{children:"Maybe"}),"<",(0,t.jsx)(r.code,{children:"Record"}),"<",(0,t.jsx)(r.code,{children:"string"}),", ",(0,t.jsx)(r.code,{children:"T"}),">>"]}),"\n",(0,t.jsxs)(r.p,{children:["an array of object values with ",(0,t.jsx)(r.code,{children:"name"})," as key, or ",(0,t.jsx)(r.code,{children:"undefined"})," if ",(0,t.jsx)(r.code,{children:"list"})," is not a valid array."]}),"\n",(0,t.jsx)(r.h3,{id:"example",children:"Example"}),"\n",(0,t.jsx)(r.pre,{children:(0,t.jsx)(r.code,{className:"language-js",children:'import { convertArrayToMapObject } from \'@graphql-markdown/utils/array\';\n\nconvertArrayToMapObject([\n    { name: true },\n    { name: "test" },\n    { name: 123 },\n    { name2: 1234 },\n  ]);\n\n// Expected result: {\n//   true: { name: true },\n//   test: { name: "test" },\n//   "123": { name: 123 },\n// }\n'})}),"\n",(0,t.jsx)(r.hr,{}),"\n",(0,t.jsx)(r.h2,{id:"toarray",children:"toArray()"}),"\n",(0,t.jsx)(r.pre,{children:(0,t.jsx)(r.code,{className:"language-ts",children:"function toArray(recordMap): Maybe<unknown[]>;\n"})}),"\n",(0,t.jsx)(r.p,{children:"Defined in: array.ts:35"}),"\n",(0,t.jsx)(r.p,{children:(0,t.jsx)(r.strong,{children:(0,t.jsx)(r.code,{children:"Internal"})})}),"\n",(0,t.jsx)(r.p,{children:"Returns an array of values from a k/v object."}),"\n",(0,t.jsx)(r.h3,{id:"parameters-1",children:"Parameters"}),"\n",(0,t.jsx)(r.h4,{id:"recordmap",children:"recordMap"}),"\n",(0,t.jsxs)(r.p,{children:[(0,t.jsx)(r.code,{children:"Maybe"}),"<",(0,t.jsx)(r.code,{children:"Record"}),"<",(0,t.jsx)(r.code,{children:"string"}),", ",(0,t.jsx)(r.code,{children:"unknown"}),">>"]}),"\n",(0,t.jsx)(r.p,{children:"the key/value record object to be converted."}),"\n",(0,t.jsx)(r.h3,{id:"returns-1",children:"Returns"}),"\n",(0,t.jsxs)(r.p,{children:[(0,t.jsx)(r.code,{children:"Maybe"}),"<",(0,t.jsx)(r.code,{children:"unknown"}),"[]>"]}),"\n",(0,t.jsxs)(r.p,{children:["an array of object values, or ",(0,t.jsx)(r.code,{children:"undefined"})," if ",(0,t.jsx)(r.code,{children:"recordMap"})," is not a valid object."]}),"\n",(0,t.jsx)(r.h3,{id:"example-1",children:"Example"}),"\n",(0,t.jsx)(r.pre,{children:(0,t.jsx)(r.code,{className:"language-js",children:'import { toArray } from \'@graphql-markdown/utils/array\';\n\ntoArray({\n    bool: true,\n    string: "test",\n    number: 123,\n    array: ["one", "two"],\n    child: { key: "value" },\n  });\n\n// Expected result: [true, "test", 123, ["one", "two"], { key: "value" }]\n'})})]})}function h(e={}){let{wrapper:r}={...(0,l.a)(),...e.components};return r?(0,t.jsx)(r,{...e,children:(0,t.jsx)(o,{...e})}):o(e)}},50065:function(e,r,n){n.d(r,{Z:function(){return i},a:function(){return s}});var a=n(67294);let t={},l=a.createContext(t);function s(e){let r=a.useContext(l);return a.useMemo(function(){return"function"==typeof e?e(r):{...r,...e}},[r,e])}function i(e){let r;return r=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:s(e.components),a.createElement(l.Provider,{value:r},e.children)}}}]);