"use strict";(self.webpackChunk_graphql_markdown_website=self.webpackChunk_graphql_markdown_website||[]).push([["5291"],{4232:function(e,n,i){i.r(n),i.d(n,{default:()=>h,frontMatter:()=>s,metadata:()=>r,assets:()=>o,toc:()=>a,contentTitle:()=>d});var r=JSON.parse('{"id":"printer-legacy/link","title":"link","description":"Module for handling links and link-related operations in GraphQL Markdown printer.","source":"@site/api/printer-legacy/link.md","sourceDirName":"printer-legacy","slug":"/printer-legacy/link","permalink":"/api/printer-legacy/link","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{"title":"link","pagination_prev":null,"pagination_next":null,"toc_max_heading_level":2},"sidebar":"defaultSidebar"}'),t=i("85893"),l=i("50065");let s={title:"link",pagination_prev:null,pagination_next:null,toc_max_heading_level:2},d=void 0,o={},a=[{value:"API_GROUPS",id:"api_groups",level:2},{value:"getCategoryLocale()",id:"getcategorylocale",level:2},{value:"Parameters",id:"parameters",level:3},{value:"type",id:"type",level:4},{value:"Returns",id:"returns",level:3},{value:"getLinkApiGroupFolder()",id:"getlinkapigroupfolder",level:2},{value:"Parameters",id:"parameters-1",level:3},{value:"type",id:"type-1",level:4},{value:"groups?",id:"groups",level:4},{value:"Returns",id:"returns-1",level:3},{value:"getLinkCategoryFolder()",id:"getlinkcategoryfolder",level:2},{value:"Parameters",id:"parameters-2",level:3},{value:"type",id:"type-2",level:4},{value:"operationLocale?",id:"operationlocale",level:4},{value:"Returns",id:"returns-2",level:3},{value:"getLinkDeprecatedFolder()",id:"getlinkdeprecatedfolder",level:2},{value:"Parameters",id:"parameters-3",level:3},{value:"type",id:"type-3",level:4},{value:"option",id:"option",level:4},{value:"Returns",id:"returns-3",level:3},{value:"getRelationLink()",id:"getrelationlink",level:2},{value:"Parameters",id:"parameters-4",level:3},{value:"category",id:"category",level:4},{value:"type",id:"type-4",level:4},{value:"options",id:"options",level:4},{value:"Returns",id:"returns-4",level:3},{value:"hasOptionParentType()",id:"hasoptionparenttype",level:2},{value:"Parameters",id:"parameters-5",level:3},{value:"options",id:"options-1",level:4},{value:"Returns",id:"returns-5",level:3},{value:"hasOptionWithAttributes()",id:"hasoptionwithattributes",level:2},{value:"Parameters",id:"parameters-6",level:3},{value:"options",id:"options-2",level:4},{value:"Returns",id:"returns-6",level:3},{value:"hasPrintableDirective()",id:"hasprintabledirective",level:2},{value:"Parameters",id:"parameters-7",level:3},{value:"type",id:"type-5",level:4},{value:"options?",id:"options-3",level:4},{value:"Returns",id:"returns-7",level:3},{value:"printLink()",id:"printlink",level:2},{value:"Parameters",id:"parameters-8",level:3},{value:"type",id:"type-6",level:4},{value:"options",id:"options-4",level:4},{value:"Returns",id:"returns-8",level:3},{value:"printLinkAttributes()",id:"printlinkattributes",level:2},{value:"Parameters",id:"parameters-9",level:3},{value:"type",id:"type-7",level:4},{value:"text",id:"text",level:4},{value:"Returns",id:"returns-9",level:3},{value:"printParentLink()",id:"printparentlink",level:2},{value:"Parameters",id:"parameters-10",level:3},{value:"type",id:"type-8",level:4},{value:"options",id:"options-5",level:4},{value:"Returns",id:"returns-10",level:3},{value:"toLink()",id:"tolink",level:2},{value:"Parameters",id:"parameters-11",level:3},{value:"type",id:"type-9",level:4},{value:"name",id:"name",level:4},{value:"operation",id:"operation",level:4},{value:"options",id:"options-6",level:4},{value:"Returns",id:"returns-11",level:3}];function c(e){let n={code:"code",h2:"h2",h3:"h3",h4:"h4",hr:"hr",p:"p",pre:"pre",...(0,l.a)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.p,{children:"Module for handling links and link-related operations in GraphQL Markdown printer.\nProvides utilities for creating, formatting, and managing links to GraphQL types and operations."}),"\n",(0,t.jsx)(n.h2,{id:"api_groups",children:"API_GROUPS"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-ts",children:"const API_GROUPS: Required<ApiGroupOverrideType>;\n"})}),"\n",(0,t.jsx)(n.p,{children:"Defined in: link.ts:48"}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsx)(n.h2,{id:"getcategorylocale",children:"getCategoryLocale()"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-ts",children:"function getCategoryLocale(type): Maybe<TypeLocale>\n"})}),"\n",(0,t.jsx)(n.p,{children:"Defined in: link.ts:102"}),"\n",(0,t.jsx)(n.p,{children:"Gets the locale category for a given GraphQL type."}),"\n",(0,t.jsx)(n.h3,{id:"parameters",children:"Parameters"}),"\n",(0,t.jsx)(n.h4,{id:"type",children:"type"}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.code,{children:"unknown"})}),"\n",(0,t.jsx)(n.p,{children:"The GraphQL type to get the category for"}),"\n",(0,t.jsx)(n.h3,{id:"returns",children:"Returns"}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.code,{children:"Maybe"}),"<",(0,t.jsx)(n.code,{children:"TypeLocale"}),">"]}),"\n",(0,t.jsxs)(n.p,{children:["The locale category for the type, or ",(0,t.jsx)(n.code,{children:"undefined"})," if not found"]}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsx)(n.h2,{id:"getlinkapigroupfolder",children:"getLinkApiGroupFolder()"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-ts",children:"function getLinkApiGroupFolder(type, groups?): string\n"})}),"\n",(0,t.jsx)(n.p,{children:"Defined in: link.ts:188"}),"\n",(0,t.jsx)(n.p,{children:"Gets the folder name for an API group based on the GraphQL type and group options."}),"\n",(0,t.jsx)(n.h3,{id:"parameters-1",children:"Parameters"}),"\n",(0,t.jsx)(n.h4,{id:"type-1",children:"type"}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.code,{children:"unknown"})}),"\n",(0,t.jsx)(n.p,{children:"The GraphQL type to get the folder name for"}),"\n",(0,t.jsx)(n.h4,{id:"groups",children:"groups?"}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.code,{children:"Maybe"}),"<",(0,t.jsx)(n.code,{children:"boolean"})," | ",(0,t.jsx)(n.code,{children:"ApiGroupOverrideType"}),">"]}),"\n",(0,t.jsx)(n.p,{children:"The group options"}),"\n",(0,t.jsx)(n.h3,{id:"returns-1",children:"Returns"}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.code,{children:"string"})}),"\n",(0,t.jsx)(n.p,{children:"The folder name for the API group"}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsx)(n.h2,{id:"getlinkcategoryfolder",children:"getLinkCategoryFolder()"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-ts",children:"function getLinkCategoryFolder(type, operationLocale?): Maybe<string>\n"})}),"\n",(0,t.jsx)(n.p,{children:"Defined in: link.ts:131"}),"\n",(0,t.jsx)(n.p,{children:"Gets the folder name for a link category based on the GraphQL type and operation locale."}),"\n",(0,t.jsx)(n.h3,{id:"parameters-2",children:"Parameters"}),"\n",(0,t.jsx)(n.h4,{id:"type-2",children:"type"}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.code,{children:"unknown"})}),"\n",(0,t.jsx)(n.p,{children:"The GraphQL type to get the folder name for"}),"\n",(0,t.jsx)(n.h4,{id:"operationlocale",children:"operationLocale?"}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.code,{children:"Maybe"}),"<",(0,t.jsx)(n.code,{children:"TypeLocale"}),">"]}),"\n",(0,t.jsx)(n.p,{children:"The locale of the operation"}),"\n",(0,t.jsx)(n.h3,{id:"returns-2",children:"Returns"}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.code,{children:"Maybe"}),"<",(0,t.jsx)(n.code,{children:"string"}),">"]}),"\n",(0,t.jsxs)(n.p,{children:["The folder name for the link category, or ",(0,t.jsx)(n.code,{children:"undefined"})," if not found"]}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsx)(n.h2,{id:"getlinkdeprecatedfolder",children:"getLinkDeprecatedFolder()"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-ts",children:"function getLinkDeprecatedFolder(type, option): string\n"})}),"\n",(0,t.jsx)(n.p,{children:"Defined in: link.ts:206"}),"\n",(0,t.jsx)(n.p,{children:"Gets the folder name for deprecated types based on the GraphQL type and deprecation option."}),"\n",(0,t.jsx)(n.h3,{id:"parameters-3",children:"Parameters"}),"\n",(0,t.jsx)(n.h4,{id:"type-3",children:"type"}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.code,{children:"unknown"})}),"\n",(0,t.jsx)(n.p,{children:"The GraphQL type to get the folder name for"}),"\n",(0,t.jsx)(n.h4,{id:"option",children:"option"}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.code,{children:"Maybe"}),"<",(0,t.jsx)(n.code,{children:"TypeDeprecatedOption"}),">"]}),"\n",(0,t.jsx)(n.p,{children:"The deprecation option"}),"\n",(0,t.jsx)(n.h3,{id:"returns-3",children:"Returns"}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.code,{children:"string"})}),"\n",(0,t.jsx)(n.p,{children:"The folder name for deprecated types"}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsx)(n.h2,{id:"getrelationlink",children:"getRelationLink()"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-ts",children:"function getRelationLink(\n   category, \n   type, \noptions): Maybe<TypeLink>\n"})}),"\n",(0,t.jsx)(n.p,{children:"Defined in: link.ts:306"}),"\n",(0,t.jsx)(n.p,{children:"Gets the link for a relation based on the category, type, and options."}),"\n",(0,t.jsx)(n.h3,{id:"parameters-4",children:"Parameters"}),"\n",(0,t.jsx)(n.h4,{id:"category",children:"category"}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.code,{children:"Maybe"}),"<",(0,t.jsx)(n.code,{children:"TypeLocale"}),">"]}),"\n",(0,t.jsx)(n.p,{children:"The locale category of the relation"}),"\n",(0,t.jsx)(n.h4,{id:"type-4",children:"type"}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.code,{children:"unknown"})}),"\n",(0,t.jsx)(n.p,{children:"The GraphQL type of the relation"}),"\n",(0,t.jsx)(n.h4,{id:"options",children:"options"}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.code,{children:"PrintLinkOptions"})}),"\n",(0,t.jsx)(n.p,{children:"Configuration options for link generation"}),"\n",(0,t.jsx)(n.h3,{id:"returns-4",children:"Returns"}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.code,{children:"Maybe"}),"<",(0,t.jsx)(n.code,{children:"TypeLink"}),">"]}),"\n",(0,t.jsxs)(n.p,{children:["The link object for the relation, or ",(0,t.jsx)(n.code,{children:"undefined"})," if not found"]}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsx)(n.h2,{id:"hasoptionparenttype",children:"hasOptionParentType()"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-ts",children:"function hasOptionParentType(options): boolean\n"})}),"\n",(0,t.jsx)(n.p,{children:"Defined in: link.ts:172"}),"\n",(0,t.jsxs)(n.p,{children:["Checks if the options include the ",(0,t.jsx)(n.code,{children:"parentTypePrefix"})," attribute."]}),"\n",(0,t.jsx)(n.h3,{id:"parameters-5",children:"Parameters"}),"\n",(0,t.jsx)(n.h4,{id:"options-1",children:"options"}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.code,{children:"PrintLinkOptions"})}),"\n",(0,t.jsx)(n.p,{children:"The options to check"}),"\n",(0,t.jsx)(n.h3,{id:"returns-5",children:"Returns"}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.code,{children:"boolean"})}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.code,{children:"true"})," if the options include ",(0,t.jsx)(n.code,{children:"parentTypePrefix"}),", ",(0,t.jsx)(n.code,{children:"false"})," otherwise"]}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsx)(n.h2,{id:"hasoptionwithattributes",children:"hasOptionWithAttributes()"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-ts",children:"function hasOptionWithAttributes(options): boolean\n"})}),"\n",(0,t.jsx)(n.p,{children:"Defined in: link.ts:162"}),"\n",(0,t.jsxs)(n.p,{children:["Checks if the options include the ",(0,t.jsx)(n.code,{children:"withAttributes"})," attribute."]}),"\n",(0,t.jsx)(n.h3,{id:"parameters-6",children:"Parameters"}),"\n",(0,t.jsx)(n.h4,{id:"options-2",children:"options"}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.code,{children:"PrintLinkOptions"})}),"\n",(0,t.jsx)(n.p,{children:"The options to check"}),"\n",(0,t.jsx)(n.h3,{id:"returns-6",children:"Returns"}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.code,{children:"boolean"})}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.code,{children:"true"})," if the options include ",(0,t.jsx)(n.code,{children:"withAttributes"}),", ",(0,t.jsx)(n.code,{children:"false"})," otherwise"]}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsx)(n.h2,{id:"hasprintabledirective",children:"hasPrintableDirective()"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-ts",children:"function hasPrintableDirective(type, options?): boolean\n"})}),"\n",(0,t.jsx)(n.p,{children:"Defined in: link.ts:63"}),"\n",(0,t.jsx)(n.p,{children:"Checks if a type has printable directives based on the provided options."}),"\n",(0,t.jsx)(n.h3,{id:"parameters-7",children:"Parameters"}),"\n",(0,t.jsx)(n.h4,{id:"type-5",children:"type"}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.code,{children:"unknown"})}),"\n",(0,t.jsx)(n.p,{children:"The GraphQL type to check"}),"\n",(0,t.jsx)(n.h4,{id:"options-3",children:"options?"}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.code,{children:"Pick"}),"<",(0,t.jsx)(n.code,{children:"PrintTypeOptions"}),", ",(0,t.jsx)(n.code,{children:'"deprecated"'})," | ",(0,t.jsx)(n.code,{children:'"onlyDocDirectives"'})," | ",(0,t.jsx)(n.code,{children:'"skipDocDirectives"'}),">"]}),"\n",(0,t.jsx)(n.p,{children:"Configuration options for directive printing"}),"\n",(0,t.jsx)(n.h3,{id:"returns-7",children:"Returns"}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.code,{children:"boolean"})}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.code,{children:"true"})," if the type should be printed, ",(0,t.jsx)(n.code,{children:"false"})," otherwise"]}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsx)(n.h2,{id:"printlink",children:"printLink()"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-ts",children:"function printLink(type, options): string\n"})}),"\n",(0,t.jsx)(n.p,{children:"Defined in: link.ts:363"}),"\n",(0,t.jsx)(n.p,{children:"Prints a link for a GraphQL type based on the provided options."}),"\n",(0,t.jsx)(n.h3,{id:"parameters-8",children:"Parameters"}),"\n",(0,t.jsx)(n.h4,{id:"type-6",children:"type"}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.code,{children:"unknown"})}),"\n",(0,t.jsx)(n.p,{children:"The GraphQL type to print a link for"}),"\n",(0,t.jsx)(n.h4,{id:"options-4",children:"options"}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.code,{children:"PrintLinkOptions"})}),"\n",(0,t.jsx)(n.p,{children:"Configuration options for link generation"}),"\n",(0,t.jsx)(n.h3,{id:"returns-8",children:"Returns"}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.code,{children:"string"})}),"\n",(0,t.jsx)(n.p,{children:"The formatted link as a string"}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsx)(n.h2,{id:"printlinkattributes",children:"printLinkAttributes()"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-ts",children:"function printLinkAttributes(type, text): string\n"})}),"\n",(0,t.jsx)(n.p,{children:"Defined in: link.ts:329"}),"\n",(0,t.jsx)(n.p,{children:"Prints the attributes of a link based on the GraphQL type."}),"\n",(0,t.jsx)(n.h3,{id:"parameters-9",children:"Parameters"}),"\n",(0,t.jsx)(n.h4,{id:"type-7",children:"type"}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.code,{children:"unknown"})}),"\n",(0,t.jsx)(n.p,{children:"The GraphQL type to print attributes for"}),"\n",(0,t.jsx)(n.h4,{id:"text",children:"text"}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.code,{children:"Maybe"}),"<",(0,t.jsx)(n.code,{children:"string"}),"> = ",(0,t.jsx)(n.code,{children:'""'})]}),"\n",(0,t.jsx)(n.p,{children:"The text to append attributes to"}),"\n",(0,t.jsx)(n.h3,{id:"returns-9",children:"Returns"}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.code,{children:"string"})}),"\n",(0,t.jsx)(n.p,{children:"The text with appended attributes"}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsx)(n.h2,{id:"printparentlink",children:"printParentLink()"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-ts",children:"function printParentLink(type, options): string | MDXString\n"})}),"\n",(0,t.jsx)(n.p,{children:"Defined in: link.ts:395"}),"\n",(0,t.jsx)(n.p,{children:"Prints a parent link for a GraphQL type based on the provided options."}),"\n",(0,t.jsx)(n.h3,{id:"parameters-10",children:"Parameters"}),"\n",(0,t.jsx)(n.h4,{id:"type-8",children:"type"}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.code,{children:"unknown"})}),"\n",(0,t.jsx)(n.p,{children:"The GraphQL type to print a parent link for"}),"\n",(0,t.jsx)(n.h4,{id:"options-5",children:"options"}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.code,{children:"PrintLinkOptions"})}),"\n",(0,t.jsx)(n.p,{children:"Configuration options for link generation"}),"\n",(0,t.jsx)(n.h3,{id:"returns-10",children:"Returns"}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.code,{children:"string"})," | ",(0,t.jsx)(n.code,{children:"MDXString"})]}),"\n",(0,t.jsx)(n.p,{children:"The formatted parent link as a string or MDX string"}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsx)(n.h2,{id:"tolink",children:"toLink()"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-ts",children:"function toLink(\n   type, \n   name, \n   operation, \n   options): TypeLink\n"})}),"\n",(0,t.jsx)(n.p,{children:"Defined in: link.ts:229"}),"\n",(0,t.jsx)(n.p,{children:"Converts a GraphQL type to a link object."}),"\n",(0,t.jsx)(n.h3,{id:"parameters-11",children:"Parameters"}),"\n",(0,t.jsx)(n.h4,{id:"type-9",children:"type"}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.code,{children:"unknown"})}),"\n",(0,t.jsx)(n.p,{children:"The GraphQL type to convert"}),"\n",(0,t.jsx)(n.h4,{id:"name",children:"name"}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.code,{children:"string"})}),"\n",(0,t.jsx)(n.p,{children:"The name of the type"}),"\n",(0,t.jsx)(n.h4,{id:"operation",children:"operation"}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.code,{children:"Maybe"}),"<",(0,t.jsx)(n.code,{children:"TypeLocale"}),">"]}),"\n",(0,t.jsx)(n.p,{children:"The locale of the operation"}),"\n",(0,t.jsx)(n.h4,{id:"options-6",children:"options"}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.code,{children:"PrintLinkOptions"})}),"\n",(0,t.jsx)(n.p,{children:"Configuration options for link generation"}),"\n",(0,t.jsx)(n.h3,{id:"returns-11",children:"Returns"}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.code,{children:"TypeLink"})}),"\n",(0,t.jsx)(n.p,{children:"The link object for the type"})]})}function h(e={}){let{wrapper:n}={...(0,l.a)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(c,{...e})}):c(e)}},50065:function(e,n,i){i.d(n,{Z:function(){return d},a:function(){return s}});var r=i(67294);let t={},l=r.createContext(t);function s(e){let n=r.useContext(l);return r.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function d(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:s(e.components),r.createElement(l.Provider,{value:n},e.children)}}}]);