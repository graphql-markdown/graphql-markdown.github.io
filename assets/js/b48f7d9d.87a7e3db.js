"use strict";(self.webpackChunk_graphql_markdown_website=self.webpackChunk_graphql_markdown_website||[]).push([["4629"],{71769:function(e,n,i){i.r(n),i.d(n,{default:()=>p,frontMatter:()=>l,metadata:()=>r,assets:()=>c,toc:()=>o,contentTitle:()=>d});var r=JSON.parse('{"id":"printer-legacy/directive","title":"directive","description":"Provides utilities for handling and printing GraphQL directives in Markdown format","source":"@site/api/printer-legacy/directive.md","sourceDirName":"printer-legacy","slug":"/printer-legacy/directive","permalink":"/api/printer-legacy/directive","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{"title":"directive","pagination_prev":null,"pagination_next":null,"toc_max_heading_level":2},"sidebar":"defaultSidebar"}'),t=i("85893"),s=i("50065");let l={title:"directive",pagination_prev:null,pagination_next:null,toc_max_heading_level:2},d=void 0,c={},o=[{value:"getCustomDirectiveResolver()",id:"getcustomdirectiveresolver",level:2},{value:"Parameters",id:"parameters",level:3},{value:"resolver",id:"resolver",level:4},{value:"type",id:"type",level:4},{value:"constDirectiveOption",id:"constdirectiveoption",level:4},{value:"fallback?",id:"fallback",level:4},{value:"Returns",id:"returns",level:3},{value:"getCustomTags()",id:"getcustomtags",level:2},{value:"Parameters",id:"parameters-1",level:3},{value:"type",id:"type-1",level:4},{value:"options",id:"options",level:4},{value:"Returns",id:"returns-1",level:3},{value:"printCustomDirective()",id:"printcustomdirective",level:2},{value:"Parameters",id:"parameters-2",level:3},{value:"type",id:"type-2",level:4},{value:"constDirectiveOption",id:"constdirectiveoption-1",level:4},{value:"options",id:"options-1",level:4},{value:"Returns",id:"returns-2",level:3},{value:"printCustomDirectives()",id:"printcustomdirectives",level:2},{value:"Parameters",id:"parameters-3",level:3},{value:"type",id:"type-3",level:4},{value:"options",id:"options-2",level:4},{value:"Returns",id:"returns-3",level:3},{value:"printCustomTags()",id:"printcustomtags",level:2},{value:"Parameters",id:"parameters-4",level:3},{value:"type",id:"type-4",level:4},{value:"options",id:"options-3",level:4},{value:"Returns",id:"returns-4",level:3}];function a(e){let n={code:"code",h2:"h2",h3:"h3",h4:"h4",hr:"hr",p:"p",pre:"pre",...(0,s.a)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.p,{children:"Provides utilities for handling and printing GraphQL directives in Markdown format"}),"\n",(0,t.jsx)(n.h2,{id:"getcustomdirectiveresolver",children:"getCustomDirectiveResolver()"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-ts",children:"function getCustomDirectiveResolver(\n   resolver, \n   type, \n   constDirectiveOption, \nfallback?): Maybe<string>\n"})}),"\n",(0,t.jsx)(n.p,{children:"Defined in: directive.ts:30"}),"\n",(0,t.jsx)(n.p,{children:"Resolves a custom directive using the provided resolver function"}),"\n",(0,t.jsx)(n.h3,{id:"parameters",children:"Parameters"}),"\n",(0,t.jsx)(n.h4,{id:"resolver",children:"resolver"}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.code,{children:"CustomDirectiveResolver"})}),"\n",(0,t.jsx)(n.p,{children:"The resolver function name to execute"}),"\n",(0,t.jsx)(n.h4,{id:"type",children:"type"}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.code,{children:"unknown"})}),"\n",(0,t.jsx)(n.p,{children:"The GraphQL type to resolve the directive for"}),"\n",(0,t.jsx)(n.h4,{id:"constdirectiveoption",children:"constDirectiveOption"}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.code,{children:"CustomDirectiveMapItem"})}),"\n",(0,t.jsx)(n.p,{children:"The directive configuration options"}),"\n",(0,t.jsx)(n.h4,{id:"fallback",children:"fallback?"}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.code,{children:"Maybe"}),"<",(0,t.jsx)(n.code,{children:"string"}),">"]}),"\n",(0,t.jsx)(n.p,{children:"Optional fallback value if resolution fails"}),"\n",(0,t.jsx)(n.h3,{id:"returns",children:"Returns"}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.code,{children:"Maybe"}),"<",(0,t.jsx)(n.code,{children:"string"}),">"]}),"\n",(0,t.jsx)(n.p,{children:"The resolved directive value or fallback/undefined"}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsx)(n.h2,{id:"getcustomtags",children:"getCustomTags()"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-ts",children:"function getCustomTags(type, options): Badge[]\n"})}),"\n",(0,t.jsx)(n.p,{children:"Defined in: directive.ts:121"}),"\n",(0,t.jsx)(n.p,{children:"Extracts custom tags from directives for a given type"}),"\n",(0,t.jsx)(n.h3,{id:"parameters-1",children:"Parameters"}),"\n",(0,t.jsx)(n.h4,{id:"type-1",children:"type"}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.code,{children:"unknown"})}),"\n",(0,t.jsx)(n.p,{children:"The GraphQL type to get tags for"}),"\n",(0,t.jsx)(n.h4,{id:"options",children:"options"}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.code,{children:"PrintTypeOptions"})}),"\n",(0,t.jsx)(n.p,{children:"General printing options"}),"\n",(0,t.jsx)(n.h3,{id:"returns-1",children:"Returns"}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.code,{children:"Badge"}),"[]"]}),"\n",(0,t.jsx)(n.p,{children:"Array of badge configurations from directive tags"}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsx)(n.h2,{id:"printcustomdirective",children:"printCustomDirective()"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-ts",children:"function printCustomDirective(\n   type, \n   constDirectiveOption, \noptions): Maybe<string>\n"})}),"\n",(0,t.jsx)(n.p,{children:"Defined in: directive.ts:57"}),"\n",(0,t.jsx)(n.p,{children:"Prints a custom directive as a Markdown string"}),"\n",(0,t.jsx)(n.h3,{id:"parameters-2",children:"Parameters"}),"\n",(0,t.jsx)(n.h4,{id:"type-2",children:"type"}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.code,{children:"unknown"})}),"\n",(0,t.jsx)(n.p,{children:"The GraphQL type to print the directive for"}),"\n",(0,t.jsx)(n.h4,{id:"constdirectiveoption-1",children:"constDirectiveOption"}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.code,{children:"CustomDirectiveMapItem"})}),"\n",(0,t.jsx)(n.p,{children:"The directive configuration options"}),"\n",(0,t.jsx)(n.h4,{id:"options-1",children:"options"}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.code,{children:"PrintTypeOptions"})}),"\n",(0,t.jsx)(n.p,{children:"General printing options"}),"\n",(0,t.jsx)(n.h3,{id:"returns-2",children:"Returns"}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.code,{children:"Maybe"}),"<",(0,t.jsx)(n.code,{children:"string"}),">"]}),"\n",(0,t.jsx)(n.p,{children:"Formatted Markdown string for the directive or undefined"}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsx)(n.h2,{id:"printcustomdirectives",children:"printCustomDirectives()"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-ts",children:"function printCustomDirectives(type, options): string\n"})}),"\n",(0,t.jsx)(n.p,{children:"Defined in: directive.ts:85"}),"\n",(0,t.jsx)(n.p,{children:"Prints all custom directives for a type as a Markdown section"}),"\n",(0,t.jsx)(n.h3,{id:"parameters-3",children:"Parameters"}),"\n",(0,t.jsx)(n.h4,{id:"type-3",children:"type"}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.code,{children:"unknown"})}),"\n",(0,t.jsx)(n.p,{children:"The GraphQL type to print directives for"}),"\n",(0,t.jsx)(n.h4,{id:"options-2",children:"options"}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.code,{children:"PrintTypeOptions"})}),"\n",(0,t.jsx)(n.p,{children:"General printing options"}),"\n",(0,t.jsx)(n.h3,{id:"returns-3",children:"Returns"}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.code,{children:"string"})}),"\n",(0,t.jsx)(n.p,{children:"Markdown string containing all formatted directives"}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsx)(n.h2,{id:"printcustomtags",children:"printCustomTags()"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-ts",children:"function printCustomTags(type, options): string | MDXString\n"})}),"\n",(0,t.jsx)(n.p,{children:"Defined in: directive.ts:153"}),"\n",(0,t.jsx)(n.p,{children:"Prints custom directive tags as Markdown badges"}),"\n",(0,t.jsx)(n.h3,{id:"parameters-4",children:"Parameters"}),"\n",(0,t.jsx)(n.h4,{id:"type-4",children:"type"}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.code,{children:"unknown"})}),"\n",(0,t.jsx)(n.p,{children:"The GraphQL type to print tags for"}),"\n",(0,t.jsx)(n.h4,{id:"options-3",children:"options"}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.code,{children:"PrintTypeOptions"})}),"\n",(0,t.jsx)(n.p,{children:"General printing options"}),"\n",(0,t.jsx)(n.h3,{id:"returns-4",children:"Returns"}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.code,{children:"string"})," | ",(0,t.jsx)(n.code,{children:"MDXString"})]}),"\n",(0,t.jsx)(n.p,{children:"Formatted Markdown string of badges or empty string"})]})}function p(e={}){let{wrapper:n}={...(0,s.a)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(a,{...e})}):a(e)}},50065:function(e,n,i){i.d(n,{Z:function(){return d},a:function(){return l}});var r=i(67294);let t={},s=r.createContext(t);function l(e){let n=r.useContext(s);return r.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function d(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:l(e.components),r.createElement(s.Provider,{value:n},e.children)}}}]);