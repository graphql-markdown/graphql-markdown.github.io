"use strict";(self.webpackChunkdocusaurus_2=self.webpackChunkdocusaurus_2||[]).push([[921],{3905:function(e,r,t){t.d(r,{Zo:function(){return p},kt:function(){return f}});var n=t(7294);function o(e,r,t){return r in e?Object.defineProperty(e,r,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[r]=t,e}function u(e,r){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);r&&(n=n.filter((function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable}))),t.push.apply(t,n)}return t}function a(e){for(var r=1;r<arguments.length;r++){var t=null!=arguments[r]?arguments[r]:{};r%2?u(Object(t),!0).forEach((function(r){o(e,r,t[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):u(Object(t)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(t,r))}))}return e}function i(e,r){if(null==e)return{};var t,n,o=function(e,r){if(null==e)return{};var t,n,o={},u=Object.keys(e);for(n=0;n<u.length;n++)t=u[n],r.indexOf(t)>=0||(o[t]=e[t]);return o}(e,r);if(Object.getOwnPropertySymbols){var u=Object.getOwnPropertySymbols(e);for(n=0;n<u.length;n++)t=u[n],r.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(o[t]=e[t])}return o}var c=n.createContext({}),s=function(e){var r=n.useContext(c),t=r;return e&&(t="function"==typeof e?e(r):a(a({},r),e)),t},p=function(e){var r=s(e.components);return n.createElement(c.Provider,{value:r},e.children)},l={inlineCode:"code",wrapper:function(e){var r=e.children;return n.createElement(n.Fragment,{},r)}},d=n.forwardRef((function(e,r){var t=e.components,o=e.mdxType,u=e.originalType,c=e.parentName,p=i(e,["components","mdxType","originalType","parentName"]),d=s(t),f=o,m=d["".concat(c,".").concat(f)]||d[f]||l[f]||u;return t?n.createElement(m,a(a({ref:r},p),{},{components:t})):n.createElement(m,a({ref:r},p))}));function f(e,r){var t=arguments,o=r&&r.mdxType;if("string"==typeof e||o){var u=t.length,a=new Array(u);a[0]=d;var i={};for(var c in r)hasOwnProperty.call(r,c)&&(i[c]=r[c]);i.originalType=e,i.mdxType="string"==typeof e?e:o,a[1]=i;for(var s=2;s<u;s++)a[s]=t[s];return n.createElement.apply(null,a)}return n.createElement.apply(null,t)}d.displayName="MDXCreateElement"},6047:function(e,r,t){t.r(r),t.d(r,{assets:function(){return p},contentTitle:function(){return c},default:function(){return f},frontMatter:function(){return i},metadata:function(){return s},toc:function(){return l}});var n=t(7462),o=t(3366),u=(t(7294),t(3905)),a=["components"],i={id:"drop-course",title:"DropCourse",hide_table_of_contents:!1},c=void 0,s={unversionedId:"group-by/course/mutations/drop-course",id:"group-by/course/mutations/drop-course",title:"DropCourse",description:"No description",source:"@site/docs/group-by/course/mutations/drop-course.mdx",sourceDirName:"group-by/course/mutations",slug:"/group-by/course/mutations/drop-course",permalink:"/group-by/course/mutations/drop-course",draft:!1,tags:[],version:"current",frontMatter:{id:"drop-course",title:"DropCourse",hide_table_of_contents:!1},sidebar:"group",previous:{title:"AddCourse",permalink:"/group-by/course/mutations/add-course"},next:{title:"allCourses",permalink:"/group-by/course/queries/all-courses"}},p={},l=[{value:"Arguments",id:"arguments",level:3},{value:"<code>input</code> (<code>String</code>)",id:"input-string",level:4},{value:"Type",id:"type",level:3},{value:"<code>String</code>",id:"string",level:4}],d={toc:l};function f(e){var r=e.components,t=(0,o.Z)(e,a);return(0,u.kt)("wrapper",(0,n.Z)({},d,t,{components:r,mdxType:"MDXLayout"}),(0,u.kt)("p",null,"No description"),(0,u.kt)("pre",null,(0,u.kt)("code",{parentName:"pre",className:"language-graphql"},"DropCourse(\n  input: String\n): String\n")),(0,u.kt)("h3",{id:"arguments"},"Arguments"),(0,u.kt)("h4",{id:"input-string"},(0,u.kt)("inlineCode",{parentName:"h4"},"input")," (",(0,u.kt)("a",{parentName:"h4",href:"/group-by/common/scalars/string"},(0,u.kt)("inlineCode",{parentName:"a"},"String")),")"),(0,u.kt)("h3",{id:"type"},"Type"),(0,u.kt)("h4",{id:"string"},(0,u.kt)("a",{parentName:"h4",href:"/group-by/common/scalars/string"},(0,u.kt)("inlineCode",{parentName:"a"},"String"))),(0,u.kt)("p",null,"The ",(0,u.kt)("inlineCode",{parentName:"p"},"String")," scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."))}f.isMDXComponent=!0}}]);