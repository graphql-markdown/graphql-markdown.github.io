"use strict";(self.webpackChunk_graphql_markdown_website=self.webpackChunk_graphql_markdown_website||[]).push([[7327],{4137:(e,t,r)=>{r.d(t,{Zo:()=>u,kt:()=>m});var n=r(7294);function a(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function l(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function i(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?l(Object(r),!0).forEach((function(t){a(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):l(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function o(e,t){if(null==e)return{};var r,n,a=function(e,t){if(null==e)return{};var r,n,a={},l=Object.keys(e);for(n=0;n<l.length;n++)r=l[n],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(n=0;n<l.length;n++)r=l[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var s=n.createContext({}),p=function(e){var t=n.useContext(s),r=t;return e&&(r="function"==typeof e?e(t):i(i({},t),e)),r},u=function(e){var t=p(e.components);return n.createElement(s.Provider,{value:t},e.children)},c="mdxType",f={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},d=n.forwardRef((function(e,t){var r=e.components,a=e.mdxType,l=e.originalType,s=e.parentName,u=o(e,["components","mdxType","originalType","parentName"]),c=p(r),d=a,m=c["".concat(s,".").concat(d)]||c[d]||f[d]||l;return r?n.createElement(m,i(i({ref:t},u),{},{components:r})):n.createElement(m,i({ref:t},u))}));function m(e,t){var r=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var l=r.length,i=new Array(l);i[0]=d;var o={};for(var s in t)hasOwnProperty.call(t,s)&&(o[s]=t[s]);o.originalType=e,o[c]="string"==typeof e?e:a,i[1]=o;for(var p=2;p<l;p++)i[p]=r[p];return n.createElement.apply(null,i)}return n.createElement.apply(null,r)}d.displayName="MDXCreateElement"},3088:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>s,contentTitle:()=>i,default:()=>c,frontMatter:()=>l,metadata:()=>o,toc:()=>p});var n=r(7462),a=(r(7294),r(4137));const l={title:"fs",pagination_prev:null,pagination_next:null,toc_max_heading_level:2},i=void 0,o={unversionedId:"utils/fs",id:"utils/fs",title:"fs",description:"Library of helper functions for handling files and folders.",source:"@site/api/utils/fs.md",sourceDirName:"utils",slug:"/utils/fs",permalink:"/api/utils/fs",draft:!1,tags:[],version:"current",frontMatter:{title:"fs",pagination_prev:null,pagination_next:null,toc_max_heading_level:2},sidebar:"defaultSidebar"},s={},p=[{value:"ensureDir()",id:"ensuredir",level:2},{value:"Parameters",id:"parameters",level:3},{value:"Returns",id:"returns",level:3},{value:"Example",id:"example",level:3},{value:"Source",id:"source",level:3},{value:"fileExists()",id:"fileexists",level:2},{value:"Parameters",id:"parameters-1",level:3},{value:"Returns",id:"returns-1",level:3},{value:"Example",id:"example-1",level:3},{value:"Source",id:"source-1",level:3},{value:"saveFile()",id:"savefile",level:2},{value:"Parameters",id:"parameters-2",level:3},{value:"Returns",id:"returns-2",level:3},{value:"Example",id:"example-2",level:3},{value:"Source",id:"source-2",level:3}],u={toc:p};function c(e){let{components:t,...r}=e;return(0,a.kt)("wrapper",(0,n.Z)({},u,r,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("p",null,"Library of helper functions for handling files and folders."),(0,a.kt)("h2",{id:"ensuredir"},"ensureDir()"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-ts"},"ensureDir(location): Promise<void>\n")),(0,a.kt)("p",null,"Asynchronously create a folder structure if it does not exist."),(0,a.kt)("h3",{id:"parameters"},"Parameters"),(0,a.kt)("p",null,"\u25aa ",(0,a.kt)("strong",{parentName:"p"},"location"),": ",(0,a.kt)("inlineCode",{parentName:"p"},"string")),(0,a.kt)("p",null,"folder structure in path format."),(0,a.kt)("h3",{id:"returns"},"Returns"),(0,a.kt)("h3",{id:"example"},"Example"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js"},"import { ensureDir } from '@graphql-markdown/utils/fs';\n\nawait ensureDir(\"./.temp/local\")\n\n// Creates both folders if they do not exists.\n")),(0,a.kt)("h3",{id:"source"},"Source"),(0,a.kt)("p",null,(0,a.kt)("a",{parentName:"p",href:"https://github.com/graphql-markdown/graphql-markdown/blob/fdeba50/packages/utils/src/fs.ts#L57"},"fs.ts:57")),(0,a.kt)("hr",null),(0,a.kt)("h2",{id:"fileexists"},"fileExists()"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-ts"},"fileExists(location): Promise<boolean>\n")),(0,a.kt)("p",null,"Asynchronously check if a file or folder exists at the path location."),(0,a.kt)("h3",{id:"parameters-1"},"Parameters"),(0,a.kt)("p",null,"\u25aa ",(0,a.kt)("strong",{parentName:"p"},"location"),": ",(0,a.kt)("inlineCode",{parentName:"p"},"string")),(0,a.kt)("p",null,"file or folder location."),(0,a.kt)("h3",{id:"returns-1"},"Returns"),(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"true")," if the path is valid, else ",(0,a.kt)("inlineCode",{parentName:"p"},"false")," if not."),(0,a.kt)("h3",{id:"example-1"},"Example"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js"},"import { fileExists } from '@graphql-markdown/utils/fs';\n\nawait fileExists(\"./.temp/local\")\n\n// Expected true if path is valid, false if not\n")),(0,a.kt)("h3",{id:"source-1"},"Source"),(0,a.kt)("p",null,(0,a.kt)("a",{parentName:"p",href:"https://github.com/graphql-markdown/graphql-markdown/blob/fdeba50/packages/utils/src/fs.ts#L32"},"fs.ts:32")),(0,a.kt)("hr",null),(0,a.kt)("h2",{id:"savefile"},"saveFile()"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-ts"},"saveFile(\n   location, \n   content, \nprettify?): Promise<void>\n")),(0,a.kt)("p",null,"Asynchronously save a file with a string content at specified location in local FS.\nOverride the file content if the file already exists.\nThe function calls ",(0,a.kt)("inlineCode",{parentName:"p"},"ensureDir(dirname(location))")," to create the folder structure if missing."),(0,a.kt)("h3",{id:"parameters-2"},"Parameters"),(0,a.kt)("p",null,"\u25aa ",(0,a.kt)("strong",{parentName:"p"},"location"),": ",(0,a.kt)("inlineCode",{parentName:"p"},"string")),(0,a.kt)("p",null,"file location."),(0,a.kt)("p",null,"\u25aa ",(0,a.kt)("strong",{parentName:"p"},"content"),": ",(0,a.kt)("inlineCode",{parentName:"p"},"string")),(0,a.kt)("p",null,"data to be written into the file (UTF-8 string)."),(0,a.kt)("p",null,"\u25aa ",(0,a.kt)("strong",{parentName:"p"},"prettify?"),": ",(0,a.kt)("inlineCode",{parentName:"p"},"PrettifyCallbackFunction")),(0,a.kt)("p",null,"optional callback function for prettifying the content."),(0,a.kt)("h3",{id:"returns-2"},"Returns"),(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"true")," if the path is valid, else ",(0,a.kt)("inlineCode",{parentName:"p"},"false")," if not."),(0,a.kt)("h3",{id:"example-2"},"Example"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js"},'import { saveFile } from \'@graphql-markdown/utils/fs\';\n\nawait saveFile("./.temp/local.md", "foobar")\n\n// Created .temp folder if it does not exists, and save data into local.md\n')),(0,a.kt)("h3",{id:"source-2"},"Source"),(0,a.kt)("p",null,(0,a.kt)("a",{parentName:"p",href:"https://github.com/graphql-markdown/graphql-markdown/blob/fdeba50/packages/utils/src/fs.ts#L85"},"fs.ts:85")))}c.isMDXComponent=!0}}]);