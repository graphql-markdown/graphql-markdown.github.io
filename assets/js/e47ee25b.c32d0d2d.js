"use strict";(self.webpackChunk_graphql_markdown_website=self.webpackChunk_graphql_markdown_website||[]).push([[8415],{4137:(e,a,r)=>{r.d(a,{Zo:()=>c,kt:()=>h});var t=r(7294);function n(e,a,r){return a in e?Object.defineProperty(e,a,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[a]=r,e}function o(e,a){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(e);a&&(t=t.filter((function(a){return Object.getOwnPropertyDescriptor(e,a).enumerable}))),r.push.apply(r,t)}return r}function l(e){for(var a=1;a<arguments.length;a++){var r=null!=arguments[a]?arguments[a]:{};a%2?o(Object(r),!0).forEach((function(a){n(e,a,r[a])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):o(Object(r)).forEach((function(a){Object.defineProperty(e,a,Object.getOwnPropertyDescriptor(r,a))}))}return e}function p(e,a){if(null==e)return{};var r,t,n=function(e,a){if(null==e)return{};var r,t,n={},o=Object.keys(e);for(t=0;t<o.length;t++)r=o[t],a.indexOf(r)>=0||(n[r]=e[r]);return n}(e,a);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(t=0;t<o.length;t++)r=o[t],a.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(n[r]=e[r])}return n}var i=t.createContext({}),s=function(e){var a=t.useContext(i),r=a;return e&&(r="function"==typeof e?e(a):l(l({},a),e)),r},c=function(e){var a=s(e.components);return t.createElement(i.Provider,{value:a},e.children)},d="mdxType",m={inlineCode:"code",wrapper:function(e){var a=e.children;return t.createElement(t.Fragment,{},a)}},u=t.forwardRef((function(e,a){var r=e.components,n=e.mdxType,o=e.originalType,i=e.parentName,c=p(e,["components","mdxType","originalType","parentName"]),d=s(r),u=n,h=d["".concat(i,".").concat(u)]||d[u]||m[u]||o;return r?t.createElement(h,l(l({ref:a},c),{},{components:r})):t.createElement(h,l({ref:a},c))}));function h(e,a){var r=arguments,n=a&&a.mdxType;if("string"==typeof e||n){var o=r.length,l=new Array(o);l[0]=u;var p={};for(var i in a)hasOwnProperty.call(a,i)&&(p[i]=a[i]);p.originalType=e,p[d]="string"==typeof e?e:n,l[1]=p;for(var s=2;s<o;s++)l[s]=r[s];return t.createElement.apply(null,l)}return t.createElement.apply(null,r)}u.displayName="MDXCreateElement"},3720:(e,a,r)=>{r.r(a),r.d(a,{assets:()=>i,contentTitle:()=>l,default:()=>d,frontMatter:()=>o,metadata:()=>p,toc:()=>s});var t=r(7462),n=(r(7294),r(4137));const o={title:"loader",pagination_prev:null,pagination_next:null,toc_max_heading_level:2},l=void 0,p={unversionedId:"graphql/loader",id:"graphql/loader",title:"loader",description:"Library for GraphQL schema loading and loaders config processing.",source:"@site/api/graphql/loader.md",sourceDirName:"graphql",slug:"/graphql/loader",permalink:"/api/graphql/loader",draft:!1,tags:[],version:"current",frontMatter:{title:"loader",pagination_prev:null,pagination_next:null,toc_max_heading_level:2},sidebar:"defaultSidebar"},i={},s=[{value:"getDocumentLoaders()",id:"getdocumentloaders",level:2},{value:"Parameters",id:"parameters",level:3},{value:"Returns",id:"returns",level:3},{value:"Throws",id:"throws",level:3},{value:"Example",id:"example",level:3},{value:"Source",id:"source",level:3},{value:"loadSchema()",id:"loadschema",level:2},{value:"Parameters",id:"parameters-1",level:3},{value:"Returns",id:"returns-1",level:3},{value:"Example",id:"example-1",level:3},{value:"Source",id:"source-1",level:3}],c={toc:s};function d(e){let{components:a,...r}=e;return(0,n.kt)("wrapper",(0,t.Z)({},c,r,{components:a,mdxType:"MDXLayout"}),(0,n.kt)("p",null,"Library for GraphQL schema loading and ",(0,n.kt)("inlineCode",{parentName:"p"},"loaders")," config processing."),(0,n.kt)("h2",{id:"getdocumentloaders"},"getDocumentLoaders()"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-ts"},"getDocumentLoaders(loadersList): Promise<Maybe<LoadSchemaOptions>>\n")),(0,n.kt)("p",null,"Asynchronously returns a valid loaders list for ",(0,n.kt)("a",{parentName:"p",href:"/api/graphql/loader#loadschema"},"loadSchema")," based on the plugin config.\nImport each loader package, and instantiate a loader object."),(0,n.kt)("h3",{id:"parameters"},"Parameters"),(0,n.kt)("p",null,"\u25aa ",(0,n.kt)("strong",{parentName:"p"},"loadersList"),": ",(0,n.kt)("inlineCode",{parentName:"p"},"Maybe"),"\\<",(0,n.kt)("inlineCode",{parentName:"p"},"LoaderOption"),">"),(0,n.kt)("p",null,"the list of loaders defined in the plugin config."),(0,n.kt)("h3",{id:"returns"},"Returns"),(0,n.kt)("p",null,"a list of loader objects."),(0,n.kt)("h3",{id:"throws"},"Throws"),(0,n.kt)("p",null,"an ",(0,n.kt)("inlineCode",{parentName:"p"},"Error")," if no loader has been loaded, or if an error occurred while importing loaders."),(0,n.kt)("h3",{id:"example"},"Example"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-js"},'import { getDocumentLoaders, loadSchema } from "@graphql-markdown/utils/graphql"\n\nconst loaderList = {\n  GraphQLFileLoader: "@graphql-tools/graphql-file-loader",\n};\n\nconst loaders = await getDocumentLoaders(loaderList);\n\nconst schema = await loadSchema("schema.graphql", {\n  loaders,\n  rootTypes: { query: "Root", subscription: "" },\n});\n')),(0,n.kt)("h3",{id:"source"},"Source"),(0,n.kt)("p",null,(0,n.kt)("a",{parentName:"p",href:"https://github.com/graphql-markdown/graphql-markdown/blob/579869c/packages/graphql/src/loader.ts#L106"},"packages/graphql/src/loader.ts:106")),(0,n.kt)("hr",null),(0,n.kt)("h2",{id:"loadschema"},"loadSchema()"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-ts"},"loadSchema(schemaLocation, options): Promise<GraphQLSchema>\n")),(0,n.kt)("p",null,"Wrapper method for ",(0,n.kt)("inlineCode",{parentName:"p"},"@graphql-tools/load.loadSchema")," to load asynchronously a GraphQL Schema from a source.\nThe wrapper will load the schema using the loader declared in ",(0,n.kt)("inlineCode",{parentName:"p"},"options"),".\nIf ",(0,n.kt)("inlineCode",{parentName:"p"},"rootTypes")," is set in the options, then the schema root types will be overridden to generate custom GraphQL schema."),(0,n.kt)("h3",{id:"parameters-1"},"Parameters"),(0,n.kt)("p",null,"\u25aa ",(0,n.kt)("strong",{parentName:"p"},"schemaLocation"),": ",(0,n.kt)("inlineCode",{parentName:"p"},"string")),(0,n.kt)("p",null,"the schema location pointer matching the loader."),(0,n.kt)("p",null,"\u25aa ",(0,n.kt)("strong",{parentName:"p"},"options"),": ",(0,n.kt)("inlineCode",{parentName:"p"},"BuildSchemaOptions")," & ",(0,n.kt)("inlineCode",{parentName:"p"},"GraphQLParseOptions")," & ",(0,n.kt)("inlineCode",{parentName:"p"},"object")," & ",(0,n.kt)("inlineCode",{parentName:"p"},"object")," & ",(0,n.kt)("inlineCode",{parentName:"p"},"object")," & ",(0,n.kt)("inlineCode",{parentName:"p"},"Partial"),"\\<",(0,n.kt)("inlineCode",{parentName:"p"},"IExecutableSchemaDefinition"),"\\<",(0,n.kt)("inlineCode",{parentName:"p"},"any"),">",">"," & ",(0,n.kt)("inlineCode",{parentName:"p"},"object")," & ",(0,n.kt)("inlineCode",{parentName:"p"},"object")),(0,n.kt)("p",null,"the schema ",(0,n.kt)("inlineCode",{parentName:"p"},"loaders"),", and optional ",(0,n.kt)("inlineCode",{parentName:"p"},"rootTypes")," override."),(0,n.kt)("h3",{id:"returns-1"},"Returns"),(0,n.kt)("p",null,"a GraphQL schema."),(0,n.kt)("h3",{id:"example-1"},"Example"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-js"},'import { loadSchema } from "@graphql-markdown/utils/graphql"\n\nconst schema = await loadSchema("schema.graphql", {\n  loaders: [new GraphQLFileLoader()],\n  rootTypes: { query: "Root", subscription: "" },\n});\n')),(0,n.kt)("h3",{id:"source-1"},"Source"),(0,n.kt)("p",null,(0,n.kt)("a",{parentName:"p",href:"https://github.com/graphql-markdown/graphql-markdown/blob/579869c/packages/graphql/src/loader.ts#L41"},"packages/graphql/src/loader.ts:41")))}d.isMDXComponent=!0}}]);