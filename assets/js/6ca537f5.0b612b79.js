"use strict";(self.webpackChunk_graphql_markdown_website=self.webpackChunk_graphql_markdown_website||[]).push([["7118"],{83632:function(e,n,t){t.r(n),t.d(n,{default:()=>c,frontMatter:()=>l,metadata:()=>i,assets:()=>a,toc:()=>o,contentTitle:()=>s});var i=JSON.parse('{"id":"printer-legacy/code","title":"code","description":"Provides utility functions for generating code representations of GraphQL types","source":"@site/api/printer-legacy/code.md","sourceDirName":"printer-legacy","slug":"/printer-legacy/code","permalink":"/api/printer-legacy/code","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{"title":"code","pagination_prev":null,"pagination_next":null,"toc_max_heading_level":2},"sidebar":"defaultSidebar"}'),r=t("85893"),d=t("50065");let l={title:"code",pagination_prev:null,pagination_next:null,toc_max_heading_level:2},s=void 0,a={},o=[{value:"printCodeArguments()",id:"printcodearguments",level:2},{value:"Parameters",id:"parameters",level:3},{value:"type",id:"type",level:4},{value:"indentationLevel",id:"indentationlevel",level:4},{value:"Returns",id:"returns",level:3},{value:"Example",id:"example",level:3},{value:"printCodeField()",id:"printcodefield",level:2},{value:"Parameters",id:"parameters-1",level:3},{value:"type",id:"type-1",level:4},{value:"options?",id:"options",level:4},{value:"indentationLevel?",id:"indentationlevel-1",level:4},{value:"Returns",id:"returns-1",level:3},{value:"Example",id:"example-1",level:3}];function p(e){let n={code:"code",h2:"h2",h3:"h3",h4:"h4",hr:"hr",p:"p",pre:"pre",...(0,d.a)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.p,{children:"Provides utility functions for generating code representations of GraphQL types\nin Markdown format. This module handles the formatting of arguments and fields\nwith proper indentation and deprecation notices."}),"\n",(0,r.jsx)(n.h2,{id:"printcodearguments",children:"printCodeArguments()"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-ts",children:"function printCodeArguments(type, indentationLevel): string;\n"})}),"\n",(0,r.jsx)(n.p,{children:"Defined in: code.ts:39"}),"\n",(0,r.jsx)(n.p,{children:"Generates a string representation of GraphQL arguments with proper formatting and indentation."}),"\n",(0,r.jsx)(n.h3,{id:"parameters",children:"Parameters"}),"\n",(0,r.jsx)(n.h4,{id:"type",children:"type"}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.code,{children:"unknown"})}),"\n",(0,r.jsx)(n.p,{children:"The GraphQL type object containing arguments to print"}),"\n",(0,r.jsx)(n.h4,{id:"indentationlevel",children:"indentationLevel"}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.code,{children:"number"})," = ",(0,r.jsx)(n.code,{children:"1"})]}),"\n",(0,r.jsx)(n.p,{children:"The level of indentation to apply (default: 1)"}),"\n",(0,r.jsx)(n.h3,{id:"returns",children:"Returns"}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.code,{children:"string"})}),"\n",(0,r.jsx)(n.p,{children:"A formatted string of arguments or an empty string if no arguments exist"}),"\n",(0,r.jsx)(n.h3,{id:"example",children:"Example"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"printCodeArguments({ args: [{ name: 'id', type: 'ID!' }] })\n// Returns:\n// (\n//   id: ID!\n// )\n"})}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h2,{id:"printcodefield",children:"printCodeField()"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-ts",children:"function printCodeField(\n   type, \n   options?, \n   indentationLevel?): string | MDXString;\n"})}),"\n",(0,r.jsx)(n.p,{children:"Defined in: code.ts:89"}),"\n",(0,r.jsx)(n.p,{children:"Generates a string representation of a GraphQL field including its arguments,\nreturn type, and deprecation status."}),"\n",(0,r.jsx)(n.h3,{id:"parameters-1",children:"Parameters"}),"\n",(0,r.jsx)(n.h4,{id:"type-1",children:"type"}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.code,{children:"unknown"})}),"\n",(0,r.jsx)(n.p,{children:"The GraphQL field type object to print"}),"\n",(0,r.jsx)(n.h4,{id:"options",children:"options?"}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.code,{children:"PrintTypeOptions"})}),"\n",(0,r.jsx)(n.p,{children:"Optional configuration for printing the type"}),"\n",(0,r.jsx)(n.h4,{id:"indentationlevel-1",children:"indentationLevel?"}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.code,{children:"number"})," = ",(0,r.jsx)(n.code,{children:"0"})]}),"\n",(0,r.jsx)(n.p,{children:"The level of indentation to apply (default: 0)"}),"\n",(0,r.jsx)(n.h3,{id:"returns-1",children:"Returns"}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.code,{children:"string"})," | ",(0,r.jsx)(n.code,{children:"MDXString"})]}),"\n",(0,r.jsx)(n.p,{children:"A formatted string representing the field or an empty string if the field should not be printed"}),"\n",(0,r.jsx)(n.h3,{id:"example-1",children:"Example"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"printCodeField({ name: 'user', type: 'User!', args: [{ name: 'id', type: 'ID!' }] })\n// Returns: user(\n//   id: ID!\n// ): User!\n"})})]})}function c(e={}){let{wrapper:n}={...(0,d.a)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(p,{...e})}):p(e)}},50065:function(e,n,t){t.d(n,{Z:function(){return s},a:function(){return l}});var i=t(67294);let r={},d=i.createContext(r);function l(e){let n=i.useContext(d);return i.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function s(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:l(e.components),i.createElement(d.Provider,{value:n},e.children)}}}]);