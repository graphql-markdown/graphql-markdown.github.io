"use strict";(self.webpackChunk_graphql_markdown_website=self.webpackChunk_graphql_markdown_website||[]).push([["729"],{97872:function(e,t,n){n.r(t),n.d(t,{Bullet:()=>d,SpecifiedBy:()=>m,Badge:()=>p,default:()=>g,frontMatter:()=>i,metadata:()=>l,Details:()=>x,assets:()=>c,toc:()=>u,contentTitle:()=>o});var l=JSON.parse('{"id":"common/directives/complexity","title":"complexity","description":"Example of custom directive for customDirective.","source":"@site/examples/group-by/common/directives/complexity.mdx","sourceDirName":"common/directives","slug":"/common/directives/complexity","permalink":"/examples/group-by/common/directives/complexity","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{"id":"complexity","title":"complexity"},"sidebar":"defaultSidebar","previous":{"title":"beta","permalink":"/examples/group-by/common/directives/beta"},"next":{"title":"deprecated","permalink":"/examples/group-by/common/directives/deprecated"}}'),s=n("85893"),a=n("50065"),r=n("67294");let i={id:"complexity",title:"complexity"},o=void 0,c={},d=()=>(0,s.jsx)(s.Fragment,{children:(0,s.jsx)("span",{style:{fontWeight:"normal",fontSize:".5em",color:"var(--ifm-color-secondary-darkest)"},children:"\xa0\u25CF\xa0"})}),m=e=>(0,s.jsxs)(s.Fragment,{children:["Specification",(0,s.jsx)("a",{className:"link",style:{fontSize:"1.5em",paddingLeft:"4px"},target:"_blank",href:e.url,title:"Specified by "+e.url,children:"\u2398"})]}),p=e=>(0,s.jsx)(s.Fragment,{children:(0,s.jsx)("span",{className:e.class,children:e.text})}),x=({dataOpen:e,dataClose:t,children:n,startOpen:l=!1})=>{let[a,i]=(0,r.useState)(l);return(0,s.jsxs)("details",{...a?{open:!0}:{},className:"details",style:{border:"none",boxShadow:"none",background:"var(--ifm-background-color)"},children:[(0,s.jsx)("summary",{onClick:e=>{e.preventDefault(),i(e=>!e)},style:{listStyle:"none"},children:a?e:t}),a&&n]})},u=[{value:"Arguments",id:"arguments",level:3},{value:'<code>complexity.<b>value</b></code><Bullet></Bullet><code><b>Int!</b></code> <Badge class="badge badge--secondary badge--non_null"></Badge> <Badge class="badge badge--secondary "></Badge> <Badge class="badge badge--secondary "></Badge>',id:"complexityvalueint---",level:4},{value:'<code>complexity.<b>multipliers</b></code><Bullet></Bullet><code><b>[String!]</b></code> <Badge class="badge badge--secondary "></Badge> <Badge class="badge badge--secondary "></Badge> <Badge class="badge badge--secondary "></Badge>',id:"complexitymultipliersstring---",level:4}];function h(e){let t={a:"a",code:"code",h3:"h3",h4:"h4",p:"p",pre:"pre",...(0,a.a)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsxs)(t.p,{children:["Example of custom directive for ",(0,s.jsx)(t.code,{children:"customDirective"}),"."]}),"\n",(0,s.jsxs)(t.p,{children:["See ",(0,s.jsx)(t.a,{href:"https://graphql-markdown.dev/docs/settings#customdirective",children:"documentation"})]}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-graphql",children:"directive @complexity(\n  value: Int!\n  multipliers: [String!]\n) on FIELD_DEFINITION\n"})}),"\n",(0,s.jsx)(t.h3,{id:"arguments",children:"Arguments"}),"\n",(0,s.jsxs)(t.h4,{id:"complexityvalueint---",children:[(0,s.jsx)(t.a,{href:"#",children:(0,s.jsxs)("code",{style:{fontWeight:"normal"},children:["complexity.",(0,s.jsx)("b",{children:"value"})]})}),(0,s.jsx)(d,{}),(0,s.jsx)(t.a,{href:"/examples/group-by/common/scalars/int",children:(0,s.jsx)("code",{style:{fontWeight:"normal"},children:(0,s.jsx)("b",{children:"Int!"})})})," ",(0,s.jsx)(p,{class:"badge badge--secondary badge--non_null",text:"non-null"})," ",(0,s.jsx)(p,{class:"badge badge--secondary ",text:"scalar"})," ",(0,s.jsx)(p,{class:"badge badge--secondary ",text:"common"})]}),"\n",(0,s.jsx)(t.p,{children:"The level of complexity to resolve the current field."}),"\n",(0,s.jsx)(t.p,{children:"If the field needs to call an expensive service to resolve itself, then the complexity should be at a high level but if the field is easy to resolve and not an expensive operation, the complexity should be at a low level."}),"\n",(0,s.jsxs)(t.h4,{id:"complexitymultipliersstring---",children:[(0,s.jsx)(t.a,{href:"#",children:(0,s.jsxs)("code",{style:{fontWeight:"normal"},children:["complexity.",(0,s.jsx)("b",{children:"multipliers"})]})}),(0,s.jsx)(d,{}),(0,s.jsx)(t.a,{href:"/examples/group-by/common/scalars/string",children:(0,s.jsx)("code",{style:{fontWeight:"normal"},children:(0,s.jsx)("b",{children:"[String!]"})})})," ",(0,s.jsx)(p,{class:"badge badge--secondary ",text:"list"})," ",(0,s.jsx)(p,{class:"badge badge--secondary ",text:"scalar"})," ",(0,s.jsx)(p,{class:"badge badge--secondary ",text:"common"})]}),"\n",(0,s.jsx)(t.p,{children:"An array containing names of parameters present in the GraphQL field."}),"\n",(0,s.jsx)(t.p,{children:"Use parameters values to compute the field's cost dynamically. If the parameter is an array, its multiplier value will be the length of the array."})]})}function g(e={}){let{wrapper:t}={...(0,a.a)(),...e.components};return t?(0,s.jsx)(t,{...e,children:(0,s.jsx)(h,{...e})}):h(e)}},50065:function(e,t,n){n.d(t,{Z:function(){return i},a:function(){return r}});var l=n(67294);let s={},a=l.createContext(s);function r(e){let t=l.useContext(a);return l.useMemo(function(){return"function"==typeof e?e(t):{...t,...e}},[t,e])}function i(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:r(e.components),l.createElement(a.Provider,{value:t},e.children)}}}]);